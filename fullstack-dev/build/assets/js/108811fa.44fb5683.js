"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[7997],{5741:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>o});var r=i(9729);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}},8703:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"architecture-practices/architecture-definition/scm-policy","title":"SCM Policy for NestJS & Next.js Microservices","description":"Overview","source":"@site/docs/architecture-practices/architecture-definition/scm-policy.md","sourceDirName":"architecture-practices/architecture-definition","slug":"/architecture-practices/architecture-definition/scm-policy","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/scm-policy","draft":false,"unlisted":false,"editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/docs/architecture-practices/architecture-definition/scm-policy.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Practices for NestJS & Next.js","permalink":"/fullstack-dev/docs/architecture-practices/"},"next":{"title":"Development Environment Setup for NestJS & Next.js","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/dev-environment-setup"}}');var s=i(5813),t=i(5741);const c={},o="SCM Policy for NestJS & Next.js Microservices",l={},a=[{value:"Overview",id:"overview",level:2},{value:"Maturity Level: 1 (Foundation)",id:"maturity-level-1-foundation",level:2},{value:"Branch Strategy for Microservices Architecture",id:"branch-strategy-for-microservices-architecture",level:2},{value:"Main Branches",id:"main-branches",level:3},{value:"Production Branches",id:"production-branches",level:4},{value:"Supporting Branches",id:"supporting-branches",level:4},{value:"Microservice-Specific Branching",id:"microservice-specific-branching",level:3},{value:"Naming Conventions",id:"naming-conventions",level:2},{value:"Branch Naming",id:"branch-naming",level:3},{value:"Commit Message Convention",id:"commit-message-convention",level:3},{value:"Commit Types",id:"commit-types",level:4},{value:"Pull Request Guidelines",id:"pull-request-guidelines",level:2},{value:"PR Template for Microservices",id:"pr-template-for-microservices",level:3},{value:"Review Requirements",id:"review-requirements",level:3},{value:"For NestJS Microservices",id:"for-nestjs-microservices",level:4},{value:"For Next.js Microfrontends",id:"for-nextjs-microfrontends",level:4},{value:"Merge Strategies",id:"merge-strategies",level:2},{value:"Feature Integration",id:"feature-integration",level:3},{value:"Release Process",id:"release-process",level:3},{value:"Microservice Coordination",id:"microservice-coordination",level:2},{value:"Cross-Service Dependencies",id:"cross-service-dependencies",level:3},{value:"Example: Order Service + Payment Service Integration",id:"example-order-service--payment-service-integration",level:3},{value:"Microfrontend Coordination",id:"microfrontend-coordination",level:2},{value:"Module Federation Updates",id:"module-federation-updates",level:3},{value:"Environment-Specific Configurations",id:"environment-specific-configurations",level:2},{value:"Development Environment",id:"development-environment",level:3},{value:"Staging Environment",id:"staging-environment",level:3},{value:"Production Environment",id:"production-environment",level:3},{value:"Implementation Checklist",id:"implementation-checklist",level:2},{value:"Setup Phase",id:"setup-phase",level:3},{value:"NestJS Microservice Specific",id:"nestjs-microservice-specific",level:3},{value:"Next.js Microfrontend Specific",id:"nextjs-microfrontend-specific",level:3},{value:"Tools and Automation",id:"tools-and-automation",level:2},{value:"Required Tools",id:"required-tools",level:3},{value:"Git Hooks Configuration",id:"git-hooks-configuration",level:3},{value:"Lint-staged Configuration",id:"lint-staged-configuration",level:3},{value:"Monitoring and Metrics",id:"monitoring-and-metrics",level:2},{value:"SCM Health Metrics",id:"scm-health-metrics",level:3},{value:"Microservice Metrics",id:"microservice-metrics",level:3},{value:"Troubleshooting Common Issues",id:"troubleshooting-common-issues",level:2},{value:"Merge Conflicts in Microservices",id:"merge-conflicts-in-microservices",level:3},{value:"Coordinating Frontend-Backend Changes",id:"coordinating-frontend-backend-changes",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"scm-policy-for-nestjs--nextjs-microservices",children:"SCM Policy for NestJS & Next.js Microservices"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"This guide provides a comprehensive Source Control Management (SCM) policy specifically designed for NestJS microservices and Next.js microfrontend architectures."}),"\n",(0,s.jsx)(n.h2,{id:"maturity-level-1-foundation",children:"Maturity Level: 1 (Foundation)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Area:"})," Architecture Definition",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Practice:"})," Architecture & Coding Guidance",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Phase:"})," SETUP"]}),"\n",(0,s.jsx)(n.h2,{id:"branch-strategy-for-microservices-architecture",children:"Branch Strategy for Microservices Architecture"}),"\n",(0,s.jsx)(n.h3,{id:"main-branches",children:"Main Branches"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-mermaid",children:'gitGraph:\n    commit id: "Initial"\n    branch develop\n    checkout develop\n    commit id: "Feature Integration"\n    branch feature/user-service\n    checkout feature/user-service\n    commit id: "Add Auth"\n    checkout develop\n    merge feature/user-service\n    checkout main\n    merge develop\n    commit id: "Release v1.0"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"production-branches",children:"Production Branches"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"main"})})," - Production-ready code, protected branch"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"develop"})})," - Integration branch for next release"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"supporting-branches",children:"Supporting Branches"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"feature/*"})})," - New features (e.g., ",(0,s.jsx)(n.code,{children:"feature/user-authentication"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"hotfix/*"})})," - Critical production fixes (e.g., ",(0,s.jsx)(n.code,{children:"hotfix/payment-bug"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"release/*"})})," - Release preparation (e.g., ",(0,s.jsx)(n.code,{children:"release/v1.2.0"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"microservice-specific-branching",children:"Microservice-Specific Branching"}),"\n",(0,s.jsx)(n.p,{children:"For a microservices architecture with separate repositories:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"ecommerce-platform/\n\u251c\u2500\u2500 user-service/          (NestJS microservice)\n\u251c\u2500\u2500 product-service/       (NestJS microservice)\n\u251c\u2500\u2500 order-service/         (NestJS microservice)\n\u251c\u2500\u2500 admin-frontend/        (Next.js microfrontend)\n\u251c\u2500\u2500 customer-frontend/     (Next.js microfrontend)\n\u2514\u2500\u2500 shared-components/     (Shared UI library)\n"})}),"\n",(0,s.jsx)(n.p,{children:"Each service follows the same branching strategy independently."}),"\n",(0,s.jsx)(n.h2,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,s.jsx)(n.h3,{id:"branch-naming",children:"Branch Naming"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Feature branches\nfeature/JIRA-123-user-authentication\nfeature/add-payment-gateway\nfeature/order-tracking\n\n# Hotfix branches  \nhotfix/JIRA-456-payment-timeout\nhotfix/memory-leak-fix\n\n# Release branches\nrelease/v1.2.0\nrelease/v2.0.0-beta\n"})}),"\n",(0,s.jsx)(n.h3,{id:"commit-message-convention",children:"Commit Message Convention"}),"\n",(0,s.jsx)(n.p,{children:"Use Conventional Commits format:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Format\n<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer(s)]\n\n# Examples for NestJS Microservices\nfeat(user-service): add JWT authentication middleware\nfix(order-service): resolve inventory race condition\ndocs(api): update OpenAPI specifications\ntest(payment): add integration tests for refund flow\n\n# Examples for Next.js Microfrontends\nfeat(checkout): implement payment form validation\nfix(product-catalog): resolve image loading issue\nstyle(admin-panel): update dashboard layout\nperf(search): optimize product search performance\n"})}),"\n",(0,s.jsx)(n.h4,{id:"commit-types",children:"Commit Types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"feat"}),": New feature"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"fix"}),": Bug fix"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"docs"}),": Documentation changes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"style"}),": Code style changes (formatting, etc.)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"refactor"}),": Code refactoring"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"perf"}),": Performance improvements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"test"}),": Adding or updating tests"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"chore"}),": Build process or auxiliary tool changes"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pull-request-guidelines",children:"Pull Request Guidelines"}),"\n",(0,s.jsx)(n.h3,{id:"pr-template-for-microservices",children:"PR Template for Microservices"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"## Description\nBrief description of changes\n\n## Type of Change\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] Documentation update\n\n## Microservice Impact\n- [ ] User Service\n- [ ] Product Service  \n- [ ] Order Service\n- [ ] Payment Service\n\n## Microfrontend Impact\n- [ ] Admin Frontend\n- [ ] Customer Frontend\n- [ ] Mobile App\n\n## Testing\n- [ ] Unit tests pass\n- [ ] Integration tests pass\n- [ ] E2E tests pass\n- [ ] Performance tests (if applicable)\n\n## API Changes\n- [ ] OpenAPI spec updated\n- [ ] Breaking changes documented\n- [ ] Backward compatibility maintained\n\n## Deployment\n- [ ] Database migrations included\n- [ ] Environment variables documented\n- [ ] Configuration changes noted\n\n## Screenshots (if applicable)\n\n## Related Issues\nCloses #123\n"})}),"\n",(0,s.jsx)(n.h3,{id:"review-requirements",children:"Review Requirements"}),"\n",(0,s.jsx)(n.h4,{id:"for-nestjs-microservices",children:"For NestJS Microservices"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Minimum 2 reviewers"})," (1 senior developer + 1 architect)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Required checks:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unit tests (coverage > 80%)"}),"\n",(0,s.jsx)(n.li,{children:"Integration tests"}),"\n",(0,s.jsx)(n.li,{children:"API contract validation"}),"\n",(0,s.jsx)(n.li,{children:"Security scan (Snyk, SonarQube)"}),"\n",(0,s.jsx)(n.li,{children:"Performance impact assessment"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"for-nextjs-microfrontends",children:"For Next.js Microfrontends"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Minimum 2 reviewers"})," (1 frontend developer + 1 UX reviewer)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Required checks:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Component tests (React Testing Library)"}),"\n",(0,s.jsx)(n.li,{children:"Visual regression tests (Chromatic/Percy)"}),"\n",(0,s.jsx)(n.li,{children:"Accessibility checks (axe-core)"}),"\n",(0,s.jsx)(n.li,{children:"Bundle size analysis"}),"\n",(0,s.jsx)(n.li,{children:"Cross-browser compatibility"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"merge-strategies",children:"Merge Strategies"}),"\n",(0,s.jsx)(n.h3,{id:"feature-integration",children:"Feature Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Squash and merge for clean history\ngit checkout develop\ngit merge --squash feature/user-authentication\ngit commit -m "feat(user-service): add JWT authentication\n\n- Implement JWT middleware\n- Add user role-based access control  \n- Update OpenAPI documentation\n- Add integration tests\n\nCloses #123"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"release-process",children:"Release Process"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Create release branch\ngit checkout develop\ngit checkout -b release/v1.2.0\n\n# Finalize release\ngit checkout main\ngit merge --no-ff release/v1.2.0\ngit tag -a v1.2.0 -m "Release version 1.2.0"\n\n# Merge back to develop\ngit checkout develop  \ngit merge --no-ff release/v1.2.0\n'})}),"\n",(0,s.jsx)(n.h2,{id:"microservice-coordination",children:"Microservice Coordination"}),"\n",(0,s.jsx)(n.h3,{id:"cross-service-dependencies",children:"Cross-Service Dependencies"}),"\n",(0,s.jsx)(n.p,{children:"When changes affect multiple services:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Create coordination PR"})," in infrastructure repository"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Update service contracts"})," in shared schema repository"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Coordinate deployment order"})," through release planning"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use feature flags"})," for gradual rollout"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-order-service--payment-service-integration",children:"Example: Order Service + Payment Service Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# 1. Update shared contracts\ngit checkout -b feature/payment-integration contracts-repo\n\n# 2. Implement in order service\ngit checkout -b feature/payment-integration order-service\n\n# 3. Implement in payment service  \ngit checkout -b feature/payment-integration payment-service\n\n# 4. Update frontend\ngit checkout -b feature/payment-integration checkout-frontend\n"})}),"\n",(0,s.jsx)(n.h2,{id:"microfrontend-coordination",children:"Microfrontend Coordination"}),"\n",(0,s.jsx)(n.h3,{id:"module-federation-updates",children:"Module Federation Updates"}),"\n",(0,s.jsx)(n.p,{children:"For Next.js microfrontends using Module Federation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Shell application\ngit checkout -b feature/add-user-dashboard shell-app\n\n# User microfrontend\ngit checkout -b feature/user-dashboard user-mf\n\n# Coordinate through package.json updates\n# and module federation configuration\n"})}),"\n",(0,s.jsx)(n.h2,{id:"environment-specific-configurations",children:"Environment-Specific Configurations"}),"\n",(0,s.jsx)(n.h3,{id:"development-environment",children:"Development Environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Branch protection:"})," Disabled for rapid iteration"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Auto-merge:"})," Enabled for approved PRs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deployment:"})," Automatic on merge to develop"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"staging-environment",children:"Staging Environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Branch protection:"})," Required status checks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Manual approval:"})," Required for releases"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deployment:"})," Automatic on release branch creation"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"production-environment",children:"Production Environment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Branch protection:"})," Strict (no direct pushes)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Multiple approvals:"})," Required (2+ senior developers)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deployment:"})," Manual trigger only"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rollback plan:"})," Automated via tags"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"implementation-checklist",children:"Implementation Checklist"}),"\n",(0,s.jsx)(n.h3,{id:"setup-phase",children:"Setup Phase"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create branch protection rules"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure automated testing"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up code quality gates"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure deployment pipelines"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Create PR templates"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Document rollback procedures"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"nestjs-microservice-specific",children:"NestJS Microservice Specific"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure API versioning strategy"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up service mesh integration"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure distributed tracing"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up health check endpoints"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure metrics collection"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"nextjs-microfrontend-specific",children:"Next.js Microfrontend Specific"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure Module Federation"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up shared component library"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure bundle analysis"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up visual regression testing"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure performance monitoring"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"tools-and-automation",children:"Tools and Automation"}),"\n",(0,s.jsx)(n.h3,{id:"required-tools",children:"Required Tools"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "husky": "^8.0.0",\n  "lint-staged": "^13.0.0",\n  "@commitlint/cli": "^17.0.0",\n  "@commitlint/config-conventional": "^17.0.0"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"git-hooks-configuration",children:"Git Hooks Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// .husky/pre-commit\nnpx lint-staged\n\n// .husky/commit-msg  \nnpx --no -- commitlint --edit ${1}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"lint-staged-configuration",children:"Lint-staged Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "lint-staged": {\n    "*.{ts,tsx}": ["eslint --fix", "prettier --write"],\n    "*.{json,md}": ["prettier --write"],\n    "*.{css,scss}": ["stylelint --fix"]\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"monitoring-and-metrics",children:"Monitoring and Metrics"}),"\n",(0,s.jsx)(n.h3,{id:"scm-health-metrics",children:"SCM Health Metrics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PR merge time"})," (target: < 24 hours)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Build success rate"})," (target: > 95%)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Code review coverage"})," (target: 100%)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Branch age"})," (target: < 7 days)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"microservice-metrics",children:"Microservice Metrics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Service deployment frequency"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Cross-service dependency changes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"API contract violations"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Rollback frequency"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting-common-issues",children:"Troubleshooting Common Issues"}),"\n",(0,s.jsx)(n.h3,{id:"merge-conflicts-in-microservices",children:"Merge Conflicts in Microservices"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Use automated conflict resolution\ngit config merge.ours.driver true\ngit config merge.npm.driver "npm install"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"coordinating-frontend-backend-changes",children:"Coordinating Frontend-Backend Changes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Use feature flags for gradual rollout\n# Frontend checks feature flag before using new API\nif (featureFlags.newPaymentFlow) {\n  // Use new payment API\n} else {\n  // Use legacy payment API  \n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/dev-environment-setup",children:"Development Environment Setup"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/coding-standards",children:"Coding Standards"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/code-quality-tools",children:"Code Quality Tools"})}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Next Steps:"})," Once SCM policy is established, proceed to ",(0,s.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/dev-environment-setup",children:"Development Environment Setup"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);