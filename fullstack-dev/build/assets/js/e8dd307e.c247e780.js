"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[7913],{3952:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"architecture-practices/architecture-definition/dev-environment-setup","title":"Development Environment Setup for NestJS & Next.js","description":"Overview","source":"@site/docs/architecture-practices/architecture-definition/dev-environment-setup.md","sourceDirName":"architecture-practices/architecture-definition","slug":"/architecture-practices/architecture-definition/dev-environment-setup","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/dev-environment-setup","draft":false,"unlisted":false,"editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/docs/architecture-practices/architecture-definition/dev-environment-setup.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SCM Policy for NestJS & Next.js Microservices","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/scm-policy"},"next":{"title":"Coding Standards & Conventions for NestJS & Next.js","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/coding-standards"}}');var r=s(5813),o=s(7814);const i={},c="Development Environment Setup for NestJS & Next.js",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Maturity Level: 1 (Foundation)",id:"maturity-level-1-foundation",level:2},{value:"Required Software &amp; Tools",id:"required-software--tools",level:2},{value:"Core Development Tools",id:"core-development-tools",level:3},{value:"Node.js &amp; Package Managers",id:"nodejs--package-managers",level:4},{value:"Development Environment",id:"development-environment",level:4},{value:"NestJS Microservices Stack",id:"nestjs-microservices-stack",level:3},{value:"Core Dependencies",id:"core-dependencies",level:4},{value:"Database &amp; Infrastructure",id:"database--infrastructure",level:4},{value:"Next.js Microfrontend Stack",id:"nextjs-microfrontend-stack",level:3},{value:"Core Dependencies",id:"core-dependencies-1",level:4},{value:"Project Structure Setup",id:"project-structure-setup",level:2},{value:"Monorepo Structure",id:"monorepo-structure",level:3},{value:"Workspace Configuration",id:"workspace-configuration",level:3},{value:"Root package.json",id:"root-packagejson",level:4},{value:"pnpm-workspace.yaml",id:"pnpm-workspaceyaml",level:4},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Environment Variables Structure",id:"environment-variables-structure",level:3},{value:"NestJS Microservice (.env)",id:"nestjs-microservice-env",level:4},{value:"Next.js Microfrontend (.env.local)",id:"nextjs-microfrontend-envlocal",level:4},{value:"IDE Configuration",id:"ide-configuration",level:2},{value:"VS Code Settings",id:"vs-code-settings",level:3},{value:".vscode/settings.json",id:"vscodesettingsjson",level:4},{value:".vscode/extensions.json",id:"vscodeextensionsjson",level:4},{value:".vscode/launch.json",id:"vscodelaunchjson",level:4},{value:"Development Scripts",id:"development-scripts",level:2},{value:"Setup Scripts",id:"setup-scripts",level:3},{value:"scripts/setup-dev.sh",id:"scriptssetup-devsh",level:4},{value:"scripts/start-dev.sh",id:"scriptsstart-devsh",level:4},{value:"Quick Start Commands",id:"quick-start-commands",level:3},{value:"Docker Development Environment",id:"docker-development-environment",level:2},{value:"Development Dockerfile",id:"development-dockerfile",level:3},{value:"apps/user-service/Dockerfile.dev",id:"appsuser-servicedockerfiledev",level:4},{value:"Docker Compose for Development",id:"docker-compose-for-development",level:3},{value:"Testing Environment",id:"testing-environment",level:2},{value:"Jest Configuration",id:"jest-configuration",level:3},{value:"apps/user-service/jest.config.js",id:"appsuser-servicejestconfigjs",level:4},{value:"Troubleshooting Guide",id:"troubleshooting-guide",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Port Conflicts",id:"port-conflicts",level:4},{value:"Database Connection Issues",id:"database-connection-issues",level:4},{value:"Node Modules Issues",id:"node-modules-issues",level:4},{value:"Environment Health Checks",id:"environment-health-checks",level:2},{value:"Health Check Script",id:"health-check-script",level:3},{value:"Related Documentation",id:"related-documentation",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"development-environment-setup-for-nestjs--nextjs",children:"Development Environment Setup for NestJS & Next.js"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"Comprehensive guide for setting up local development environments for NestJS microservices and Next.js microfrontend architecture."}),"\n",(0,r.jsx)(n.h2,{id:"maturity-level-1-foundation",children:"Maturity Level: 1 (Foundation)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Area:"})," Architecture Definition",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Practice:"})," Architecture & Coding Guidance",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Phase:"})," SETUP"]}),"\n",(0,r.jsx)(n.h2,{id:"required-software--tools",children:"Required Software & Tools"}),"\n",(0,r.jsx)(n.h3,{id:"core-development-tools",children:"Core Development Tools"}),"\n",(0,r.jsx)(n.h4,{id:"nodejs--package-managers",children:"Node.js & Package Managers"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Node.js (LTS version)\nnode: ">=18.17.0"\nnpm: ">=9.0.0"\npnpm: ">=8.0.0"  # Recommended for monorepos\n\n# Version management\nnvm: "^0.39.0"    # Node Version Manager\nvolta: "^1.1.0"   # Alternative to nvm\n'})}),"\n",(0,r.jsx)(n.h4,{id:"development-environment",children:"Development Environment"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Essential tools\ngit: ">=2.40.0"\ndocker: ">=24.0.0"\ndocker-compose: ">=2.20.0"\nkubectl: ">=1.27.0"\n\n# Code editors\nvscode: "^1.80.0"\nwebstorm: "^2023.2" # Alternative\n'})}),"\n",(0,r.jsx)(n.h3,{id:"nestjs-microservices-stack",children:"NestJS Microservices Stack"}),"\n",(0,r.jsx)(n.h4,{id:"core-dependencies",children:"Core Dependencies"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "dependencies": {\n    "@nestjs/core": "^10.0.0",\n    "@nestjs/common": "^10.0.0",\n    "@nestjs/platform-express": "^10.0.0",\n    "@nestjs/microservices": "^10.0.0",\n    "@nestjs/swagger": "^7.0.0",\n    "@nestjs/config": "^3.0.0",\n    "@nestjs/typeorm": "^10.0.0",\n    "typeorm": "^0.3.0",\n    "postgres": "^14.0.0",\n    "redis": "^4.6.0",\n    "class-validator": "^0.14.0",\n    "class-transformer": "^0.5.0"\n  },\n  "devDependencies": {\n    "@nestjs/cli": "^10.0.0",\n    "@nestjs/testing": "^10.0.0",\n    "jest": "^29.5.0",\n    "supertest": "^6.3.0",\n    "eslint": "^8.42.0",\n    "prettier": "^3.0.0"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"database--infrastructure",children:"Database & Infrastructure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.dev.yml\nversion: \'3.8\'\nservices:\n  postgres:\n    image: postgres:15\n    environment:\n      POSTGRES_DB: ecommerce_dev\n      POSTGRES_USER: dev\n      POSTGRES_PASSWORD: devpass\n    ports:\n      - "5432:5432"\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - "6379:6379"\n    command: redis-server --appendonly yes\n\n  rabbitmq:\n    image: rabbitmq:3-management\n    ports:\n      - "5672:5672"\n      - "15672:15672"\n    environment:\n      RABBITMQ_DEFAULT_USER: dev\n      RABBITMQ_DEFAULT_PASS: devpass\n\nvolumes:\n  postgres_data:\n'})}),"\n",(0,r.jsx)(n.h3,{id:"nextjs-microfrontend-stack",children:"Next.js Microfrontend Stack"}),"\n",(0,r.jsx)(n.h4,{id:"core-dependencies-1",children:"Core Dependencies"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "dependencies": {\n    "next": "^14.0.0",\n    "react": "^18.2.0",\n    "react-dom": "^18.2.0",\n    "@next/bundle-analyzer": "^14.0.0",\n    "@module-federation/nextjs-mf": "^7.0.0",\n    "tailwindcss": "^3.3.0",\n    "zustand": "^4.4.0",\n    "react-query": "^3.39.0",\n    "axios": "^1.5.0"\n  },\n  "devDependencies": {\n    "@types/react": "^18.2.0",\n    "@types/node": "^20.5.0",\n    "typescript": "^5.2.0",\n    "eslint": "^8.48.0",\n    "eslint-config-next": "^14.0.0",\n    "prettier": "^3.0.0",\n    "@testing-library/react": "^13.4.0",\n    "@testing-library/jest-dom": "^6.1.0",\n    "cypress": "^13.0.0"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"project-structure-setup",children:"Project Structure Setup"}),"\n",(0,r.jsx)(n.h3,{id:"monorepo-structure",children:"Monorepo Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ecommerce-platform/\n\u251c\u2500\u2500 apps/\n\u2502   \u251c\u2500\u2500 api-gateway/           # NestJS API Gateway\n\u2502   \u251c\u2500\u2500 user-service/          # NestJS Microservice\n\u2502   \u251c\u2500\u2500 product-service/       # NestJS Microservice\n\u2502   \u251c\u2500\u2500 order-service/         # NestJS Microservice\n\u2502   \u251c\u2500\u2500 admin-frontend/        # Next.js Microfrontend\n\u2502   \u251c\u2500\u2500 customer-frontend/     # Next.js Microfrontend\n\u2502   \u2514\u2500\u2500 mobile-app/           # React Native (optional)\n\u251c\u2500\u2500 libs/\n\u2502   \u251c\u2500\u2500 shared-types/         # TypeScript definitions\n\u2502   \u251c\u2500\u2500 ui-components/        # Shared UI library\n\u2502   \u251c\u2500\u2500 utils/               # Shared utilities\n\u2502   \u2514\u2500\u2500 constants/           # Shared constants\n\u251c\u2500\u2500 tools/\n\u2502   \u251c\u2500\u2500 eslint-config/       # Shared ESLint config\n\u2502   \u251c\u2500\u2500 jest-config/         # Shared Jest config\n\u2502   \u2514\u2500\u2500 webpack-config/      # Shared Webpack config\n\u251c\u2500\u2500 docker/\n\u2502   \u251c\u2500\u2500 development/         # Dev containers\n\u2502   \u251c\u2500\u2500 production/          # Prod containers\n\u2502   \u2514\u2500\u2500 scripts/            # Docker scripts\n\u251c\u2500\u2500 k8s/\n\u2502   \u251c\u2500\u2500 development/         # Dev Kubernetes manifests\n\u2502   \u251c\u2500\u2500 staging/            # Staging manifests\n\u2502   \u2514\u2500\u2500 production/         # Production manifests\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 pnpm-workspace.yaml\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docker-compose.dev.yml\n\u2514\u2500\u2500 README.md\n"})}),"\n",(0,r.jsx)(n.h3,{id:"workspace-configuration",children:"Workspace Configuration"}),"\n",(0,r.jsx)(n.h4,{id:"root-packagejson",children:"Root package.json"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "name": "ecommerce-platform",\n  "private": true,\n  "scripts": {\n    "dev": "concurrently \\"pnpm dev:services\\" \\"pnpm dev:frontends\\"",\n    "dev:services": "concurrently \\"pnpm --filter user-service dev\\" \\"pnpm --filter product-service dev\\"",\n    "dev:frontends": "concurrently \\"pnpm --filter admin-frontend dev\\" \\"pnpm --filter customer-frontend dev\\"",\n    "build": "pnpm --recursive build",\n    "test": "pnpm --recursive test",\n    "lint": "pnpm --recursive lint",\n    "type-check": "pnpm --recursive type-check"\n  },\n  "devDependencies": {\n    "concurrently": "^8.2.0",\n    "turbo": "^1.10.0",\n    "@changesets/cli": "^2.26.0"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"pnpm-workspaceyaml",children:"pnpm-workspace.yaml"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"packages:\n  - 'apps/*'\n  - 'libs/*'\n  - 'tools/*'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"environment-variables-structure",children:"Environment Variables Structure"}),"\n",(0,r.jsx)(n.h4,{id:"nestjs-microservice-env",children:"NestJS Microservice (.env)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Database\nDATABASE_HOST=localhost\nDATABASE_PORT=5432\nDATABASE_USERNAME=dev\nDATABASE_PASSWORD=devpass\nDATABASE_NAME=user_service_dev\n\n# Redis\nREDIS_HOST=localhost\nREDIS_PORT=6379\n\n# Message Queue\nRABBITMQ_URL=amqp://dev:devpass@localhost:5672\n\n# Service Configuration\nPORT=3001\nNODE_ENV=development\nLOG_LEVEL=debug\n\n# JWT\nJWT_SECRET=your-secret-key\nJWT_EXPIRES_IN=24h\n\n# External Services\nPAYMENT_SERVICE_URL=http://localhost:3003\nEMAIL_SERVICE_URL=http://localhost:3004\n\n# Monitoring\nPROMETHEUS_PORT=9090\nHEALTH_CHECK_PORT=8080\n"})}),"\n",(0,r.jsx)(n.h4,{id:"nextjs-microfrontend-envlocal",children:"Next.js Microfrontend (.env.local)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# API Configuration\nNEXT_PUBLIC_API_URL=http://localhost:3000\nNEXT_PUBLIC_USER_SERVICE_URL=http://localhost:3001\nNEXT_PUBLIC_PRODUCT_SERVICE_URL=http://localhost:3002\n\n# Authentication\nNEXT_PUBLIC_AUTH_URL=http://localhost:3001/auth\nNEXTAUTH_SECRET=your-nextauth-secret\nNEXTAUTH_URL=http://localhost:4000\n\n# Module Federation\nNEXT_PUBLIC_REMOTE_ADMIN_URL=http://localhost:4001\nNEXT_PUBLIC_REMOTE_CUSTOMER_URL=http://localhost:4002\n\n# Analytics\nNEXT_PUBLIC_GA_ID=GA_MEASUREMENT_ID\nNEXT_PUBLIC_SENTRY_DSN=your-sentry-dsn\n\n# Feature Flags\nNEXT_PUBLIC_FEATURE_FLAGS_URL=http://localhost:3005\n"})}),"\n",(0,r.jsx)(n.h2,{id:"ide-configuration",children:"IDE Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"vs-code-settings",children:"VS Code Settings"}),"\n",(0,r.jsx)(n.h4,{id:"vscodesettingsjson",children:".vscode/settings.json"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "typescript.preferences.importModuleSpecifier": "relative",\n  "editor.defaultFormatter": "esbenp.prettier-vscode",\n  "editor.formatOnSave": true,\n  "editor.codeActionsOnSave": {\n    "source.fixAll.eslint": true,\n    "source.organizeImports": true\n  },\n  "files.exclude": {\n    "**/node_modules": true,\n    "**/dist": true,\n    "**/.next": true\n  },\n  "search.exclude": {\n    "**/node_modules": true,\n    "**/dist": true,\n    "**/.next": true\n  },\n  "emmet.includeLanguages": {\n    "typescript": "html",\n    "typescriptreact": "html"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"vscodeextensionsjson",children:".vscode/extensions.json"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "recommendations": [\n    "esbenp.prettier-vscode",\n    "dbaeumer.vscode-eslint",\n    "bradlc.vscode-tailwindcss",\n    "ms-vscode.vscode-typescript-next",\n    "ms-vscode-remote.remote-containers",\n    "ms-kubernetes-tools.vscode-kubernetes-tools",\n    "formulahendry.auto-rename-tag",\n    "christian-kohler.path-intellisense",\n    "ms-vscode.vscode-json"\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"vscodelaunchjson",children:".vscode/launch.json"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "version": "0.2.0",\n  "configurations": [\n    {\n      "name": "Debug NestJS",\n      "type": "node",\n      "request": "launch",\n      "program": "${workspaceFolder}/apps/user-service/src/main.ts",\n      "outFiles": ["${workspaceFolder}/apps/user-service/dist/**/*.js"],\n      "env": {\n        "NODE_ENV": "development"\n      }\n    },\n    {\n      "name": "Debug Next.js",\n      "type": "node",\n      "request": "launch",\n      "program": "${workspaceFolder}/apps/admin-frontend/node_modules/.bin/next",\n      "args": ["dev"],\n      "cwd": "${workspaceFolder}/apps/admin-frontend"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"development-scripts",children:"Development Scripts"}),"\n",(0,r.jsx)(n.h3,{id:"setup-scripts",children:"Setup Scripts"}),"\n",(0,r.jsx)(n.h4,{id:"scriptssetup-devsh",children:"scripts/setup-dev.sh"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\necho "\ud83d\ude80 Setting up development environment..."\n\n# Check requirements\ncommand -v node >/dev/null 2>&1 || { echo "Node.js is required but not installed. Aborting." >&2; exit 1; }\ncommand -v docker >/dev/null 2>&1 || { echo "Docker is required but not installed. Aborting." >&2; exit 1; }\ncommand -v pnpm >/dev/null 2>&1 || { echo "pnpm is required but not installed. Installing..." >&2; npm install -g pnpm; }\n\n# Install dependencies\necho "\ud83d\udce6 Installing dependencies..."\npnpm install\n\n# Setup environment files\necho "\u2699\ufe0f Setting up environment files..."\nfor app in apps/*/; do\n  if [ ! -f "${app}.env" ]; then\n    cp "${app}.env.example" "${app}.env"\n    echo "Created ${app}.env"\n  fi\ndone\n\n# Start infrastructure\necho "\ud83d\udc33 Starting infrastructure services..."\ndocker-compose -f docker-compose.dev.yml up -d\n\n# Wait for services\necho "\u23f3 Waiting for services to be ready..."\nsleep 10\n\n# Run database migrations\necho "\ud83d\uddc4\ufe0f Running database migrations..."\npnpm --filter user-service typeorm:migration:run\npnpm --filter product-service typeorm:migration:run\npnpm --filter order-service typeorm:migration:run\n\necho "\u2705 Development environment setup complete!"\necho "Run \'pnpm dev\' to start all services"\n'})}),"\n",(0,r.jsx)(n.h4,{id:"scriptsstart-devsh",children:"scripts/start-dev.sh"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n\necho "\ud83d\ude80 Starting development environment..."\n\n# Start infrastructure\ndocker-compose -f docker-compose.dev.yml up -d\n\n# Start all services\npnpm dev\n'})}),"\n",(0,r.jsx)(n.h3,{id:"quick-start-commands",children:"Quick Start Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Initial setup\nchmod +x scripts/setup-dev.sh\n./scripts/setup-dev.sh\n\n# Daily development\npnpm dev\n\n# Individual service development\npnpm --filter user-service dev\npnpm --filter admin-frontend dev\n\n# Testing\npnpm test\npnpm --filter user-service test:watch\n\n# Building\npnpm build\npnpm --filter customer-frontend build\n"})}),"\n",(0,r.jsx)(n.h2,{id:"docker-development-environment",children:"Docker Development Environment"}),"\n",(0,r.jsx)(n.h3,{id:"development-dockerfile",children:"Development Dockerfile"}),"\n",(0,r.jsx)(n.h4,{id:"appsuser-servicedockerfiledev",children:"apps/user-service/Dockerfile.dev"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dockerfile",children:'FROM node:18-alpine\n\nWORKDIR /app\n\n# Install pnpm\nRUN npm install -g pnpm\n\n# Copy package files\nCOPY package.json pnpm-lock.yaml ./\nCOPY apps/user-service/package.json ./apps/user-service/\n\n# Install dependencies\nRUN pnpm install --frozen-lockfile\n\n# Copy source code\nCOPY . .\n\n# Expose port\nEXPOSE 3001\n\n# Start development server\nCMD ["pnpm", "--filter", "user-service", "dev"]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"docker-compose-for-development",children:"Docker Compose for Development"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.dev.yml\nversion: \'3.8\'\n\nservices:\n  # Infrastructure\n  postgres:\n    image: postgres:15\n    environment:\n      POSTGRES_MULTIPLE_DATABASES: user_service_dev,product_service_dev,order_service_dev\n      POSTGRES_USER: dev\n      POSTGRES_PASSWORD: devpass\n    volumes:\n      - ./docker/postgres-multiple-databases.sh:/docker-entrypoint-initdb.d/postgres-multiple-databases.sh\n      - postgres_data:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - "6379:6379"\n\n  rabbitmq:\n    image: rabbitmq:3-management\n    environment:\n      RABBITMQ_DEFAULT_USER: dev\n      RABBITMQ_DEFAULT_PASS: devpass\n    ports:\n      - "5672:5672"\n      - "15672:15672"\n\n  # Optional: Development services\n  user-service:\n    build:\n      context: .\n      dockerfile: apps/user-service/Dockerfile.dev\n    volumes:\n      - .:/app\n      - /app/node_modules\n    ports:\n      - "3001:3001"\n    environment:\n      - NODE_ENV=development\n    depends_on:\n      - postgres\n      - redis\n\nvolumes:\n  postgres_data:\n'})}),"\n",(0,r.jsx)(n.h2,{id:"testing-environment",children:"Testing Environment"}),"\n",(0,r.jsx)(n.h3,{id:"jest-configuration",children:"Jest Configuration"}),"\n",(0,r.jsx)(n.h4,{id:"appsuser-servicejestconfigjs",children:"apps/user-service/jest.config.js"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"module.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'node',\n  roots: ['<rootDir>/src'],\n  testMatch: ['**/__tests__/**/*.ts', '**/?(*.)+(spec|test).ts'],\n  transform: {\n    '^.+\\\\.ts$': 'ts-jest',\n  },\n  collectCoverageFrom: [\n    'src/**/*.ts',\n    '!src/**/*.d.ts',\n    '!src/**/*.interface.ts',\n  ],\n  coverageDirectory: 'coverage',\n  coverageReporters: ['text', 'lcov', 'html'],\n  coverageThreshold: {\n    global: {\n      branches: 80,\n      functions: 80,\n      lines: 80,\n      statements: 80,\n    },\n  },\n  moduleNameMapping: {\n    '^@/(.*)$': '<rootDir>/src/$1',\n  },\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting-guide",children:"Troubleshooting Guide"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsx)(n.h4,{id:"port-conflicts",children:"Port Conflicts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check what's running on port\nlsof -ti:3000\n\n# Kill process\nkill -9 $(lsof -ti:3000)\n\n# Use different ports\nPORT=3010 pnpm --filter user-service dev\n"})}),"\n",(0,r.jsx)(n.h4,{id:"database-connection-issues",children:"Database Connection Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check PostgreSQL status\ndocker-compose -f docker-compose.dev.yml ps postgres\n\n# Reset database\ndocker-compose -f docker-compose.dev.yml down\ndocker volume rm ecommerce-platform_postgres_data\ndocker-compose -f docker-compose.dev.yml up -d\n"})}),"\n",(0,r.jsx)(n.h4,{id:"node-modules-issues",children:"Node Modules Issues"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Clean install\nrm -rf node_modules\nrm -rf apps/*/node_modules\nrm pnpm-lock.yaml\npnpm install\n"})}),"\n",(0,r.jsx)(n.h2,{id:"environment-health-checks",children:"Environment Health Checks"}),"\n",(0,r.jsx)(n.h3,{id:"health-check-script",children:"Health Check Script"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# scripts/health-check.sh\n\necho "\ud83d\udd0d Checking development environment health..."\n\n# Check Node.js\nnode_version=$(node -v)\necho "Node.js: $node_version"\n\n# Check services\nservices=("postgres:5432" "redis:6379" "rabbitmq:5672")\nfor service in "${services[@]}"; do\n  if nc -z localhost ${service#*:}; then\n    echo "\u2705 $service is running"\n  else\n    echo "\u274c $service is not running"\n  fi\ndone\n\n# Check APIs\napis=("http://localhost:3001/health" "http://localhost:3002/health")\nfor api in "${apis[@]}"; do\n  if curl -f -s "$api" > /dev/null; then\n    echo "\u2705 $api is healthy"\n  else\n    echo "\u274c $api is not responding"\n  fi\ndone\n'})}),"\n",(0,r.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/scm-policy",children:"SCM Policy"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/coding-standards",children:"Coding Standards"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Next Steps:"})," After environment setup, proceed to ",(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/coding-standards",children:"Coding Standards & Conventions"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7814:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var t=s(9729);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);