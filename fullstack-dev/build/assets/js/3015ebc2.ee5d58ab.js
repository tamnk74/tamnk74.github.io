"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[1406],{1720:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"devops/devsecops-toolset","title":"DevSecOps Toolset for Ecommerce Application","description":"Overview","source":"@site/docs/devops/devsecops-toolset.md","sourceDirName":"devops","slug":"/devops/devsecops-toolset","permalink":"/fullstack-dev/docs/devops/devsecops-toolset","draft":false,"unlisted":false,"editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/docs/devops/devsecops-toolset.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"GitOps Microservices Deployment Guide: Node.js on GCP GKE with Kustomize and ArgoCD","permalink":"/fullstack-dev/docs/devops/gitops-microservices-gcp-guide"},"next":{"title":"Google Cloud Platform (GCP) DevOps Guides","permalink":"/fullstack-dev/docs/devops/gcp/"}}');var s=t(5813),r=t(5741);const c={},a="DevSecOps Toolset for Ecommerce Application",o={},l=[{value:"Overview",id:"overview",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"DevSecOps Architecture",id:"devsecops-architecture",level:2},{value:"Security-First Development",id:"security-first-development",level:2},{value:"1. IDE Security Extensions",id:"1-ide-security-extensions",level:3},{value:"2. Pre-commit Security Hooks",id:"2-pre-commit-security-hooks",level:3},{value:"3. Security-Enhanced ESLint Configuration",id:"3-security-enhanced-eslint-configuration",level:3},{value:"Source Code Security",id:"source-code-security",level:2},{value:"1. Static Application Security Testing (SAST)",id:"1-static-application-security-testing-sast",level:3},{value:"SonarQube Configuration",id:"sonarqube-configuration",level:4},{value:"Semgrep Configuration",id:"semgrep-configuration",level:4},{value:"2. Dependency Security Scanning",id:"2-dependency-security-scanning",level:3},{value:"Snyk Configuration",id:"snyk-configuration",level:4},{value:"Alternative Dependency Scanning Tools",id:"alternative-dependency-scanning-tools",level:4},{value:"1. <strong>FOSSA</strong> (Enterprise Alternative)",id:"1-fossa-enterprise-alternative",level:5},{value:"2. <strong>WhiteSource (Mend)</strong> Configuration",id:"2-whitesource-mend-configuration",level:5},{value:"3. <strong>Trivy</strong> (Open Source Alternative)",id:"3-trivy-open-source-alternative",level:5},{value:"4. <strong>OWASP Dependency Check</strong> (Free Alternative)",id:"4-owasp-dependency-check-free-alternative",level:5},{value:"5. <strong>OSV Scanner</strong> (Google&#39;s Open Source Alternative)",id:"5-osv-scanner-googles-open-source-alternative",level:5},{value:"6. <strong>Grype</strong> (Anchore&#39;s Open Source Scanner)",id:"6-grype-anchores-open-source-scanner",level:5},{value:"Package.json Security Scripts (Updated with Alternatives)",id:"packagejson-security-scripts-updated-with-alternatives",level:4},{value:"Comparison of Dependency Scanning Tools",id:"comparison-of-dependency-scanning-tools",level:4},{value:"GitHub Actions Integration for Alternatives",id:"github-actions-integration-for-alternatives",level:4},{value:"Trivy Integration",id:"trivy-integration",level:5},{value:"OSV Scanner Integration",id:"osv-scanner-integration",level:5},{value:"Grype Integration",id:"grype-integration",level:5},{value:"OWASP Dependency Check Integration",id:"owasp-dependency-check-integration",level:5},{value:"Multi-Tool Security Pipeline",id:"multi-tool-security-pipeline",level:4},{value:"Cost-Effective Recommendation",id:"cost-effective-recommendation",level:4},{value:"2. Security-Enhanced Dockerfile",id:"2-security-enhanced-dockerfile",level:3},{value:"Container Security",id:"container-security",level:2},{value:"1. Container Image Security Pipeline",id:"1-container-image-security-pipeline",level:3},{value:"2. Container Security Policies",id:"2-container-security-policies",level:3},{value:"Infrastructure Security",id:"infrastructure-security",level:2},{value:"1. Terraform Security Configuration",id:"1-terraform-security-configuration",level:3},{value:"2. GKE Security Configuration",id:"2-gke-security-configuration",level:3},{value:"Runtime Security",id:"runtime-security",level:2},{value:"1. Falco Security Rules",id:"1-falco-security-rules",level:3},{value:"2. Istio Service Mesh Security",id:"2-istio-service-mesh-security",level:3},{value:"Monitoring &amp; Incident Response",id:"monitoring--incident-response",level:2},{value:"1. Security Monitoring with Datadog",id:"1-security-monitoring-with-datadog",level:3},{value:"2. Incident Response Automation",id:"2-incident-response-automation",level:3},{value:"Compliance &amp; Governance",id:"compliance--governance",level:2},{value:"1. PCI-DSS Compliance Configuration",id:"1-pci-dss-compliance-configuration",level:3},{value:"2. GDPR Compliance Implementation",id:"2-gdpr-compliance-implementation",level:3},{value:"Implementation Roadmap",id:"implementation-roadmap",level:2},{value:"Phase 1: Foundation (Weeks 1-2)",id:"phase-1-foundation-weeks-1-2",level:3},{value:"Phase 2: CI/CD Security (Weeks 3-4)",id:"phase-2-cicd-security-weeks-3-4",level:3},{value:"Phase 3: Runtime Security (Weeks 5-6)",id:"phase-3-runtime-security-weeks-5-6",level:3},{value:"Phase 4: Monitoring &amp; Response (Weeks 7-8)",id:"phase-4-monitoring--response-weeks-7-8",level:3},{value:"Phase 5: Compliance (Weeks 9-10)",id:"phase-5-compliance-weeks-9-10",level:3},{value:"Phase 6: Advanced Security (Weeks 11-12)",id:"phase-6-advanced-security-weeks-11-12",level:3},{value:"Cost Estimation",id:"cost-estimation",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"devsecops-toolset-for-ecommerce-application",children:"DevSecOps Toolset for Ecommerce Application"})}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(n.p,{children:"This comprehensive guide outlines a complete DevSecOps toolset specifically designed for your ecommerce application built with NestJS, Next.js, and deployed on Google Kubernetes Engine (GKE)."}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#devsecops-architecture",children:"DevSecOps Architecture"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#security-first-development",children:"Security-First Development"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#source-code-security",children:"Source Code Security"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#cicd-pipeline-security",children:"CI/CD Pipeline Security"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#container-security",children:"Container Security"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#infrastructure-security",children:"Infrastructure Security"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#runtime-security",children:"Runtime Security"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#monitoring--incident-response",children:"Monitoring & Incident Response"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#compliance--governance",children:"Compliance & Governance"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#implementation-roadmap",children:"Implementation Roadmap"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"devsecops-architecture",children:"DevSecOps Architecture"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                           DevSecOps Pipeline                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   Development   \u2502      Build      \u2502      Test       \u2502       Deploy           \u2502\n\u2502                 \u2502                 \u2502                 \u2502                         \u2502\n\u2502 \u2022 IDE Security  \u2502 \u2022 SAST Scanning \u2502 \u2022 DAST Testing  \u2502 \u2022 Infrastructure        \u2502\n\u2502 \u2022 Git Hooks     \u2502 \u2022 Dependency    \u2502 \u2022 API Security  \u2502   Security Scanning     \u2502\n\u2502 \u2022 Linting       \u2502   Scanning      \u2502 \u2022 Performance   \u2502 \u2022 Runtime Protection    \u2502\n\u2502 \u2022 Secret Mgmt   \u2502 \u2022 Container     \u2502   Testing       \u2502 \u2022 Monitoring            \u2502\n\u2502               \u2502   Scanning      \u2502                 \u2502                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n         \u2502                 \u2502                 \u2502                         \u2502\n         \u25bc                 \u25bc                 \u25bc                         \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   GitGuardian   \u2502 \u2502   SonarQube     \u2502 \u2502   OWASP ZAP     \u2502 \u2502   Falco             \u2502\n\u2502   Semgrep       \u2502 \u2502   Snyk          \u2502 \u2502   Burp Suite    \u2502 \u2502   OPA Gatekeeper    \u2502\n\u2502   TruffleHog    \u2502 \u2502   CodeQL        \u2502 \u2502   Nuclei        \u2502 \u2502   Istio             \u2502\n\u2502   Pre-commit    \u2502 \u2502   Trivy         \u2502 \u2502   Postman       \u2502 \u2502   Datadog Security  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h2,{id:"security-first-development",children:"Security-First Development"}),"\n",(0,s.jsx)(n.h3,{id:"1-ide-security-extensions",children:"1. IDE Security Extensions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// .vscode/extensions.json\n{\n  "recommendations": [\n    "ms-python.python",\n    "bradlc.vscode-tailwindcss",\n    "ms-vscode.vscode-typescript-next",\n    // Security Extensions\n    "semgrep.semgrep",\n    "snyk-security.snyk-vulnerability-scanner",\n    "gitguardian.gitguardian",\n    "42crunch.vscode-openapi-security-audit",\n    "github.vscode-github-actions",\n    "redhat.vscode-yaml",\n    "ms-kubernetes-tools.vscode-kubernetes-tools"\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-pre-commit-security-hooks",children:"2. Pre-commit Security Hooks"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .pre-commit-config.yaml\nrepos:\n  # Code Quality & Security\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.4.0\n    hooks:\n      - id: trailing-whitespace\n      - id: end-of-file-fixer\n      - id: check-yaml\n      - id: check-json\n      - id: check-merge-conflict\n      - id: detect-private-key\n\n  # JavaScript/TypeScript Security\n  - repo: https://github.com/pre-commit/mirrors-eslint\n    rev: v8.44.0\n    hooks:\n      - id: eslint\n        files: \\.(js|jsx|ts|tsx)$\n        args: [--fix]\n\n  # Secret Detection\n  - repo: https://github.com/Yelp/detect-secrets\n    rev: v1.4.0\n    hooks:\n      - id: detect-secrets\n        args: ['--baseline', '.secrets.baseline']\n\n  # SAST Scanning\n  - repo: https://github.com/semgrep/semgrep\n    rev: v1.45.0\n    hooks:\n      - id: semgrep\n        args: ['--config=auto', '--error']\n\n  # Dependency Security\n  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety\n    rev: v1.3.2\n    hooks:\n      - id: python-safety-dependencies-check\n\n  # Docker Security\n  - repo: https://github.com/hadolint/hadolint\n    rev: v2.12.0\n    hooks:\n      - id: hadolint-docker\n        args: [--ignore, DL3008, --ignore, DL3009]\n\n  # Infrastructure as Code Security\n  - repo: https://github.com/aquasecurity/tfsec\n    rev: v1.28.1\n    hooks:\n      - id: tfsec\n        args: [--format=json]\n\n  # Kubernetes Security\n  - repo: https://github.com/zegl/kube-score\n    rev: v1.16.1\n    hooks:\n      - id: kube-score\n        files: \\.ya?ml$\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-security-enhanced-eslint-configuration",children:"3. Security-Enhanced ESLint Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// .eslintrc.js\nmodule.exports = {\n  extends: [\n    '@typescript-eslint/recommended',\n    'plugin:security/recommended',\n    'plugin:@typescript-eslint/recommended-requiring-type-checking',\n  ],\n  plugins: ['security', '@typescript-eslint'],\n  rules: {\n    // Security Rules\n    'security/detect-object-injection': 'error',\n    'security/detect-non-literal-regexp': 'error',\n    'security/detect-unsafe-regex': 'error',\n    'security/detect-buffer-noassert': 'error',\n    'security/detect-child-process': 'error',\n    'security/detect-disable-mustache-escape': 'error',\n    'security/detect-eval-with-expression': 'error',\n    'security/detect-no-csrf-before-method-override': 'error',\n    'security/detect-non-literal-fs-filename': 'error',\n    'security/detect-non-literal-require': 'error',\n    'security/detect-possible-timing-attacks': 'error',\n    'security/detect-pseudoRandomBytes': 'error',\n\n    // TypeScript Security\n    '@typescript-eslint/no-explicit-any': 'error',\n    '@typescript-eslint/no-unsafe-assignment': 'error',\n    '@typescript-eslint/no-unsafe-call': 'error',\n    '@typescript-eslint/no-unsafe-member-access': 'error',\n    '@typescript-eslint/no-unsafe-return': 'error',\n  },\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"source-code-security",children:"Source Code Security"}),"\n",(0,s.jsx)(n.h3,{id:"1-static-application-security-testing-sast",children:"1. Static Application Security Testing (SAST)"}),"\n",(0,s.jsx)(n.h4,{id:"sonarqube-configuration",children:"SonarQube Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# sonar-project.properties\nsonar.projectKey=ecommerce-app\nsonar.projectName=Ecommerce Application\nsonar.projectVersion=1.0\nsonar.sources=src\nsonar.tests=src\nsonar.test.inclusions=**/*.test.ts,**/*.spec.ts\nsonar.exclusions=**/node_modules/**,**/dist/**,**/build/**\nsonar.typescript.lcov.reportPaths=coverage/lcov.info\n\n# Security-focused quality gates\nsonar.qualitygate.wait=true\nsonar.security.hotspots.status=TO_REVIEW\n"})}),"\n",(0,s.jsx)(n.h4,{id:"semgrep-configuration",children:"Semgrep Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .semgrep.yml\nrules:\n  - id: ecommerce-sql-injection\n    patterns:\n      - pattern: |\n          $DB.query($QUERY, ...)\n      - pattern-where-python: |\n          $QUERY contains user input\n    message: Potential SQL injection vulnerability\n    languages: [typescript, javascript]\n    severity: ERROR\n\n  - id: ecommerce-xss-prevention\n    patterns:\n      - pattern: |\n          $ELEMENT.innerHTML = $INPUT\n    message: Potential XSS vulnerability - use textContent instead\n    languages: [typescript, javascript]\n    severity: WARNING\n\n  - id: ecommerce-secret-detection\n    patterns:\n      - pattern-regex: |\n          (api_key|secret|password)\\s*[:=]\\s*[\"'][^\"']{20,}[\"']\n    message: Potential hardcoded secret detected\n    languages: [typescript, javascript]\n    severity: ERROR\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-dependency-security-scanning",children:"2. Dependency Security Scanning"}),"\n",(0,s.jsx)(n.h4,{id:"snyk-configuration",children:"Snyk Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'// .snyk\n{\n  "version": "v1.0.0",\n  "ignore": {},\n  "patch": {},\n  "language-settings": {\n    "javascript": {\n      "ignoreDevDeps": false\n    }\n  },\n  "security": {\n    "severity-threshold": "medium"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"alternative-dependency-scanning-tools",children:"Alternative Dependency Scanning Tools"}),"\n",(0,s.jsxs)(n.h5,{id:"1-fossa-enterprise-alternative",children:["1. ",(0,s.jsx)(n.strong,{children:"FOSSA"})," (Enterprise Alternative)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .fossa.yml\nversion: 3\ntargets:\n  - name: ecommerce-frontend\n    type: nodejs\n    target: package.json\n\n  - name: ecommerce-backend\n    type: nodejs\n    target: backend/package.json\n\npolicies:\n  - name: security-policy\n    type: security\n    rules:\n      - license-allowlist: [MIT, Apache-2.0, BSD-3-Clause]\n      - vulnerability-severity: medium\n      - max-vulnerability-count: 0\n"})}),"\n",(0,s.jsx)(n.p,{children:"Configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install FOSSA CLI\ncurl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install-latest.sh | bash\n\n# Run analysis\nfossa analyze\nfossa test --timeout 600\n"})}),"\n",(0,s.jsxs)(n.h5,{id:"2-whitesource-mend-configuration",children:["2. ",(0,s.jsx)(n.strong,{children:"WhiteSource (Mend)"})," Configuration"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# whitesource.config\napiKey: ${WHITESOURCE_API_KEY}\nuserKey: ${WHITESOURCE_USER_KEY}\nproductName: ecommerce-app\nprojectName: ecommerce-frontend\n\nscanComment: 'Automated security scan'\nprojectVersion: 1.0.0\n\n# Security policies\nresolveAllDependencies: true\nfailErrorLevel: ALL\nincludePublishedVulnerabilities: true\nvulnerabilityScoring: cvss3\n\n# License compliance\ncheckPolicies: true\nforceCheckAllDependencies: true\n"})}),"\n",(0,s.jsxs)(n.h5,{id:"3-trivy-open-source-alternative",children:["3. ",(0,s.jsx)(n.strong,{children:"Trivy"})," (Open Source Alternative)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# trivy-config.yaml\nvulnerability:\n  type: 'os,library'\n  severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'\n  ignore-unfixed: true\n\nsecret:\n  config: .trivyignore\n\npolicy:\n  bundle:\n    - 'appshield'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Trivy implementation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install Trivy\ncurl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin\n\n# Scan package.json for vulnerabilities\ntrivy fs --security-checks vuln,secret,config package.json\n\n# Scan with custom config\ntrivy fs --config trivy-config.yaml .\n\n# Generate SARIF report\ntrivy fs --format sarif --output trivy-results.sarif .\n"})}),"\n",(0,s.jsxs)(n.h5,{id:"4-owasp-dependency-check-free-alternative",children:["4. ",(0,s.jsx)(n.strong,{children:"OWASP Dependency Check"})," (Free Alternative)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"\x3c!-- dependency-check-maven.xml --\x3e\n<plugin>\n    <groupId>org.owasp</groupId>\n    <artifactId>dependency-check-maven</artifactId>\n    <version>8.4.2</version>\n    <configuration>\n        <suppressionFiles>\n            <suppressionFile>dependency-check-suppressions.xml</suppressionFile>\n        </suppressionFiles>\n        <failBuildOnCVSS>7</failBuildOnCVSS>\n        <formats>\n            <format>HTML</format>\n            <format>JSON</format>\n            <format>SARIF</format>\n        </formats>\n    </configuration>\n</plugin>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Node.js implementation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// dependency-check-runner.js\nconst { execSync } = require('child_process');\nconst fs = require('fs');\n\nfunction runDependencyCheck() {\n  try {\n    // Download dependency-check CLI\n    execSync(\n      'wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.2/dependency-check-8.4.2-release.zip',\n    );\n    execSync('unzip -q dependency-check-8.4.2-release.zip');\n\n    // Run dependency check\n    execSync(\n      './dependency-check/bin/dependency-check.sh --project \"ecommerce-app\" --scan . --format JSON --format HTML --failOnCVSS 7',\n    );\n\n    // Parse results\n    const results = JSON.parse(fs.readFileSync('dependency-check-report.json', 'utf8'));\n    console.log(`Found ${results.dependencies.length} dependencies`);\n\n    // Check for vulnerabilities\n    const vulnerabilities = results.dependencies.filter((dep) => dep.vulnerabilities && dep.vulnerabilities.length > 0);\n    if (vulnerabilities.length > 0) {\n      console.error(`Found ${vulnerabilities.length} dependencies with vulnerabilities`);\n      process.exit(1);\n    }\n  } catch (error) {\n    console.error('Dependency check failed:', error.message);\n    process.exit(1);\n  }\n}\n\nrunDependencyCheck();\n"})}),"\n",(0,s.jsxs)(n.h5,{id:"5-osv-scanner-googles-open-source-alternative",children:["5. ",(0,s.jsx)(n.strong,{children:"OSV Scanner"})," (Google's Open Source Alternative)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# osv-scanner-config.yaml\n# OSV Scanner configuration\nLoadPath: ['package-lock.json', 'yarn.lock', 'package.json']\nIgnoreVulns:\n  - 'GHSA-xxxx-xxxx-xxxx' # Ignore specific vulnerabilities\n\nCallAnalysis:\n  Enabled: true\n\nExperimental:\n  Licenses: true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Implementation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install OSV Scanner\ngo install github.com/google/osv-scanner/cmd/osv-scanner@v1\n\n# Scan current directory\nosv-scanner -r .\n\n# Generate JSON output\nosv-scanner --format json --output osv-results.json .\n\n# Scan specific lockfile\nosv-scanner --lockfile package-lock.json\n"})}),"\n",(0,s.jsxs)(n.h5,{id:"6-grype-anchores-open-source-scanner",children:["6. ",(0,s.jsx)(n.strong,{children:"Grype"})," (Anchore's Open Source Scanner)"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .grype.yaml\ncheck-for-app-update: false\nquiet: false\noutput: 'json'\n\nignore:\n  - vulnerability: 'CVE-2024-1234'\n    fix-state: 'not-fixed'\n\ndb:\n  cache-dir: './grype-db-cache'\n  update-url: 'https://toolbox-data.anchore.io/grype/databases/listing.json'\n\nregistry:\n  insecure-skip-tls-verify: false\n  insecure-use-http: false\n\nlog:\n  level: 'warn'\n"})}),"\n",(0,s.jsx)(n.p,{children:"Grype usage:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install Grype\ncurl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n\n# Scan directory\ngrype dir:.\n\n# Scan with config file\ngrype -c .grype.yaml dir:.\n\n# Generate SARIF output\ngrype -o sarif dir:. > grype-results.sarif\n\n# Scan Docker image\ngrype ecommerce-app:latest\n"})}),"\n",(0,s.jsx)(n.h4,{id:"packagejson-security-scripts-updated-with-alternatives",children:"Package.json Security Scripts (Updated with Alternatives)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "security:audit": "npm audit --audit-level moderate",\n    "security:snyk": "snyk test --severity-threshold=medium",\n    "security:trivy": "trivy fs --security-checks vuln,secret .",\n    "security:osv": "osv-scanner -r .",\n    "security:grype": "grype dir:.",\n    "security:owasp": "node dependency-check-runner.js",\n    "security:retire": "retire --package --node --js",\n    "security:semgrep": "semgrep --config=auto src/",\n    "security:full": "npm run security:audit && npm run security:trivy && npm run security:osv",\n    "security:compare": "npm run security:snyk && npm run security:trivy && npm run security:grype"\n  },\n  "devDependencies": {\n    "snyk": "^1.1200.0",\n    "retire": "^4.0.0",\n    "semgrep": "^1.45.0"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"comparison-of-dependency-scanning-tools",children:"Comparison of Dependency Scanning Tools"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Tool"}),(0,s.jsx)(n.th,{children:"Cost"}),(0,s.jsx)(n.th,{children:"Language Support"}),(0,s.jsx)(n.th,{children:"Database"}),(0,s.jsx)(n.th,{children:"Integration"}),(0,s.jsx)(n.th,{children:"Pros"}),(0,s.jsx)(n.th,{children:"Cons"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Snyk"})}),(0,s.jsx)(n.td,{children:"$98/month"}),(0,s.jsx)(n.td,{children:"Excellent (10+)"}),(0,s.jsx)(n.td,{children:"Commercial + Open"}),(0,s.jsx)(n.td,{children:"Excellent"}),(0,s.jsx)(n.td,{children:"Developer-friendly, auto-fixing"}),(0,s.jsx)(n.td,{children:"Expensive, limited free tier"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"FOSSA"})}),(0,s.jsx)(n.td,{children:"$199/month"}),(0,s.jsx)(n.td,{children:"Excellent (20+)"}),(0,s.jsx)(n.td,{children:"Commercial"}),(0,s.jsx)(n.td,{children:"Excellent"}),(0,s.jsx)(n.td,{children:"Enterprise features, compliance"}),(0,s.jsx)(n.td,{children:"Very expensive, complex setup"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Trivy"})}),(0,s.jsx)(n.td,{children:"Free"}),(0,s.jsx)(n.td,{children:"Good (10+)"}),(0,s.jsx)(n.td,{children:"Multiple DBs"}),(0,s.jsx)(n.td,{children:"Good"}),(0,s.jsx)(n.td,{children:"Fast, lightweight, multi-format"}),(0,s.jsx)(n.td,{children:"Limited auto-fixing"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"OSV Scanner"})}),(0,s.jsx)(n.td,{children:"Free"}),(0,s.jsx)(n.td,{children:"Good (8+)"}),(0,s.jsx)(n.td,{children:"OSV Database"}),(0,s.jsx)(n.td,{children:"Good"}),(0,s.jsx)(n.td,{children:"Google-backed, accurate"}),(0,s.jsx)(n.td,{children:"Newer tool, limited features"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Grype"})}),(0,s.jsx)(n.td,{children:"Free"}),(0,s.jsx)(n.td,{children:"Good (10+)"}),(0,s.jsx)(n.td,{children:"Multiple DBs"}),(0,s.jsx)(n.td,{children:"Good"}),(0,s.jsx)(n.td,{children:"Fast scanning, SARIF output"}),(0,s.jsx)(n.td,{children:"No auto-fixing"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"OWASP Dependency Check"})}),(0,s.jsx)(n.td,{children:"Free"}),(0,s.jsx)(n.td,{children:"Good (8+)"}),(0,s.jsx)(n.td,{children:"NVD Database"}),(0,s.jsx)(n.td,{children:"Good"}),(0,s.jsx)(n.td,{children:"Mature, widely adopted"}),(0,s.jsx)(n.td,{children:"Slower, limited language support"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"WhiteSource (Mend)"})}),(0,s.jsx)(n.td,{children:"$390/month"}),(0,s.jsx)(n.td,{children:"Excellent (20+)"}),(0,s.jsx)(n.td,{children:"Commercial"}),(0,s.jsx)(n.td,{children:"Excellent"}),(0,s.jsx)(n.td,{children:"Comprehensive, policy engine"}),(0,s.jsx)(n.td,{children:"Very expensive"})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"github-actions-integration-for-alternatives",children:"GitHub Actions Integration for Alternatives"}),"\n",(0,s.jsx)(n.h5,{id:"trivy-integration",children:"Trivy Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/trivy-security.yml\nname: Trivy Security Scan\n\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\njobs:\n  trivy-scan:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Run Trivy vulnerability scanner in repo mode\n        uses: aquasecurity/trivy-action@master\n        with:\n          scan-type: 'fs'\n          scan-ref: '.'\n          format: 'sarif'\n          output: 'trivy-results.sarif'\n          severity: 'CRITICAL,HIGH,MEDIUM'\n\n      - name: Upload Trivy scan results to GitHub Security tab\n        uses: github/codeql-action/upload-sarif@v2\n        if: always()\n        with:\n          sarif_file: 'trivy-results.sarif'\n\n      - name: Run Trivy scanner for dependencies\n        uses: aquasecurity/trivy-action@master\n        with:\n          scan-type: 'fs'\n          scan-ref: 'package-lock.json'\n          format: 'table'\n          exit-code: '1'\n          severity: 'CRITICAL,HIGH'\n"})}),"\n",(0,s.jsx)(n.h5,{id:"osv-scanner-integration",children:"OSV Scanner Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/osv-scanner.yml\nname: OSV Scanner\n\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\njobs:\n  osv-scan:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Run OSV Scanner\n        uses: google/osv-scanner-action@v1.7.4\n        with:\n          scan-args: |-\n            -r\n            --skip-git\n            --format=sarif\n            --output=osv-results.sarif\n            .\n\n      - name: Upload OSV scan results\n        uses: github/codeql-action/upload-sarif@v2\n        if: always()\n        with:\n          sarif_file: 'osv-results.sarif'\n"})}),"\n",(0,s.jsx)(n.h5,{id:"grype-integration",children:"Grype Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/grype-security.yml\nname: Grype Security Scan\n\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\njobs:\n  grype-scan:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Install Grype\n        run: |\n          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n\n      - name: Scan directory with Grype\n        run: |\n          grype dir:. -o sarif > grype-results.sarif\n\n      - name: Upload Grype scan results\n        uses: github/codeql-action/upload-sarif@v2\n        if: always()\n        with:\n          sarif_file: 'grype-results.sarif'\n\n      - name: Grype fail on high/critical\n        run: |\n          grype dir:. --fail-on high\n"})}),"\n",(0,s.jsx)(n.h5,{id:"owasp-dependency-check-integration",children:"OWASP Dependency Check Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/owasp-dependency-check.yml\nname: OWASP Dependency Check\n\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\njobs:\n  dependency-check:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Setup Java\n        uses: actions/setup-java@v3\n        with:\n          java-version: '11'\n          distribution: 'temurin'\n\n      - name: Run OWASP Dependency Check\n        uses: dependency-check/Dependency-Check_Action@main\n        with:\n          project: 'ecommerce-app'\n          path: '.'\n          format: 'ALL'\n          args: >\n            --enableRetired\n            --enableExperimental\n            --failOnCVSS 7\n\n      - name: Upload results\n        uses: actions/upload-artifact@v3\n        with:\n          name: dependency-check-report\n          path: reports/\n"})}),"\n",(0,s.jsx)(n.h4,{id:"multi-tool-security-pipeline",children:"Multi-Tool Security Pipeline"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/comprehensive-security.yml\nname: Comprehensive Security Scan\n\non:\n  push:\n    branches: [main]\n  schedule:\n    - cron: '0 2 * * 1' # Weekly scan on Monday at 2 AM\n\njobs:\n  comprehensive-scan:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        scanner: [trivy, osv, grype]\n\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v3\n        with:\n          node-version: '18'\n          cache: 'npm'\n\n      - name: Install dependencies\n        run: npm ci\n\n      - name: Run Trivy\n        if: matrix.scanner == 'trivy'\n        uses: aquasecurity/trivy-action@master\n        with:\n          scan-type: 'fs'\n          scan-ref: '.'\n          format: 'json'\n          output: 'trivy-results.json'\n\n      - name: Run OSV Scanner\n        if: matrix.scanner == 'osv'\n        run: |\n          go install github.com/google/osv-scanner/cmd/osv-scanner@v1\n          osv-scanner --format json --output osv-results.json .\n\n      - name: Run Grype\n        if: matrix.scanner == 'grype'\n        run: |\n          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin\n          grype dir:. -o json > grype-results.json\n\n      - name: Compare Results\n        run: |\n          echo \"Scanner: ${{ matrix.scanner }}\"\n          if [ -f \"${{ matrix.scanner }}-results.json\" ]; then\n            echo \"Results found for ${{ matrix.scanner }}\"\n            # Add result comparison logic here\n          fi\n\n      - name: Upload artifacts\n        uses: actions/upload-artifact@v3\n        with:\n          name: security-results-${{ matrix.scanner }}\n          path: '${{ matrix.scanner }}-results.json'\n"})}),"\n",(0,s.jsx)(n.h4,{id:"cost-effective-recommendation",children:"Cost-Effective Recommendation"}),"\n",(0,s.jsxs)(n.p,{children:["For your ecommerce application, I recommend this ",(0,s.jsx)(n.strong,{children:"hybrid approach"}),":"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Free Tier Solution:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Primary scanning (free)\nnpm run security:audit     # Built-in npm audit\nnpm run security:trivy     # Trivy for comprehensive scanning\nnpm run security:osv       # OSV Scanner for Google's database\n\n# Backup scanning (free)\nnpm run security:grype     # Grype for additional coverage\nnpm run security:retire    # Retire.js for outdated libraries\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cost-Effective Enterprise Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Primary"}),": Trivy + OSV Scanner (Free)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Secondary"}),": Snyk (for critical environments only)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CI/CD"}),": Multiple scanners in parallel for comprehensive coverage"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Total Cost"}),": $0 - $98/month vs Snyk's $98+/month"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "security:retire": "retire --package --node --js",\n    "security:semgrep": "semgrep --config=auto src/",\n    "security:full": "npm run security:audit && npm run security:snyk && npm run security:semgrep"\n  },\n  "devDependencies": {\n    "snyk": "^1.1200.0",\n    "retire": "^4.0.0",\n    "semgrep": "^1.45.0"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\n## CI/CD Pipeline Security\n\n### 1. GitHub Actions Security Workflow\n\n```yaml\n# .github/workflows/security.yml\nname: Security Checks\n\non:\n  push:\n    branches: [main, develop]\n  pull_request:\n    branches: [main]\n\njobs:\n  security-scan:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n\n      # Secret Scanning\n      - name: TruffleHog OSS\n        uses: trufflesecurity/trufflehog@main\n        with:\n          path: ./\n          base: main\n          head: HEAD\n\n      - name: GitGuardian Scan\n        uses: GitGuardian/ggshield-action@v1.25.0\n        env:\n          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}\n          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}\n          GITHUB_PULL_REQUEST_BASE_SHA: ${{ github.event.pull_request.base.sha }}\n          GITHUB_PULL_REQUEST_HEAD_SHA: ${{ github.event.pull_request.head.sha }}\n          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}\n          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}\n\n      # SAST Scanning\n      - name: Semgrep\n        uses: semgrep/semgrep-action@v1\n        with:\n          config: >-\n            p/security-audit\n            p/typescript\n            p/javascript\n            p/react\n            p/nextjs\n\n      # Dependency Scanning\n      - name: Snyk Security Scan\n        uses: snyk/actions/node@master\n        env:\n          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}\n        with:\n          args: --severity-threshold=medium\n\n      # Container Scanning\n      - name: Trivy Security Scan\n        uses: aquasecurity/trivy-action@master\n        with:\n          image-ref: 'ecommerce-app:latest'\n          format: 'sarif'\n          output: 'trivy-results.sarif'\n\n      # Upload results to GitHub Security tab\n      - name: Upload Trivy results\n        uses: github/codeql-action/upload-sarif@v2\n        with:\n          sarif_file: 'trivy-results.sarif'\n\n  # Infrastructure Security\n  infrastructure-security:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Terraform Security Scan\n        uses: aquasecurity/tfsec-action@v1.0.0\n        with:\n          soft_fail: true\n\n      - name: Checkov Security Scan\n        uses: bridgecrewio/checkov-action@master\n        with:\n          directory: ./terraform\n          soft_fail: true\n\n  # Kubernetes Security\n  kubernetes-security:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Kube-score Security Check\n        run: |\n          wget https://github.com/zegl/kube-score/releases/latest/download/kube-score_linux_amd64\n          chmod +x kube-score_linux_amd64\n          ./kube-score_linux_amd64 score k8s/*.yaml\n\n      - name: Polaris Security Audit\n        uses: fairwindsops/polaris/.github/actions/polaris@master\n        with:\n          version: 8.0.0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-security-enhanced-dockerfile",children:"2. Security-Enhanced Dockerfile"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dockerfile",children:'# Use specific version tags for security\nFROM node:18.18.0-alpine3.18 AS base\n\n# Create non-root user\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nextjs -u 1001\n\n# Security: Install security updates\nRUN apk upgrade --no-cache\n\n# Set working directory\nWORKDIR /app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install dependencies with security flags\nRUN npm ci --only=production --no-optional --audit-level moderate\n\n# Multi-stage build for production\nFROM base AS production\n\n# Copy application code\nCOPY --chown=nextjs:nodejs . .\n\n# Build application\nRUN npm run build\n\n# Remove development dependencies and clean npm cache\nRUN npm prune --production && npm cache clean --force\n\n# Security: Remove unnecessary packages\nRUN apk del --purge\n\n# Switch to non-root user\nUSER nextjs\n\n# Expose port\nEXPOSE 3000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost:3000/health || exit 1\n\n# Start application\nCMD ["npm", "start"]\n'})}),"\n",(0,s.jsx)(n.h2,{id:"container-security",children:"Container Security"}),"\n",(0,s.jsx)(n.h3,{id:"1-container-image-security-pipeline",children:"1. Container Image Security Pipeline"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/container-security.yml\nname: Container Security\n\non:\n  push:\n    branches: [main]\n\njobs:\n  container-security:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v4\n\n      - name: Build Docker Image\n        run: |\n          docker build -t ecommerce-app:${{ github.sha }} .\n\n      # Vulnerability Scanning\n      - name: Trivy Vulnerability Scanner\n        uses: aquasecurity/trivy-action@master\n        with:\n          image-ref: 'ecommerce-app:${{ github.sha }}'\n          format: 'table'\n          exit-code: '1'\n          ignore-unfixed: true\n          vuln-type: 'os,library'\n          severity: 'CRITICAL,HIGH'\n\n      # Image Security Best Practices\n      - name: Dive - Image Layer Analysis\n        run: |\n          docker run --rm -it \\\n            -v /var/run/docker.sock:/var/run/docker.sock \\\n            wagoodman/dive:latest ecommerce-app:${{ github.sha }}\n\n      # Container Runtime Security\n      - name: Grype Vulnerability Scanner\n        uses: anchore/scan-action@v3\n        with:\n          image: 'ecommerce-app:${{ github.sha }}'\n          fail-build: true\n          severity-cutoff: high\n\n      # Sign and Verify Images\n      - name: Install Cosign\n        uses: sigstore/cosign-installer@v3\n\n      - name: Sign Container Image\n        run: |\n          echo \"${{ secrets.COSIGN_PRIVATE_KEY }}\" > cosign.key\n          cosign sign --key cosign.key ecommerce-app:${{ github.sha }}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-container-security-policies",children:"2. Container Security Policies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# k8s/security-policies/pod-security-policy.yaml\napiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: ecommerce-psp\nspec:\n  privileged: false\n  allowPrivilegeEscalation: false\n  requiredDropCapabilities:\n    - ALL\n  volumes:\n    - 'configMap'\n    - 'emptyDir'\n    - 'projected'\n    - 'secret'\n    - 'downwardAPI'\n    - 'persistentVolumeClaim'\n  runAsUser:\n    rule: 'MustRunAsNonRoot'\n  seLinux:\n    rule: 'RunAsAny'\n  fsGroup:\n    rule: 'RunAsAny'\n  readOnlyRootFilesystem: true\n\n---\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: ecommerce-network-policy\nspec:\n  podSelector:\n    matchLabels:\n      app: ecommerce\n  policyTypes:\n    - Ingress\n    - Egress\n  ingress:\n    - from:\n        - namespaceSelector:\n            matchLabels:\n              name: ingress-nginx\n      ports:\n        - protocol: TCP\n          port: 3000\n  egress:\n    - to:\n        - namespaceSelector:\n            matchLabels:\n              name: database\n      ports:\n        - protocol: TCP\n          port: 5432\n"})}),"\n",(0,s.jsx)(n.h2,{id:"infrastructure-security",children:"Infrastructure Security"}),"\n",(0,s.jsx)(n.h3,{id:"1-terraform-security-configuration",children:"1. Terraform Security Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-hcl",children:'# terraform/security.tf\n# Enable Google Cloud Security Center\nresource "google_security_center_notification_config" "ecommerce_notifications" {\n  config_id    = "ecommerce-security-notifications"\n  organization = var.organization_id\n  description  = "Security notifications for ecommerce application"\n\n  pubsub_topic = google_pubsub_topic.security_notifications.id\n\n  streaming_config {\n    filter = "state = \\"ACTIVE\\" AND category = \\"MALWARE\\" OR category = \\"SUSPICIOUS_ACTIVITY\\""\n  }\n}\n\n# Binary Authorization for container images\nresource "google_binary_authorization_policy" "ecommerce_policy" {\n  admission_whitelist_patterns {\n    name_pattern = "gcr.io/${var.project_id}/*"\n  }\n\n  default_admission_rule {\n    evaluation_mode  = "REQUIRE_ATTESTATION"\n    enforcement_mode = "ENFORCED_BLOCK_AND_AUDIT_LOG"\n\n    require_attestations_by = [\n      google_binary_authorization_attestor.security_attestor.name,\n    ]\n  }\n\n  cluster_admission_rules {\n    cluster                 = "projects/${var.project_id}/locations/${var.region}/clusters/${var.cluster_name}"\n    evaluation_mode        = "REQUIRE_ATTESTATION"\n    enforcement_mode       = "ENFORCED_BLOCK_AND_AUDIT_LOG"\n    require_attestations_by = [\n      google_binary_authorization_attestor.security_attestor.name,\n    ]\n  }\n}\n\n# Cloud Armor Security Policy\nresource "google_compute_security_policy" "ecommerce_security_policy" {\n  name        = "ecommerce-security-policy"\n  description = "Security policy for ecommerce application"\n\n  # Block malicious IPs\n  rule {\n    action   = "deny(403)"\n    priority = "1000"\n    match {\n      versioned_expr = "SRC_IPS_V1"\n      config {\n        src_ip_ranges = var.blocked_ip_ranges\n      }\n    }\n    description = "Block malicious IP ranges"\n  }\n\n  # Rate limiting\n  rule {\n    action   = "rate_based_ban"\n    priority = "2000"\n    match {\n      versioned_expr = "SRC_IPS_V1"\n      config {\n        src_ip_ranges = ["*"]\n      }\n    }\n    rate_limit_options {\n      conform_action = "allow"\n      exceed_action  = "deny(429)"\n      enforce_on_key = "IP"\n      rate_limit_threshold {\n        count        = 100\n        interval_sec = 60\n      }\n      ban_duration_sec = 300\n    }\n    description = "Rate limit requests"\n  }\n\n  # Default rule\n  rule {\n    action   = "allow"\n    priority = "2147483647"\n    match {\n      versioned_expr = "SRC_IPS_V1"\n      config {\n        src_ip_ranges = ["*"]\n      }\n    }\n    description = "Default allow rule"\n  }\n}\n\n# VPC Security Configuration\nresource "google_compute_firewall" "ecommerce_firewall" {\n  name    = "ecommerce-firewall"\n  network = google_compute_network.ecommerce_vpc.name\n\n  # Deny all ingress by default\n  deny {\n    protocol = "all"\n  }\n\n  direction = "INGRESS"\n  priority  = 65534\n\n  source_ranges = ["0.0.0.0/0"]\n}\n\n# Allow specific traffic\nresource "google_compute_firewall" "ecommerce_allow_https" {\n  name    = "ecommerce-allow-https"\n  network = google_compute_network.ecommerce_vpc.name\n\n  allow {\n    protocol = "tcp"\n    ports    = ["443"]\n  }\n\n  direction     = "INGRESS"\n  priority      = 1000\n  source_ranges = ["0.0.0.0/0"]\n  target_tags   = ["ecommerce-web"]\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-gke-security-configuration",children:"2. GKE Security Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# k8s/security/gke-security-config.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: gke-security-config\ndata:\n  enable-pod-security-policy: 'true'\n  enable-network-policy: 'true'\n  enable-private-nodes: 'true'\n  enable-workload-identity: 'true'\n\n---\n# OPA Gatekeeper Constraints\napiVersion: templates.gatekeeper.sh/v1beta1\nkind: ConstraintTemplate\nmetadata:\n  name: k8srequiredsecuritycontext\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sRequiredSecurityContext\n      validation:\n        type: object\n        properties:\n          runAsNonRoot:\n            type: boolean\n          readOnlyRootFilesystem:\n            type: boolean\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8srequiredsecuritycontext\n\n        violation[{\"msg\": msg}] {\n          container := input.review.object.spec.containers[_]\n          not container.securityContext.runAsNonRoot\n          msg := \"Container must run as non-root user\"\n        }\n\n        violation[{\"msg\": msg}] {\n          container := input.review.object.spec.containers[_]\n          not container.securityContext.readOnlyRootFilesystem\n          msg := \"Container must use read-only root filesystem\"\n        }\n\n---\napiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sRequiredSecurityContext\nmetadata:\n  name: ecommerce-security-context\nspec:\n  match:\n    kinds:\n      - apiGroups: ['apps']\n        kinds: ['Deployment', 'DaemonSet', 'StatefulSet']\n    namespaces: ['ecommerce']\n  parameters:\n    runAsNonRoot: true\n    readOnlyRootFilesystem: true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"runtime-security",children:"Runtime Security"}),"\n",(0,s.jsx)(n.h3,{id:"1-falco-security-rules",children:"1. Falco Security Rules"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# k8s/security/falco-rules.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: falco-rules\n  namespace: falco\ndata:\n  ecommerce_rules.yaml: |\n    - rule: Ecommerce Suspicious Network Activity\n      desc: Detect suspicious network connections from ecommerce pods\n      condition: >\n        k8s_audit and\n        ka.target.namespace="ecommerce" and\n        ka.verb in (create, update) and\n        ka.target.resource="networkpolicies"\n      output: >\n        Suspicious network policy change in ecommerce namespace\n        (user=%ka.user.name verb=%ka.verb uri=%ka.uri.uri)\n      priority: WARNING\n      \n    - rule: Ecommerce Privilege Escalation\n      desc: Detect privilege escalation attempts in ecommerce containers\n      condition: >\n        spawned_process and\n        container and\n        k8s.ns.name="ecommerce" and\n        proc.name in (su, sudo, passwd) and\n        not proc.pname in (package-manager)\n      output: >\n        Privilege escalation attempt in ecommerce container\n        (user=%user.name command=%proc.cmdline container=%container.name)\n      priority: CRITICAL\n      \n    - rule: Ecommerce File System Modification\n      desc: Detect unauthorized file system modifications\n      condition: >\n        open_write and\n        container and\n        k8s.ns.name="ecommerce" and\n        fd.typechar=\'f\' and\n        (fd.name startswith /etc or\n         fd.name startswith /usr/bin or\n         fd.name startswith /usr/sbin)\n      output: >\n        Unauthorized file modification in ecommerce container\n        (file=%fd.name command=%proc.cmdline container=%container.name)\n      priority: ERROR\n\n---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: falco\n  namespace: falco\nspec:\n  selector:\n    matchLabels:\n      app: falco\n  template:\n    metadata:\n      labels:\n        app: falco\n    spec:\n      serviceAccount: falco\n      hostNetwork: true\n      hostPID: true\n      containers:\n        - name: falco\n          image: falcosecurity/falco:0.36.0\n          securityContext:\n            privileged: true\n          volumeMounts:\n            - name: dev\n              mountPath: /host/dev\n            - name: proc\n              mountPath: /host/proc\n              readOnly: true\n            - name: boot\n              mountPath: /host/boot\n              readOnly: true\n            - name: lib-modules\n              mountPath: /host/lib/modules\n              readOnly: true\n            - name: usr\n              mountPath: /host/usr\n              readOnly: true\n            - name: etc\n              mountPath: /host/etc\n              readOnly: true\n            - name: falco-config\n              mountPath: /etc/falco\n      volumes:\n        - name: dev\n          hostPath:\n            path: /dev\n        - name: proc\n          hostPath:\n            path: /proc\n        - name: boot\n          hostPath:\n            path: /boot\n        - name: lib-modules\n          hostPath:\n            path: /lib/modules\n        - name: usr\n          hostPath:\n            path: /usr\n        - name: etc\n          hostPath:\n            path: /etc\n        - name: falco-config\n          configMap:\n            name: falco-rules\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-istio-service-mesh-security",children:"2. Istio Service Mesh Security"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# k8s/security/istio-security.yaml\napiVersion: security.istio.io/v1beta1\nkind: PeerAuthentication\nmetadata:\n  name: ecommerce-mtls\n  namespace: ecommerce\nspec:\n  mtls:\n    mode: STRICT\n\n---\napiVersion: security.istio.io/v1beta1\nkind: AuthorizationPolicy\nmetadata:\n  name: ecommerce-authz\n  namespace: ecommerce\nspec:\n  selector:\n    matchLabels:\n      app: ecommerce-api\n  rules:\n    - from:\n        - source:\n            principals: ['cluster.local/ns/ecommerce/sa/frontend']\n    - to:\n        - operation:\n            methods: ['GET', 'POST']\n            paths: ['/api/*']\n\n---\napiVersion: networking.istio.io/v1beta1\nkind: DestinationRule\nmetadata:\n  name: ecommerce-circuit-breaker\n  namespace: ecommerce\nspec:\n  host: ecommerce-api\n  trafficPolicy:\n    connectionPool:\n      tcp:\n        maxConnections: 100\n      http:\n        http1MaxPendingRequests: 50\n        maxRequestsPerConnection: 5\n    outlierDetection:\n      consecutiveErrors: 3\n      interval: 30s\n      baseEjectionTime: 30s\n      maxEjectionPercent: 50\n"})}),"\n",(0,s.jsx)(n.h2,{id:"monitoring--incident-response",children:"Monitoring & Incident Response"}),"\n",(0,s.jsx)(n.h3,{id:"1-security-monitoring-with-datadog",children:"1. Security Monitoring with Datadog"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# datadog/security-monitoring.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: datadog-security-config\ndata:\n  security-monitoring.yaml: |\n    logs:\n      - type: file\n        path: "/var/log/audit/audit.log"\n        service: "kubernetes-audit"\n        source: "kubernetes.audit"\n        \n    # Security Detection Rules\n    detection_rules:\n      - name: "Suspicious kubectl activity"\n        query: "source:kubernetes.audit @http.method:POST @objectRef.resource:pods @verb:create"\n        aggregation:\n          type: "count"\n          groupBy: ["@user.username"]\n          metric: "events"\n        condition:\n          threshold: 10\n          timeframe: "5m"\n        \n      - name: "Failed authentication attempts"\n        query: "source:kubernetes.audit @verb:create @objectRef.resource:tokenreviews @responseStatus.code:[400 TO 499]"\n        aggregation:\n          type: "count"\n          groupBy: ["@sourceIPs"]\n        condition:\n          threshold: 5\n          timeframe: "1m"\n          \n      - name: "Privilege escalation attempt"\n        query: "source:falco @rule:\\"Privilege escalation attempt\\""\n        condition:\n          threshold: 1\n          \n    # Custom Security Metrics\n    custom_metrics:\n      - name: "ecommerce.security.failed_logins"\n        query: "source:ecommerce @level:error @message:\\"Authentication failed\\""\n        type: "count"\n        \n      - name: "ecommerce.security.suspicious_orders"\n        query: "source:ecommerce @event:order.created @risk_score:>80"\n        type: "count"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-incident-response-automation",children:"2. Incident Response Automation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# .github/workflows/incident-response.yml\nname: Security Incident Response\n\non:\n  repository_dispatch:\n    types: [security-incident]\n\njobs:\n  incident-response:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Parse Incident Data\n        id: parse\n        run: |\n          echo "severity=${{ github.event.client_payload.severity }}" >> $GITHUB_OUTPUT\n          echo "type=${{ github.event.client_payload.type }}" >> $GITHUB_OUTPUT\n          echo "source=${{ github.event.client_payload.source }}" >> $GITHUB_OUTPUT\n\n      - name: Critical Incident Response\n        if: steps.parse.outputs.severity == \'critical\'\n        run: |\n          # Auto-scale down compromised services\n          kubectl scale deployment compromised-service --replicas=0 -n ecommerce\n\n          # Trigger circuit breaker\n          kubectl patch destinationrule ecommerce-api -n ecommerce \\\n            --type=\'merge\' -p=\'{"spec":{"trafficPolicy":{"outlierDetection":{"consecutiveErrors":1}}}}\'\n\n          # Alert security team\n          curl -X POST "${{ secrets.SLACK_SECURITY_WEBHOOK }}" \\\n            -H \'Content-type: application/json\' \\\n            --data \'{"text":"\ud83d\udea8 CRITICAL Security Incident Detected - Auto-response activated"}\'\n\n      - name: Create Security Incident Issue\n        uses: actions/github-script@v6\n        with:\n          script: |\n            github.rest.issues.create({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              title: `Security Incident: ${{ steps.parse.outputs.type }}`,\n              body: `\n                **Severity:** ${{ steps.parse.outputs.severity }}\n                **Type:** ${{ steps.parse.outputs.type }}\n                **Source:** ${{ steps.parse.outputs.source }}\n                **Time:** ${new Date().toISOString()}\n                \n                **Auto-Response Actions Taken:**\n                - [ ] Service isolation\n                - [ ] Traffic redirection\n                - [ ] Security team notification\n                - [ ] Log collection initiated\n                \n                **Manual Actions Required:**\n                - [ ] Forensic analysis\n                - [ ] Root cause investigation\n                - [ ] Security patch deployment\n                - [ ] Post-incident review\n              `,\n              labels: [\'security\', \'incident\', `severity:${{ steps.parse.outputs.severity }}`]\n            })\n'})}),"\n",(0,s.jsx)(n.h2,{id:"compliance--governance",children:"Compliance & Governance"}),"\n",(0,s.jsx)(n.h3,{id:"1-pci-dss-compliance-configuration",children:"1. PCI-DSS Compliance Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# k8s/compliance/pci-dss-policies.yaml\napiVersion: kyverno.io/v1\nkind: ClusterPolicy\nmetadata:\n  name: pci-dss-compliance\nspec:\n  validationFailureAction: enforce\n  background: true\n  rules:\n    - name: require-encryption-in-transit\n      match:\n        any:\n          - resources:\n              kinds:\n                - Service\n      validate:\n        message: \'Services handling payment data must use TLS\'\n        pattern:\n          metadata:\n            annotations:\n              service.beta.kubernetes.io/aws-load-balancer-ssl-cert: \'*\'\n\n    - name: require-non-root-containers\n      match:\n        any:\n          - resources:\n              kinds:\n                - Pod\n      validate:\n        message: \'Containers must run as non-root for PCI compliance\'\n        pattern:\n          spec:\n            securityContext:\n              runAsNonRoot: true\n\n    - name: require-network-segmentation\n      match:\n        any:\n          - resources:\n              kinds:\n                - Pod\n              namespaces:\n                - payment\n      validate:\n        message: \'Payment pods must have network policies\'\n        pattern:\n          metadata:\n            labels:\n              network-policy: \'restricted\'\n\n---\n# Data Classification Policy\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: data-classification\ndata:\n  policy.yaml: |\n    data_classes:\n      - name: "cardholder_data"\n        description: "Credit card numbers, expiration dates, cardholder names"\n        protection_level: "high"\n        encryption_required: true\n        access_logging_required: true\n        retention_days: 365\n        \n      - name: "authentication_data"\n        description: "Passwords, PINs, cryptographic keys"\n        protection_level: "critical"\n        encryption_required: true\n        access_logging_required: true\n        storage_prohibited: true\n        \n      - name: "personal_data"\n        description: "Customer personal information"\n        protection_level: "medium"\n        encryption_required: true\n        access_logging_required: true\n        retention_days: 2555  # 7 years\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-gdpr-compliance-implementation",children:"2. GDPR Compliance Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// src/compliance/gdpr-compliance.service.ts\nimport { Injectable } from '@nestjs/common';\nimport { trace } from '@opentelemetry/api';\n\n@Injectable()\nexport class GDPRComplianceService {\n  private readonly tracer = trace.getTracer('gdpr-compliance');\n\n  async processDataRequest(requestType: 'access' | 'deletion' | 'portability', userId: string) {\n    return this.tracer.startActiveSpan(`gdpr.${requestType}_request`, async (span) => {\n      span.setAttributes({\n        'gdpr.request_type': requestType,\n        'gdpr.user_id': userId,\n        'gdpr.timestamp': new Date().toISOString(),\n      });\n\n      try {\n        switch (requestType) {\n          case 'access':\n            return await this.generateDataExport(userId);\n          case 'deletion':\n            return await this.deleteUserData(userId);\n          case 'portability':\n            return await this.exportPortableData(userId);\n        }\n      } catch (error) {\n        span.recordException(error);\n        throw error;\n      } finally {\n        span.end();\n      }\n    });\n  }\n\n  private async generateDataExport(userId: string) {\n    // Implementation for data export\n    const userData = await this.collectUserData(userId);\n\n    // Audit trail\n    await this.auditService.log({\n      action: 'gdpr_data_access',\n      userId,\n      timestamp: new Date(),\n      details: { dataTypes: Object.keys(userData) },\n    });\n\n    return userData;\n  }\n\n  private async deleteUserData(userId: string) {\n    // Implementation for data deletion with audit trail\n    const deletedData = await this.performDataDeletion(userId);\n\n    // Audit trail\n    await this.auditService.log({\n      action: 'gdpr_data_deletion',\n      userId,\n      timestamp: new Date(),\n      details: { deletedRecords: deletedData.length },\n    });\n\n    return { deleted: true, recordCount: deletedData.length };\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"implementation-roadmap",children:"Implementation Roadmap"}),"\n",(0,s.jsx)(n.h3,{id:"phase-1-foundation-weeks-1-2",children:"Phase 1: Foundation (Weeks 1-2)"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up pre-commit hooks and IDE security extensions"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure GitHub Actions security workflows"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement basic SAST scanning (SonarQube, Semgrep)"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up dependency scanning (Snyk, npm audit)"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure container scanning (Trivy)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"phase-2-cicd-security-weeks-3-4",children:"Phase 2: CI/CD Security (Weeks 3-4)"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement secure Docker builds"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up image signing with Cosign"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure Binary Authorization"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement infrastructure security scanning"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up Kubernetes security policies"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"phase-3-runtime-security-weeks-5-6",children:"Phase 3: Runtime Security (Weeks 5-6)"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Deploy Falco for runtime monitoring"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure OPA Gatekeeper policies"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement Istio service mesh security"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up Network Policies"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure Pod Security Policies"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"phase-4-monitoring--response-weeks-7-8",children:"Phase 4: Monitoring & Response (Weeks 7-8)"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up security monitoring dashboards"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure security alerting"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement incident response automation"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up log aggregation and analysis"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure threat detection rules"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"phase-5-compliance-weeks-9-10",children:"Phase 5: Compliance (Weeks 9-10)"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement PCI-DSS compliance measures"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up GDPR compliance features"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure data classification policies"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement audit trails"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up compliance reporting"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"phase-6-advanced-security-weeks-11-12",children:"Phase 6: Advanced Security (Weeks 11-12)"}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement chaos engineering for security"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up penetration testing automation"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Configure advanced threat detection"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Implement zero-trust networking"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Set up security training and awareness"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"cost-estimation",children:"Cost Estimation"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Tool Category"}),(0,s.jsx)(n.th,{children:"Tool"}),(0,s.jsx)(n.th,{children:"Monthly Cost"}),(0,s.jsx)(n.th,{children:"Annual Cost"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SAST"}),(0,s.jsx)(n.td,{children:"SonarQube Cloud"}),(0,s.jsx)(n.td,{children:"$10/user"}),(0,s.jsx)(n.td,{children:"$120/user"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Dependency Scanning"}),(0,s.jsx)(n.td,{children:"Snyk"}),(0,s.jsx)(n.td,{children:"$98/month"}),(0,s.jsx)(n.td,{children:"$1,176"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Container Security"}),(0,s.jsx)(n.td,{children:"Aqua Security"}),(0,s.jsx)(n.td,{children:"$150/month"}),(0,s.jsx)(n.td,{children:"$1,800"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Runtime Security"}),(0,s.jsx)(n.td,{children:"Falco (Open Source)"}),(0,s.jsx)(n.td,{children:"$0"}),(0,s.jsx)(n.td,{children:"$0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DAST"}),(0,s.jsx)(n.td,{children:"OWASP ZAP (Open Source)"}),(0,s.jsx)(n.td,{children:"$0"}),(0,s.jsx)(n.td,{children:"$0"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Secrets Management"}),(0,s.jsx)(n.td,{children:"Google Secret Manager"}),(0,s.jsx)(n.td,{children:"$6/10k operations"}),(0,s.jsx)(n.td,{children:"~$72"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Monitoring"}),(0,s.jsx)(n.td,{children:"Datadog Security"}),(0,s.jsx)(n.td,{children:"$23/host/month"}),(0,s.jsx)(n.td,{children:"$276/host"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Compliance"}),(0,s.jsx)(n.td,{children:"Custom Implementation"}),(0,s.jsx)(n.td,{children:"Development Time"}),(0,s.jsx)(n.td,{children:"-"})]})]})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Total Estimated Cost:"})," $300-500/month for a small team, scaling with usage."]}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"This comprehensive DevSecOps toolset provides:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Security-First Development"})," with automated security checks"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Comprehensive Scanning"})," at every stage of the pipeline"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Runtime Protection"})," with real-time threat detection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Compliance Automation"})," for PCI-DSS and GDPR requirements"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Incident Response"})," with automated containment and notification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Cost-Effective"})," mix of open-source and commercial tools"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The implementation focuses on automation, early detection, and rapid response to ensure your ecommerce application maintains the highest security standards while enabling rapid development and deployment."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5741:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var i=t(9729);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);