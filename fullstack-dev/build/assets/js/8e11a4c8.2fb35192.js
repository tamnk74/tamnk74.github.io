"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[9270],{9718:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/ELASTICSEARCH_SETUP","metadata":{"permalink":"/fullstack-dev/blog/ELASTICSEARCH_SETUP","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/ELASTICSEARCH_SETUP.md","source":"@site/blog/ELASTICSEARCH_SETUP.md","title":"Elasticsearch Full-Text Search Setup","description":"This guide will help you set up Elasticsearch for full-text search functionality in your Next.js application.","date":"2025-10-01T16:11:37.000Z","tags":[],"readingTime":4.37,"hasTruncateMarker":true,"authors":[],"frontMatter":{},"unlisted":false,"nextItem":{"title":"SEO Implementation Guide","permalink":"/fullstack-dev/blog/SEO_IMPLEMENTATION"}},"content":"This guide will help you set up Elasticsearch for full-text search functionality in your Next.js application.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Prerequisites\\n\\n- Node.js and npm/yarn installed\\n- Next.js application running\\n- Supabase database with posts\\n\\n## 1. Install Elasticsearch\\n\\n### Option A: Using Docker (Recommended for development)\\n\\n```bash\\n# Start Elasticsearch with Docker\\ndocker run -d \\\\\\n  --name elasticsearch \\\\\\n  -p 9200:9200 \\\\\\n  -e \\"discovery.type=single-node\\" \\\\\\n  -e \\"xpack.security.enabled=false\\" \\\\\\n  elasticsearch:8.11.0\\n\\n# Verify Elasticsearch is running\\ncurl http://localhost:9200\\n```\\n\\n### Option B: Local Installation\\n\\n1. Download Elasticsearch from [elastic.co](https://www.elastic.co/downloads/elasticsearch)\\n2. Follow the installation guide for your operating system\\n3. Start Elasticsearch service\\n\\n## 2. Environment Variables\\n\\nAdd these environment variables to your `.env.local` file:\\n\\n```env\\n# Elasticsearch Configuration\\nELASTICSEARCH_URL=http://localhost:9200\\nELASTICSEARCH_POSTS_INDEX=posts\\n\\n# Optional: Authentication (if your Elasticsearch requires auth)\\n# ELASTICSEARCH_USERNAME=your_username\\n# ELASTICSEARCH_PASSWORD=your_password\\n# ELASTICSEARCH_APIKEY=your_api_key\\n```\\n\\n## 3. Initialize the Index\\n\\n### Option A: Using the Web Interface (Development)\\n\\n1. Go to your posts page (`/posts`)\\n2. In the debug section, click \\"Check Status\\" to verify Elasticsearch connection\\n3. Click \\"Initialize Index\\" to create the index and bulk import existing posts\\n\\n### Option B: Using the Setup Script\\n\\n```bash\\n# Run the setup script\\nnpx tsx scripts/setup-elasticsearch.ts\\n\\n# Or add to package.json scripts:\\n# \\"setup:elasticsearch\\": \\"tsx scripts/setup-elasticsearch.ts\\"\\n# Then run: npm run setup:elasticsearch\\n```\\n\\n### Option C: Using the API Endpoint\\n\\n```bash\\n# Check Elasticsearch status\\ncurl http://localhost:3000/api/elasticsearch/init\\n\\n# Initialize the index\\ncurl -X POST http://localhost:3000/api/elasticsearch/init\\n```\\n\\n## 4. Features\\n\\n### Search Functionality\\n\\n- **Full-text search**: Search across post titles and content\\n- **Fuzzy matching**: Handles typos and similar words\\n- **Highlighting**: Search terms are highlighted in results\\n- **Fallback**: Falls back to database search if Elasticsearch is unavailable\\n- **Responsive**: Search bar available in navbar on desktop and mobile\\n\\n### Search Features\\n\\n- **Keyboard shortcut**: Press `Cmd+K` (Mac) or `Ctrl+K` (Windows/Linux) to focus search\\n- **Real-time results**: Search results update as you type\\n- **Pagination**: Large result sets are paginated\\n- **Sorting**: Results sorted by relevance score and creation date\\n\\n## 5. API Endpoints\\n\\n### Search Posts\\n```\\nGET /api/posts/search?q=search_term&page=1&limit=10\\n```\\n\\n### Initialize Elasticsearch\\n```\\nGET /api/elasticsearch/init    # Check status\\nPOST /api/elasticsearch/init   # Initialize index\\n```\\n\\n### Sync Posts to Elasticsearch\\n```\\nGET /api/elasticsearch/sync     # Health check and endpoints info\\nPOST /api/elasticsearch/sync?action=sync   # Sync all posts\\nPOST /api/elasticsearch/sync?action=health # Health check only\\n```\\n\\n## 6. Automatic Indexing\\n\\nPosts are automatically indexed in Elasticsearch when:\\n- **Creating a post**: New posts are indexed immediately after successful creation\\n- **Updating a post**: Modified posts are re-indexed with the latest content\\n- **Deleting a post**: Posts are removed from the Elasticsearch index\\n\\nThe indexing happens automatically in the background and won\'t affect the user experience. If Elasticsearch is unavailable, the database operations will still succeed, and only a warning will be logged.\\n\\n### Manual Sync\\n\\nIf you need to sync existing posts or re-index everything:\\n\\n#### Using the API\\n```bash\\n# Check Elasticsearch health\\ncurl http://localhost:3000/api/elasticsearch/sync\\n\\n# Sync all posts to Elasticsearch\\ncurl -X POST \\"http://localhost:3000/api/elasticsearch/sync?action=sync\\"\\n\\n# Health check only\\ncurl -X POST \\"http://localhost:3000/api/elasticsearch/sync?action=health\\"\\n```\\n\\n#### Using the Sync Service\\n```typescript\\nimport { syncPostsToElasticsearch } from \'@/shared/services/sync\';\\n\\nconst result = await syncPostsToElasticsearch();\\nconsole.log(`Synced ${result.syncedCount} posts`);\\n```\\n\\n### Monitoring Indexing\\n\\nDuring development, you can monitor indexing in the browser console:\\n- \u2705 `Post indexed in Elasticsearch: 123`\\n- \u2705 `Post updated in Elasticsearch: 123`\\n- \u2705 `Post deleted from Elasticsearch: 123`\\n- \u26a0\ufe0f `Failed to index post in Elasticsearch: [error details]`\\n\\n## 7. Troubleshooting\\n\\n### Elasticsearch not connecting\\n\\n1. Verify Elasticsearch is running: `curl http://localhost:9200`\\n2. Check environment variables in `.env.local`\\n3. Check Docker container status: `docker ps`\\n4. View Docker logs: `docker logs elasticsearch`\\n\\n### Search not working\\n\\n1. Check if index exists: Use the debug panel in `/posts`\\n2. Verify posts are indexed: Look for \\"posts indexed\\" message\\n3. Check browser console for JavaScript errors\\n4. Verify API endpoints are working\\n\\n### Performance Issues\\n\\n1. Increase Elasticsearch memory: Add `-e \\"ES_JAVA_OPTS=-Xms512m -Xmx512m\\"` to Docker command\\n2. Optimize search queries in `elasticsearch.ts`\\n3. Implement caching for frequently searched terms\\n\\n## 8. Production Deployment\\n\\n### Elasticsearch Service\\n\\nFor production, consider using:\\n- **Elastic Cloud**: Managed Elasticsearch service\\n- **AWS OpenSearch**: Amazon\'s Elasticsearch service\\n- **Self-hosted**: Deploy Elasticsearch on your own infrastructure\\n\\n### Environment Variables for Production\\n\\n```env\\nELASTICSEARCH_URL=https://your-production-elasticsearch-url\\nELASTICSEARCH_APIKEY=your-production-api-key\\nELASTICSEARCH_POSTS_INDEX=production_posts\\n```\\n\\n### Security Considerations\\n\\n1. Enable authentication on Elasticsearch\\n2. Use HTTPS for Elasticsearch connections\\n3. Restrict network access to Elasticsearch\\n4. Regularly update Elasticsearch version\\n\\n## 9. Monitoring and Maintenance\\n\\n### Health Checks\\n\\nThe application includes health checks:\\n- Elasticsearch availability check in search API\\n- Fallback to database search if Elasticsearch is down\\n- Status indicators in development debug panel\\n\\n### Index Maintenance\\n\\n- **Reindexing**: Use the initialize endpoint to rebuild the index\\n- **Mapping updates**: Update the mapping in `elasticsearch.ts` and reinitialize\\n- **Performance monitoring**: Monitor query performance and optimize as needed\\n\\n## 10. Customization\\n\\n### Search Configuration\\n\\nEdit `src/shared/services/elasticsearch.ts` to customize:\\n- Search fields and boost values\\n- Highlighting settings\\n- Fuzzy matching sensitivity\\n- Result sorting criteria\\n\\n### UI Customization\\n\\nEdit components to customize:\\n- `src/shared/ui/search-bar/index.tsx`: Search bar appearance\\n- `src/features/posts/list/ui.tsx`: Results display\\n- `src/app/[locale]/components/Navbar.tsx`: Navbar integration\\n\\n## Support\\n\\nIf you encounter issues:\\n1. Check the troubleshooting section above\\n2. Review Elasticsearch logs\\n3. Check browser console for errors\\n4. Verify environment variables are set correctly"},{"id":"/SEO_IMPLEMENTATION","metadata":{"permalink":"/fullstack-dev/blog/SEO_IMPLEMENTATION","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/SEO_IMPLEMENTATION.md","source":"@site/blog/SEO_IMPLEMENTATION.md","title":"SEO Implementation Guide","description":"This document outlines the comprehensive SEO implementation added to the Next.js application using next-sitemap and next-seo packages.","date":"2025-10-01T16:11:37.000Z","tags":[],"readingTime":4.3,"hasTruncateMarker":true,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Elasticsearch Full-Text Search Setup","permalink":"/fullstack-dev/blog/ELASTICSEARCH_SETUP"},"nextItem":{"title":"SEO Setup with next-sitemap","permalink":"/fullstack-dev/blog/SEO_SETUP"}},"content":"This document outlines the comprehensive SEO implementation added to the Next.js application using `next-sitemap` and `next-seo` packages.\\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83d\udccb Overview\\n\\nThe SEO implementation includes:\\n- **Sitemap Generation** with `next-sitemap`\\n- **Meta Tags Management** with `next-seo`\\n- **Structured Data** (JSON-LD) support\\n- **Multilingual SEO** for English and Vietnamese\\n- **Social Media Optimization** (OpenGraph, Twitter Cards)\\n- **SEO Health Monitoring** tools\\n\\n## \ud83d\uddc2\ufe0f File Structure\\n\\n```\\nsrc/\\n\u251c\u2500\u2500 config/\\n\u2502   \u251c\u2500\u2500 seo.ts              # Default SEO configuration\\n\u2502   \u2514\u2500\u2500 seo-pages.ts        # Page-specific SEO configurations\\n\u251c\u2500\u2500 components/\\n\u2502   \u251c\u2500\u2500 SEOWrapper.tsx      # Global SEO wrapper component\\n\u2502   \u2514\u2500\u2500 PageSEO.tsx         # Page-specific SEO components\\n\u251c\u2500\u2500 hooks/\\n\u2502   \u2514\u2500\u2500 useSEO.ts          # SEO utility hooks\\n\u2514\u2500\u2500 app/\\n    \u2514\u2500\u2500 [locale]/\\n        \u2514\u2500\u2500 layout.tsx      # Updated with SEO integration\\n\\nConfiguration Files:\\n\u251c\u2500\u2500 next-sitemap.config.js  # Sitemap generation configuration\\n\u2514\u2500\u2500 scripts/\\n    \u2514\u2500\u2500 seo-health-check.js # SEO monitoring script\\n```\\n\\n## \ud83d\udd27 Core Components\\n\\n### 1. Default SEO Configuration (`src/config/seo.ts`)\\n\\n```typescript\\nexport const defaultSEO: DefaultSeoProps = {\\n  titleTemplate: \'%s | Next.js Production App\',\\n  defaultTitle: \'Next.js Production App\',\\n  description: \'A production-ready Next.js application with modern features...\',\\n  openGraph: {\\n    type: \'website\',\\n    locale: \'en_US\',\\n    url: \'https://next-for-prod.com/\',\\n    siteName: \'Next.js Production App\',\\n    images: [{ url: \'/og-default.jpg\', width: 1200, height: 630 }]\\n  },\\n  twitter: {\\n    handle: \'@nextjsprod\',\\n    site: \'@nextjsprod\',\\n    cardType: \'summary_large_image\'\\n  }\\n};\\n```\\n\\n### 2. Page-Specific SEO (`src/config/seo-pages.ts`)\\n\\nProvides localized SEO configurations for all major pages:\\n- Home, About, Libraries, Tools, Calendar, Posts, Feedback\\n- Authentication pages (Login, Signup)\\n- Multilingual support (English/Vietnamese)\\n- Canonical URLs and language alternates\\n\\n### 3. SEO Components (`src/components/PageSEO.tsx`)\\n\\n```typescript\\n// Specialized components for each page type\\n<HomeSEO />\\n<AboutSEO />\\n<LibsSEO />\\n<ArticleSEO \\n  title=\\"Article Title\\"\\n  description=\\"Article description\\"\\n  url=\\"https://example.com/article\\"\\n  datePublished=\\"2024-01-01\\"\\n  image=\\"/article-image.jpg\\"\\n/>\\n```\\n\\n### 4. SEO Hooks (`src/hooks/useSEO.ts`)\\n\\n```typescript\\n// Automatic SEO based on current route\\nconst seoConfig = useSEO();\\n\\n// Manual page specification\\nconst seoConfig = useSEO(\'home\');\\n\\n// Get canonical URL\\nconst canonicalUrl = useCanonicalUrl();\\n\\n// Generate structured data\\nconst organizationData = useStructuredData(\'organization\');\\n```\\n\\n## \ud83d\uddfa\ufe0f Sitemap Configuration\\n\\n### next-sitemap.config.js\\n\\n```javascript\\nmodule.exports = {\\n  siteUrl: process.env.SITE_URL || \'https://yourdomain.com\',\\n  generateRobotstxt: true,\\n  sitemapSize: 7000,\\n  changefreq: \'daily\',\\n  priority: 0.7,\\n  additionalPaths: async (config) => {\\n    // 29 URLs total with multilingual support\\n    // Static pages, dynamic routes, auth pages\\n  },\\n  robotsTxtOptions: {\\n    policies: [\\n      { userAgent: \'*\', allow: \'/\' },\\n      { userAgent: \'GPTBot\', disallow: [\'/\'] },\\n      { userAgent: \'ChatGPT-User\', disallow: [\'/\'] },\\n      { userAgent: \'CCBot\', disallow: [\'/\'] }\\n    ]\\n  }\\n};\\n```\\n\\n### Generated Files\\n- **`public/sitemap.xml`**: 29 URLs with proper priorities and change frequencies\\n- **`public/robots.txt`**: AI crawler blocking and sitemap references\\n\\n## \ud83c\udf10 Multilingual SEO\\n\\nEach page supports both English and Vietnamese with:\\n- Localized titles and descriptions\\n- Proper `hreflang` attributes\\n- Language-specific OpenGraph images\\n- Canonical URLs for each locale\\n\\n```typescript\\n// English\\ncanonical: `${BASE_URL}/en/about`\\nhreflang: [\\n  { hrefLang: \'en\', href: `${BASE_URL}/en/about` },\\n  { hrefLang: \'vi\', href: `${BASE_URL}/vi/about` },\\n  { hrefLang: \'x-default\', href: `${BASE_URL}/en/about` }\\n]\\n\\n// Vietnamese  \\ncanonical: `${BASE_URL}/vi/about`\\nlocale: \'vi_VN\'\\n```\\n\\n## \ud83d\udcca Structured Data Support\\n\\n### Organization Schema\\n```json\\n{\\n  \\"@context\\": \\"https://schema.org\\",\\n  \\"@type\\": \\"Organization\\",\\n  \\"name\\": \\"Next.js Production App\\",\\n  \\"url\\": \\"https://next-for-prod.com\\",\\n  \\"logo\\": \\"https://next-for-prod.com/logo.png\\"\\n}\\n```\\n\\n### Article Schema\\n```json\\n{\\n  \\"@context\\": \\"https://schema.org\\",\\n  \\"@type\\": \\"Article\\",\\n  \\"headline\\": \\"Article Title\\",\\n  \\"datePublished\\": \\"2024-01-01\\",\\n  \\"author\\": { \\"@type\\": \\"Person\\", \\"name\\": \\"Author Name\\" }\\n}\\n```\\n\\n### Breadcrumb Schema\\n```json\\n{\\n  \\"@context\\": \\"https://schema.org\\",\\n  \\"@type\\": \\"BreadcrumbList\\",\\n  \\"itemListElement\\": [...]\\n}\\n```\\n\\n## \ud83d\ude80 Usage Examples\\n\\n### 1. Basic Page SEO\\n```tsx\\nimport { HomeSEO } from \'@/components/PageSEO\';\\n\\nexport default function HomePage() {\\n  return (\\n    <>\\n      <HomeSEO />\\n      <main>\\n        {/* Page content */}\\n      </main>\\n    </>\\n  );\\n}\\n```\\n\\n### 2. Custom SEO Override\\n```tsx\\nimport { PageSEO } from \'@/components/PageSEO\';\\n\\nexport default function CustomPage() {\\n  return (\\n    <>\\n      <PageSEO \\n        pageKey=\\"home\\"\\n        customSEO={{\\n          title: \'Custom Title\',\\n          description: \'Custom description\'\\n        }}\\n      />\\n      <main>\\n        {/* Page content */}\\n      </main>\\n    </>\\n  );\\n}\\n```\\n\\n### 3. Article with Structured Data\\n```tsx\\nimport { ArticleSEO } from \'@/components/PageSEO\';\\n\\nexport default function BlogPost() {\\n  return (\\n    <>\\n      <ArticleSEO\\n        title=\\"How to Build Production-Ready Next.js Apps\\"\\n        description=\\"Complete guide to building scalable Next.js applications\\"\\n        url=\\"https://next-for-prod.com/en/posts/production-nextjs\\"\\n        datePublished=\\"2024-01-15\\"\\n        authorName=\\"Development Team\\"\\n        image=\\"/posts/production-nextjs-og.jpg\\"\\n      />\\n      <article>\\n        {/* Article content */}\\n      </article>\\n    </>\\n  );\\n}\\n```\\n\\n## \ud83d\udd0d SEO Health Monitoring\\n\\n### Health Check Script (`scripts/seo-health-check.js`)\\n\\n```bash\\nnode scripts/seo-health-check.js\\n```\\n\\nValidates:\\n- \u2705 Sitemap accessibility\\n- \u2705 Robots.txt functionality  \\n- \u2705 Page response codes\\n- \u2705 Meta tag presence\\n- \u2705 OpenGraph data\\n- \u2705 Structured data validation\\n\\n## \ud83d\udee0\ufe0f Build Integration\\n\\nThe sitemap automatically regenerates on every build:\\n\\n```json\\n{\\n  \\"scripts\\": {\\n    \\"build\\": \\"next build\\",\\n    \\"postbuild\\": \\"next-sitemap\\"\\n  }\\n}\\n```\\n\\n## \ud83d\udcc8 SEO Features Summary\\n\\n| Feature | Status | Description |\\n|---------|--------|-------------|\\n| **Sitemap Generation** | \u2705 | 29 URLs with multilingual support |\\n| **Robots.txt** | \u2705 | AI crawler blocking, sitemap references |\\n| **Meta Tags** | \u2705 | Title, description, viewport, theme-color |\\n| **OpenGraph** | \u2705 | Facebook, LinkedIn sharing optimization |\\n| **Twitter Cards** | \u2705 | Twitter sharing optimization |\\n| **Structured Data** | \u2705 | Organization, Article, Breadcrumb schemas |\\n| **Multilingual** | \u2705 | English/Vietnamese with hreflang |\\n| **Canonical URLs** | \u2705 | Proper URL canonicalization |\\n| **Health Monitoring** | \u2705 | Automated SEO validation |\\n\\n## \ud83c\udfaf Best Practices Implemented\\n\\n1. **Title Templates**: Consistent branding across all pages\\n2. **Unique Descriptions**: Each page has specific, descriptive meta descriptions\\n3. **Image Optimization**: 1200x630 OpenGraph images for optimal sharing\\n4. **Mobile Optimization**: Proper viewport and mobile meta tags\\n5. **Accessibility**: Alt text for images, proper heading structure\\n6. **Performance**: Minimal SEO overhead, efficient component structure\\n7. **Internationalization**: Proper language declarations and alternates\\n\\n## \ud83d\udd2e Future Enhancements\\n\\n- [ ] **Video Structured Data** for video content\\n- [ ] **FAQ Schema** for help pages\\n- [ ] **Local Business Schema** if applicable\\n- [ ] **Product Schema** for e-commerce features\\n- [ ] **Review Schema** for user-generated content\\n- [ ] **Event Schema** for calendar integration\\n- [ ] **Advanced Analytics** integration\\n- [ ] **Core Web Vitals** monitoring\\n\\n## \ud83d\udcda References\\n\\n- [next-seo Documentation](https://github.com/garmeeh/next-seo)\\n- [next-sitemap Documentation](https://github.com/iamvishnusankar/next-sitemap)\\n- [Google Search Console Guidelines](https://developers.google.com/search/docs)\\n- [Schema.org Documentation](https://schema.org/)\\n- [OpenGraph Protocol](https://ogp.me/)\\n- [Twitter Card Validator](https://cards-dev.twitter.com/validator)\\n\\n---\\n\\n**\ud83c\udf89 Your Next.js application now has enterprise-grade SEO implementation!**\\n\\nThe setup includes comprehensive sitemap generation, meta tag management, structured data, and multilingual support. All major search engines can now properly index and display your content in search results and social media platforms."},{"id":"/SEO_SETUP","metadata":{"permalink":"/fullstack-dev/blog/SEO_SETUP","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/SEO_SETUP.md","source":"@site/blog/SEO_SETUP.md","title":"SEO Setup with next-sitemap","description":"This project uses next-sitemap to generate SEO-optimized sitemaps and robots.txt files.","date":"2025-10-01T16:11:37.000Z","tags":[],"readingTime":2.08,"hasTruncateMarker":true,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"SEO Implementation Guide","permalink":"/fullstack-dev/blog/SEO_IMPLEMENTATION"},"nextItem":{"title":"Social Login Setup (Google & GitHub)","permalink":"/fullstack-dev/blog/SOCIAL_LOGIN_SETUP"}},"content":"This project uses `next-sitemap` to generate SEO-optimized sitemaps and robots.txt files.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Features\\n\\n\u2705 **Automatic Sitemap Generation**: Generates comprehensive sitemaps for all public routes  \\n\u2705 **Multi-language Support**: Full support for English (`en`) and Vietnamese (`vi`) locales  \\n\u2705 **Robots.txt Generation**: Automatic robots.txt with AI crawler blocking  \\n\u2705 **SEO Optimization**: Proper priorities, change frequencies, and hreflang attributes  \\n\u2705 **Build Integration**: Automatically runs after each build  \\n\\n## Configuration\\n\\n### Environment Variables\\n\\nSet your production domain in your environment:\\n\\n```bash\\n# .env.local or .env.production\\nNEXT_PUBLIC_APP_URL=https://next-for-prod.com\\n```\\n\\n### Routes Included\\n\\nThe sitemap includes these public routes for both locales:\\n\\n- **Homepage**: `/en`, `/vi` (Priority: 1.0, Daily updates)\\n- **Content Pages**: `/about`, `/libs`, `/posts`, `/calendar` (High priority)\\n- **Tools**: `/tools`, `/search-*`, `/roadmap/*` (Medium priority)\\n- **Auth Pages**: `/login`, `/signup` (Lower priority)\\n- **Utility Pages**: `/feedback` (Medium priority)\\n\\n### Routes Excluded\\n\\nThese routes are excluded from search engines:\\n\\n- Admin pages (`/admin/*`)\\n- User profiles (`/profile/*`, `/me/*`)\\n- Private settings (`/settings`)\\n- API routes (`/api/*`)\\n- Test pages (`/test-*`)\\n- Authentication callbacks (`/auth/*`)\\n- Edit/create forms\\n\\n## Usage\\n\\n### Generate Sitemap\\n\\n```bash\\n# Manual generation\\npnpm sitemap:generate\\n\\n# Automatic generation after build\\npnpm build  # Runs next-sitemap via postbuild script\\n```\\n\\n### Generated Files\\n\\n- `public/sitemap.xml` - Main sitemap with all URLs\\n- `public/robots.txt` - Search engine directives\\n\\n### SEO Utilities\\n\\nThe project includes SEO utilities in `src/utils/seo.ts`:\\n\\n```typescript\\nimport { generatePageSEO } from \'@/utils/seo\';\\n\\nexport const metadata = generatePageSEO(\'home\', \'en\');\\n```\\n\\nAvailable functions:\\n- `generateSEOMetadata()` - Comprehensive metadata generation\\n- `generatePageSEO()` - Page-specific SEO metadata\\n- `generateStructuredData()` - JSON-LD structured data\\n\\n## AI Crawler Blocking\\n\\nThe robots.txt automatically blocks these AI crawlers:\\n- GPTBot\\n- ChatGPT-User  \\n- CCBot\\n- anthropic-ai\\n- Claude-Web\\n\\n## Monitoring\\n\\n### Google Search Console\\n\\n1. Submit your sitemap: `https://yourdomain.com/sitemap.xml`\\n2. Monitor indexing status\\n3. Check for crawl errors\\n\\n### Validation Tools\\n\\n- [Google Rich Results Test](https://search.google.com/test/rich-results)\\n- [Bing Webmaster Tools](https://www.bing.com/webmasters)\\n- [XML Sitemap Validator](https://www.xml-sitemaps.com/validate-xml-sitemap.html)\\n\\n## Configuration File\\n\\nEdit `next-sitemap.config.js` to:\\n- Add new routes\\n- Modify priorities and change frequencies\\n- Update hreflang mappings\\n- Exclude additional paths\\n\\n## Best Practices\\n\\n1. **Update sitemap after major changes**: Run `pnpm sitemap:generate`\\n2. **Monitor crawl budget**: Use robots.txt to guide crawlers to important pages\\n3. **Regular audits**: Check for 404s and crawl errors\\n4. **Performance**: Exclude dynamic/user-specific pages from sitemap\\n5. **Localization**: Ensure hreflang attributes are correct for international SEO\\n\\n## Troubleshooting\\n\\n### Sitemap not updating\\n- Run `pnpm build` to regenerate\\n- Check `next-sitemap.config.js` for syntax errors\\n- Verify environment variables\\n\\n### Routes missing from sitemap\\n- Add to `additionalPaths` in config\\n- Check exclusion rules\\n- Ensure pages are statically accessible\\n\\n### robots.txt issues  \\n- Verify `generateRobotsTxt: true` in config\\n- Check policy rules for conflicts\\n- Test with robots.txt validators"},{"id":"/SOCIAL_LOGIN_SETUP","metadata":{"permalink":"/fullstack-dev/blog/SOCIAL_LOGIN_SETUP","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/SOCIAL_LOGIN_SETUP.md","source":"@site/blog/SOCIAL_LOGIN_SETUP.md","title":"Social Login Setup (Google & GitHub)","description":"This document explains how to set up Google and GitHub OAuth providers in your Supabase project.","date":"2025-10-01T16:11:37.000Z","tags":[],"readingTime":2.04,"hasTruncateMarker":true,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"SEO Setup with next-sitemap","permalink":"/fullstack-dev/blog/SEO_SETUP"},"nextItem":{"title":"Introducing Next.js for Production","permalink":"/fullstack-dev/blog/introducing-fullstack-devuction"}},"content":"This document explains how to set up Google and GitHub OAuth providers in your Supabase project.\\n\\n\x3c!-- truncate --\x3e\\n\\n## \ud83d\udd27 Supabase Configuration\\n\\n### 1. Google OAuth Setup\\n\\n1. **Create Google OAuth App**:\\n   - Go to [Google Cloud Console](https://console.cloud.google.com/)\\n   - Create a new project or select existing one\\n   - Enable Google+ API\\n   - Go to \\"Credentials\\" \u2192 \\"Create Credentials\\" \u2192 \\"OAuth 2.0 Client IDs\\"\\n   - Choose \\"Web application\\"\\n   - Add authorized redirect URIs:\\n     ```\\n     https://your-project-ref.supabase.co/auth/v1/callback\\n     ```\\n\\n2. **Configure in Supabase**:\\n   - Go to your Supabase project dashboard\\n   - Navigate to \\"Authentication\\" \u2192 \\"Providers\\"\\n   - Enable \\"Google\\"\\n   - Add your Google Client ID and Client Secret\\n   - Save configuration\\n\\n### 2. GitHub OAuth Setup\\n\\n1. **Create GitHub OAuth App**:\\n   - Go to GitHub Settings \u2192 Developer settings \u2192 OAuth Apps\\n   - Click \\"New OAuth App\\"\\n   - Fill in the details:\\n     - Application name: Your app name\\n     - Homepage URL: Your app URL\\n     - Authorization callback URL:\\n       ```\\n       https://your-project-ref.supabase.co/auth/v1/callback\\n       ```\\n\\n2. **Configure in Supabase**:\\n   - Go to your Supabase project dashboard\\n   - Navigate to \\"Authentication\\" \u2192 \\"Providers\\"\\n   - Enable \\"GitHub\\"\\n   - Add your GitHub Client ID and Client Secret\\n   - Save configuration\\n\\n## \ud83d\ude80 Implementation Features\\n\\n### Frontend Components\\n\\n- **Login Form** (`src/features/auth/login-form/ui.tsx`):\\n  - Google login button with brand colors\\n  - GitHub login button\\n  - Loading states and error handling\\n  - Disabled state during authentication\\n\\n- **OAuth Callback** (`src/app/[locale]/auth/callback/route.ts`):\\n  - Handles OAuth redirects from providers\\n  - Exchanges authorization codes for sessions\\n  - Redirects with success/error messages\\n\\n### User Experience\\n\\n1. **Login Flow**:\\n   - User clicks Google/GitHub button\\n   - Redirected to provider\'s authorization page\\n   - After approval, redirected back to `/auth/callback`\\n   - Session established and redirected to home page\\n\\n2. **Error Handling**:\\n   - Provider authentication failures\\n   - Network errors\\n   - Invalid callback requests\\n   - User-friendly error messages\\n\\n## \ud83d\udd12 Security Features\\n\\n- **PKCE Flow**: Uses Proof Key for Code Exchange for security\\n- **State Validation**: Prevents CSRF attacks\\n- **Secure Redirects**: Only allows authorized redirect URLs\\n- **Session Management**: Proper cookie handling and session storage\\n\\n## \ud83c\udfa8 UI/UX Improvements\\n\\n- **Brand Colors**: Google (red) and GitHub (gray) themed buttons\\n- **Loading States**: Buttons disabled during authentication\\n- **Clear Messaging**: Success and error feedback\\n- **Responsive Design**: Works on mobile and desktop\\n\\n## \ud83d\udcdd Usage Notes\\n\\n- Make sure to configure your OAuth apps with the correct callback URLs\\n- Test both providers in development and production environments\\n- The callback route handles both success and error cases\\n- Users will be redirected to the home page after successful login\\n\\n## \ud83d\udc1b Troubleshooting\\n\\n1. **\\"Invalid redirect URI\\"**: Check your OAuth app callback URLs\\n2. **\\"Client ID not found\\"**: Verify Supabase provider configuration\\n3. **\\"Authentication failed\\"**: Check provider app permissions and status\\n4. **Session not persisting**: Verify cookie settings and domain configuration"},{"id":"introducing-fullstack-devuction","metadata":{"permalink":"/fullstack-dev/blog/introducing-fullstack-devuction","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/2024-01-01-introducing-nextjs-for-production.md","source":"@site/blog/2024-01-01-introducing-nextjs-for-production.md","title":"Introducing Next.js for Production","description":"We\'re excited to introduce Next.js for Production - a comprehensive, enterprise-grade Next.js application that demonstrates best practices, modern architecture, and production-ready features.","date":"2024-01-01T00:00:00.000Z","tags":[{"inline":false,"label":"Next.js","permalink":"/fullstack-dev/blog/tags/nextjs","description":"Next.js framework and related topics"},{"inline":false,"label":"TypeScript","permalink":"/fullstack-dev/blog/tags/typescript","description":"TypeScript language and type safety"},{"inline":false,"label":"Production","permalink":"/fullstack-dev/blog/tags/production","description":"Production-ready development and deployment"},{"inline":false,"label":"Architecture","permalink":"/fullstack-dev/blog/tags/architecture","description":"Software architecture and design patterns"}],"readingTime":2.08,"hasTruncateMarker":true,"authors":[{"name":"Tam Nguyen","title":"Full Stack Developer, Next.js for Production Creator","url":"https://github.com/tamnk74","page":{"permalink":"/fullstack-dev/blog/authors/tam"},"socials":{"github":"https://github.com/tamnk74"},"imageURL":"https://github.com/tamnk74.png","key":"tam"}],"frontMatter":{"slug":"introducing-fullstack-devuction","title":"Introducing Next.js for Production","authors":["tam"],"tags":["nextjs","typescript","production","architecture"]},"unlisted":false,"prevItem":{"title":"Social Login Setup (Google & GitHub)","permalink":"/fullstack-dev/blog/SOCIAL_LOGIN_SETUP"},"nextItem":{"title":"Welcome","permalink":"/fullstack-dev/blog/welcome"}},"content":"We\'re excited to introduce **Next.js for Production** - a comprehensive, enterprise-grade Next.js application that demonstrates best practices, modern architecture, and production-ready features.\\n\\n\x3c!-- truncate --\x3e\\n\\n## What Makes This Project Special?\\n\\n### \ud83c\udfd7\ufe0f Modern Architecture\\n\\nOur project follows a clean, scalable architecture based on:\\n\\n- **Atomic Design**: Components are organized into atoms, molecules, organisms, and templates\\n- **Feature-Based Structure**: Each major feature is self-contained with its own components, hooks, and services\\n- **TypeScript First**: Complete type safety across the entire application\\n- **Domain-Driven Design**: Clear separation of business logic and presentation layers\\n\\n### \ud83d\udd10 Enterprise Security\\n\\nSecurity is built into every layer:\\n\\n- **Authentication**: Multi-provider auth with Supabase\\n- **Authorization**: Role-based access control (RBAC) with row-level security\\n- **Input Validation**: Zod schemas for runtime type checking\\n- **Rate Limiting**: API protection with Arcjet\\n- **Security Headers**: Comprehensive security headers configuration\\n\\n### \ud83d\udcca Real-World Features\\n\\nThe application includes features you\'d find in production applications:\\n\\n- **Calendar System**: Advanced calendar with recurring events and real-time updates\\n- **Library Management**: Elasticsearch-powered search with faceted filtering\\n- **User Management**: Complete user lifecycle with profiles and preferences\\n- **Internationalization**: Multi-language support with next-intl\\n- **Real-time Updates**: WebSocket integration for live data synchronization\\n\\n## Technical Highlights\\n\\n### Performance First\\n\\n- **Core Web Vitals**: Optimized for all performance metrics\\n- **Image Optimization**: Next.js Image component with CDN integration\\n- **Code Splitting**: Automatic route-based and component-based splitting\\n- **Caching Strategy**: Multi-layer caching with Redis and CDN\\n\\n### Developer Experience\\n\\n- **Hot Reload**: Instant feedback during development\\n- **Type Safety**: End-to-end TypeScript coverage\\n- **Testing**: Comprehensive test suite with Vitest and Playwright\\n- **Linting**: ESLint and Prettier for code quality\\n- **Git Hooks**: Automated quality checks with Husky\\n\\n### Production Ready\\n\\n- **Docker**: Multi-stage builds for optimization\\n- **CI/CD**: GitHub Actions for automated testing and deployment\\n- **Monitoring**: Health checks and error tracking\\n- **Scalability**: Horizontal scaling with load balancers\\n\\n## Getting Started\\n\\nGetting started is simple:\\n\\n```bash\\ngit clone https://github.com/tamnk74/fullstack-dev.git\\ncd fullstack-dev\\npnpm install\\npnpm dev\\n```\\n\\nVisit our [Setup Guide](/docs/setup) for detailed installation instructions.\\n\\n## What\'s Next?\\n\\nWe\'re continuously improving the project with:\\n\\n- **Mobile App**: React Native companion app\\n- **Advanced Analytics**: Enhanced reporting dashboard  \\n- **AI Integration**: Smart content recommendations\\n- **Workflow Automation**: Custom workflow builder\\n\\n## Contributing\\n\\nWe welcome contributions! Check out our [Contributing Guide](/docs/contributing) to get started.\\n\\n## Learn More\\n\\n- [Documentation](/docs/intro)\\n- [Architecture Guide](/docs/architecture)\\n- [API Reference](/docs/api-reference)\\n- [GitHub Repository](https://github.com/tamnk74/fullstack-dev)\\n\\n---\\n\\n*This project represents months of research, development, and refinement to create a truly production-ready Next.js application. We hope it serves as a valuable reference for your own projects.*"},{"id":"welcome","metadata":{"permalink":"/fullstack-dev/blog/welcome","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/2021-08-26-welcome/index.md","source":"@site/blog/2021-08-26-welcome/index.md","title":"Welcome","description":"Docusaurus blogging features are powered by the blog plugin.","date":"2021-08-26T00:00:00.000Z","tags":[{"inline":false,"label":"Facebook","permalink":"/fullstack-dev/blog/tags/facebook","description":"Facebook-related development and integration"},{"inline":false,"label":"Hello","permalink":"/fullstack-dev/blog/tags/hello","description":"Introduction and welcome posts"},{"inline":false,"label":"Docusaurus","permalink":"/fullstack-dev/blog/tags/docusaurus","description":"Docusaurus documentation platform"}],"readingTime":0.56,"hasTruncateMarker":true,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/fullstack-dev/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Ex-Meta Staff Engineer, Co-founder GreatFrontEnd","url":"https://linkedin.com/in/yangshun","page":{"permalink":"/fullstack-dev/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","linkedin":"https://www.linkedin.com/in/yangshun/","github":"https://github.com/yangshun","newsletter":"https://www.greatfrontend.com"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["slorber","yangshun"],"tags":["facebook","hello","docusaurus"]},"unlisted":false,"prevItem":{"title":"Introducing Next.js for Production","permalink":"/fullstack-dev/blog/introducing-fullstack-devuction"},"nextItem":{"title":"MDX Blog Post","permalink":"/fullstack-dev/blog/mdx-blog-post"}},"content":"[Docusaurus blogging features](https://docusaurus.io/docs/blog) are powered by the [blog plugin](https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog).\\n\\nHere are a few tips you might find useful.\\n\\n\x3c!-- truncate --\x3e\\n\\nSimply add Markdown files (or folders) to the `blog` directory.\\n\\nRegular blog authors can be added to `authors.yml`.\\n\\nThe blog post date can be extracted from filenames, such as:\\n\\n- `2019-05-30-welcome.md`\\n- `2019-05-30-welcome/index.md`\\n\\nA blog post folder can be convenient to co-locate blog post images:\\n\\n![Docusaurus Plushie](./docusaurus-plushie-banner.jpeg)\\n\\nThe blog supports tags as well!\\n\\n**And if you don\'t want a blog**: just delete this directory, and use `blog: false` in your Docusaurus config."},{"id":"mdx-blog-post","metadata":{"permalink":"/fullstack-dev/blog/mdx-blog-post","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/2021-08-01-mdx-blog-post.mdx","source":"@site/blog/2021-08-01-mdx-blog-post.mdx","title":"MDX Blog Post","description":"Blog posts support Docusaurus Markdown features, such as MDX.","date":"2021-08-01T00:00:00.000Z","tags":[{"inline":false,"label":"Docusaurus","permalink":"/fullstack-dev/blog/tags/docusaurus","description":"Docusaurus documentation platform"}],"readingTime":0.27,"hasTruncateMarker":true,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/fullstack-dev/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"}],"frontMatter":{"slug":"mdx-blog-post","title":"MDX Blog Post","authors":["slorber"],"tags":["docusaurus"]},"unlisted":false,"prevItem":{"title":"Welcome","permalink":"/fullstack-dev/blog/welcome"},"nextItem":{"title":"Long Blog Post","permalink":"/fullstack-dev/blog/long-blog-post"}},"content":"Blog posts support [Docusaurus Markdown features](https://docusaurus.io/docs/markdown-features), such as [MDX](https://mdxjs.com/).\\n\\n:::tip\\n\\nUse the power of React to create interactive blog posts.\\n\\n:::\\n\\n{/* truncate */}\\n\\nFor example, use JSX to create an interactive button:\\n\\n```js\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>\\n```\\n\\n<button onClick={() => alert(\'button clicked!\')}>Click me!</button>"},{"id":"long-blog-post","metadata":{"permalink":"/fullstack-dev/blog/long-blog-post","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/2019-05-29-long-blog-post.md","source":"@site/blog/2019-05-29-long-blog-post.md","title":"Long Blog Post","description":"This is the summary of a very long blog post,","date":"2019-05-29T00:00:00.000Z","tags":[{"inline":false,"label":"Hello","permalink":"/fullstack-dev/blog/tags/hello","description":"Introduction and welcome posts"},{"inline":false,"label":"Docusaurus","permalink":"/fullstack-dev/blog/tags/docusaurus","description":"Docusaurus documentation platform"}],"readingTime":2.04,"hasTruncateMarker":true,"authors":[{"name":"Yangshun Tay","title":"Ex-Meta Staff Engineer, Co-founder GreatFrontEnd","url":"https://linkedin.com/in/yangshun","page":{"permalink":"/fullstack-dev/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","linkedin":"https://www.linkedin.com/in/yangshun/","github":"https://github.com/yangshun","newsletter":"https://www.greatfrontend.com"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"long-blog-post","title":"Long Blog Post","authors":"yangshun","tags":["hello","docusaurus"]},"unlisted":false,"prevItem":{"title":"MDX Blog Post","permalink":"/fullstack-dev/blog/mdx-blog-post"},"nextItem":{"title":"First Blog Post","permalink":"/fullstack-dev/blog/first-blog-post"}},"content":"This is the summary of a very long blog post,\\n\\nUse a `\x3c!--` `truncate` `--\x3e` comment to limit blog post size in the list view.\\n\\n\x3c!-- truncate --\x3e\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"},{"id":"first-blog-post","metadata":{"permalink":"/fullstack-dev/blog/first-blog-post","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/2019-05-28-first-blog-post.md","source":"@site/blog/2019-05-28-first-blog-post.md","title":"First Blog Post","description":"Lorem ipsum dolor sit amet...","date":"2019-05-28T00:00:00.000Z","tags":[{"inline":false,"label":"Hola","permalink":"/fullstack-dev/blog/tags/hola","description":"Spanish greeting and introductory content"},{"inline":false,"label":"Docusaurus","permalink":"/fullstack-dev/blog/tags/docusaurus","description":"Docusaurus documentation platform"}],"readingTime":0.13,"hasTruncateMarker":true,"authors":[{"name":"S\xe9bastien Lorber","title":"Docusaurus maintainer","url":"https://sebastienlorber.com","page":{"permalink":"/fullstack-dev/blog/authors/all-sebastien-lorber-articles"},"socials":{"x":"https://x.com/sebastienlorber","linkedin":"https://www.linkedin.com/in/sebastienlorber/","github":"https://github.com/slorber","newsletter":"https://thisweekinreact.com"},"imageURL":"https://github.com/slorber.png","key":"slorber"},{"name":"Yangshun Tay","title":"Ex-Meta Staff Engineer, Co-founder GreatFrontEnd","url":"https://linkedin.com/in/yangshun","page":{"permalink":"/fullstack-dev/blog/authors/yangshun"},"socials":{"x":"https://x.com/yangshunz","linkedin":"https://www.linkedin.com/in/yangshun/","github":"https://github.com/yangshun","newsletter":"https://www.greatfrontend.com"},"imageURL":"https://github.com/yangshun.png","key":"yangshun"}],"frontMatter":{"slug":"first-blog-post","title":"First Blog Post","authors":["slorber","yangshun"],"tags":["hola","docusaurus"]},"unlisted":false,"prevItem":{"title":"Long Blog Post","permalink":"/fullstack-dev/blog/long-blog-post"}},"content":"Lorem ipsum dolor sit amet...\\n\\n\x3c!-- truncate --\x3e\\n\\n...consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet"}]}}')}}]);