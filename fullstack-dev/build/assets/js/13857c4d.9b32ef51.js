"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[224],{3077:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"architecture-practices/architecture-definition/application-architecture-foundation-implementation","title":"Application Architecture Foundation Implementation Guide","description":"This guide provides step-by-step instructions for achieving the architecture maturity requirement: \\"Application architecture foundation is defined and documented\\".","source":"@site/docs/architecture-practices/architecture-definition/application-architecture-foundation-implementation.md","sourceDirName":"architecture-practices/architecture-definition","slug":"/architecture-practices/architecture-definition/application-architecture-foundation-implementation","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/application-architecture-foundation-implementation","draft":false,"unlisted":false,"editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/docs/architecture-practices/architecture-definition/application-architecture-foundation-implementation.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Foundation","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/architecture-foundation"},"next":{"title":"Input Validation Guide","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/input-validation"}}');var r=t(5813),s=t(5741);const a={},o="Application Architecture Foundation Implementation Guide",c={},l=[{value:"Overview",id:"overview",level:2},{value:"Success Criteria",id:"success-criteria",level:2},{value:"Step-by-Step Implementation",id:"step-by-step-implementation",level:2},{value:"Phase 1: Architecture Analysis and Planning",id:"phase-1-architecture-analysis-and-planning",level:3},{value:"Step 1.1: Stakeholder Requirements Gathering",id:"step-11-stakeholder-requirements-gathering",level:4},{value:"Step 1.2: Technology Stack Selection",id:"step-12-technology-stack-selection",level:4},{value:"Phase 2: Architecture Design and Documentation",id:"phase-2-architecture-design-and-documentation",level:3},{value:"Step 2.1: Create Architecture Diagrams",id:"step-21-create-architecture-diagrams",level:4},{value:"Step 2.2: Define Application Layers",id:"step-22-define-application-layers",level:4},{value:"Step 2.3: Document Key Mechanisms",id:"step-23-document-key-mechanisms",level:4},{value:"Phase 3: Architecture Validation and Review",id:"phase-3-architecture-validation-and-review",level:3},{value:"Step 3.1: Create Architecture Review Checklist",id:"step-31-create-architecture-review-checklist",level:4},{value:"Step 3.2: Conduct Architecture Review Sessions",id:"step-32-conduct-architecture-review-sessions",level:4},{value:"Phase 4: Implementation Guidelines and Templates",id:"phase-4-implementation-guidelines-and-templates",level:3},{value:"Step 4.1: Create Development Templates",id:"step-41-create-development-templates",level:4},{value:"Step 4.2: Create Implementation Guidelines",id:"step-42-create-implementation-guidelines",level:4},{value:"Frontend (Next.js)",id:"frontend-nextjs",level:4},{value:"Code Organization",id:"code-organization",level:3},{value:"Backend Structure",id:"backend-structure",level:4},{value:"Frontend Structure",id:"frontend-structure",level:4},{value:"Phase 5: Final Documentation and Handover",id:"phase-5-final-documentation-and-handover",level:3},{value:"Step 5.1: Create Architecture Decision Records (ADRs)",id:"step-51-create-architecture-decision-records-adrs",level:4},{value:"Step 5.2: Create Final Architecture Summary",id:"step-52-create-final-architecture-summary",level:4},{value:"Verification and Sign-off",id:"verification-and-sign-off",level:2},{value:"Checklist for Completion",id:"checklist-for-completion",level:3},{value:"Success Metrics",id:"success-metrics",level:3},{value:"Maintenance and Updates",id:"maintenance-and-updates",level:3}];function d(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"application-architecture-foundation-implementation-guide",children:"Application Architecture Foundation Implementation Guide"})}),"\n",(0,r.jsxs)(n.p,{children:["This guide provides step-by-step instructions for achieving the architecture maturity requirement: ",(0,r.jsx)(n.strong,{children:'"Application architecture foundation is defined and documented"'}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["The application architecture foundation establishes the complete structural foundation of your application, including layers, frameworks, key mechanisms, and design patterns. This is a ",(0,r.jsx)(n.strong,{children:"Maturity Level 1 - PREPARATION (Sprint 0)"})," requirement that must be completed before development begins."]}),"\n",(0,r.jsx)(n.h2,{id:"success-criteria",children:"Success Criteria"}),"\n",(0,r.jsx)(n.p,{children:"By the end of this implementation, you should have:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Complete architecture documentation with visual diagrams"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Defined application layers and their responsibilities"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Documented frameworks and technology choices"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Established key mechanisms (logging, error handling, security)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Architecture review sessions completed with stakeholders"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Implementation guidelines for development teams"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-by-step-implementation",children:"Step-by-Step Implementation"}),"\n",(0,r.jsx)(n.h3,{id:"phase-1-architecture-analysis-and-planning",children:"Phase 1: Architecture Analysis and Planning"}),"\n",(0,r.jsx)(n.h4,{id:"step-11-stakeholder-requirements-gathering",children:"Step 1.1: Stakeholder Requirements Gathering"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 2-3 days",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Participants"}),": Technical leads, business stakeholders, architects"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Business Requirements Analysis"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create requirements documentation\nmkdir -p docs/architecture/requirements\ntouch docs/architecture/requirements/business-requirements.md\ntouch docs/architecture/requirements/functional-requirements.md\ntouch docs/architecture/requirements/non-functional-requirements.md\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Technology Constraints Assessment"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Document existing technology stack constraints"}),"\n",(0,r.jsx)(n.li,{children:"Identify integration requirements with legacy systems"}),"\n",(0,r.jsx)(n.li,{children:"Define performance and scalability requirements"}),"\n",(0,r.jsx)(n.li,{children:"Security and compliance requirements"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Resource and Timeline Constraints"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Team size and skill assessment"}),"\n",(0,r.jsx)(n.li,{children:"Budget constraints"}),"\n",(0,r.jsx)(n.li,{children:"Delivery timeline requirements"}),"\n",(0,r.jsx)(n.li,{children:"Infrastructure availability"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"step-12-technology-stack-selection",children:"Step 1.2: Technology Stack Selection"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 1-2 days",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Participants"}),": Technical architects, senior developers"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Framework Selection Documentation"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# docs/architecture/technology-stack.md\n\n## Frontend Framework\n\n- **Choice**: Next.js 14+ with App Router\n- **Rationale**: SSR/SSG capabilities, excellent performance, strong ecosystem\n- **Alternatives Considered**: React SPA, Nuxt.js, Angular\n\n## Backend Framework\n\n- **Choice**: NestJS 15+\n- **Rationale**: TypeScript-first, modular architecture, enterprise-ready\n- **Alternatives Considered**: Express.js, Fastify, Koa.js\n\n## Database\n\n- **Choice**: PostgreSQL with TypeORM\n- **Rationale**: ACID compliance, complex queries, strong typing\n- **Alternatives Considered**: MongoDB, MySQL, Prisma\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Create Technology Decision Matrix"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// docs/architecture/technology-decisions.ts\nexport interface TechnologyDecision {\n  category: string;\n  chosen: string;\n  alternatives: string[];\n  rationale: string;\n  tradeoffs: string[];\n  reviewDate: Date;\n}\n\nexport const technologyDecisions: TechnologyDecision[] = [\n  {\n    category: 'Frontend Framework',\n    chosen: 'Next.js 14+',\n    alternatives: ['React SPA', 'Angular', 'Vue.js'],\n    rationale: 'SSR capabilities, performance, ecosystem',\n    tradeoffs: ['Learning curve', 'Vendor lock-in'],\n    reviewDate: new Date('2024-01-15'),\n  },\n];\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-2-architecture-design-and-documentation",children:"Phase 2: Architecture Design and Documentation"}),"\n",(0,r.jsx)(n.h4,{id:"step-21-create-architecture-diagrams",children:"Step 2.1: Create Architecture Diagrams"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 3-4 days",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Tools"}),": Draw.io, Lucidchart, or Mermaid"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"System Context Diagram (C4 Level 1)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mermaid",children:"graph TB\n    User[End Users]\n    System[E-commerce Platform]\n    Payment[Payment Gateway]\n    Email[Email Service]\n    Analytics[Analytics Service]\n\n    User --\x3e System\n    System --\x3e Payment\n    System --\x3e Email\n    System --\x3e Analytics\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Container Diagram (C4 Level 2)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mermaid",children:'graph TB\n    subgraph "E-commerce Platform"\n        Web[Next.js Web App]\n        API[NestJS API Gateway]\n        UserService[User Service]\n        ProductService[Product Service]\n        OrderService[Order Service]\n        DB[(PostgreSQL)]\n        Cache[(Redis)]\n    end\n\n    Web --\x3e API\n    API --\x3e UserService\n    API --\x3e ProductService\n    API --\x3e OrderService\n    UserService --\x3e DB\n    ProductService --\x3e DB\n    OrderService --\x3e DB\n    API --\x3e Cache\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Component Diagram (C4 Level 3)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// docs/architecture/diagrams/component-diagram.md\n\n## Frontend Components (Next.js)\n\n### Application Structure\n"})}),"\n",(0,r.jsx)(n.p,{children:"src/\n\u251c\u2500\u2500 app/ # App Router pages\n\u251c\u2500\u2500 components/ # Reusable UI components\n\u2502 \u251c\u2500\u2500 atoms/ # Basic UI elements\n\u2502 \u251c\u2500\u2500 molecules/ # Component combinations\n\u2502 \u251c\u2500\u2500 organisms/ # Complex UI sections\n\u2502 \u2514\u2500\u2500 templates/ # Page layouts\n\u251c\u2500\u2500 lib/ # Utilities and configurations\n\u251c\u2500\u2500 hooks/ # Custom React hooks\n\u2514\u2500\u2500 types/ # TypeScript definitions"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\n## Backend Components (NestJS)\n\n### Service Architecture\n"})}),"\n",(0,r.jsx)(n.p,{children:"src/\n\u251c\u2500\u2500 modules/ # Feature modules\n\u2502 \u251c\u2500\u2500 user/ # User management\n\u2502 \u251c\u2500\u2500 product/ # Product catalog\n\u2502 \u251c\u2500\u2500 order/ # Order processing\n\u2502 \u2514\u2500\u2500 auth/ # Authentication\n\u251c\u2500\u2500 common/ # Shared components\n\u2502 \u251c\u2500\u2500 guards/ # Security guards\n\u2502 \u251c\u2500\u2500 interceptors/ # Request/response interceptors\n\u2502 \u251c\u2500\u2500 filters/ # Exception filters\n\u2502 \u2514\u2500\u2500 decorators/ # Custom decorators\n\u2514\u2500\u2500 config/ # Configuration management"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"step-22-define-application-layers",children:"Step 2.2: Define Application Layers"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 2-3 days"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Layer Definition Documentation"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# docs/architecture/application-layers.md\n\n## Frontend Layers (Next.js)\n\n### 1. Presentation Layer\n\n- **Responsibility**: User interface and user interaction\n- **Components**: Pages, components, forms, layouts\n- **Technologies**: React, Tailwind CSS, Framer Motion\n\n### 2. Application Layer\n\n- **Responsibility**: Application logic and state management\n- **Components**: Custom hooks, context providers, utilities\n- **Technologies**: React Context, Zustand, React Query\n\n### 3. Infrastructure Layer\n\n- **Responsibility**: External service integration\n- **Components**: API clients, authentication, storage\n- **Technologies**: Axios, NextAuth, LocalStorage\n\n## Backend Layers (NestJS)\n\n### 1. Presentation Layer (Controllers)\n\n- **Responsibility**: HTTP request handling and response formatting\n- **Components**: Controllers, DTOs, validation pipes\n- **Technologies**: NestJS controllers, class-validator\n\n### 2. Application Layer (Services)\n\n- **Responsibility**: Business logic orchestration\n- **Components**: Application services, use cases\n- **Technologies**: NestJS services, dependency injection\n\n### 3. Domain Layer\n\n- **Responsibility**: Core business rules and entities\n- **Components**: Entities, domain services, value objects\n- **Technologies**: TypeORM entities, domain models\n\n### 4. Infrastructure Layer\n\n- **Responsibility**: External integrations and persistence\n- **Components**: Repositories, external services, databases\n- **Technologies**: TypeORM repositories, HTTP clients\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Layer Implementation Guidelines"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// docs/architecture/layer-guidelines.ts\n\nexport interface LayerGuidelines {\n  layer: string;\n  responsibilities: string[];\n  dependencies: string[];\n  prohibitions: string[];\n  examples: string[];\n}\n\nexport const layerGuidelines: LayerGuidelines[] = [\n  {\n    layer: 'Presentation',\n    responsibilities: [\n      'Handle HTTP requests/responses',\n      'Input validation and sanitization',\n      'Authentication and authorization checks',\n      'Response formatting and error handling',\n    ],\n    dependencies: ['Application Layer only'],\n    prohibitions: ['Direct database access', 'Business logic implementation', 'Direct external service calls'],\n    examples: ['UserController', 'ProductController', 'AuthController'],\n  },\n];\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"step-23-document-key-mechanisms",children:"Step 2.3: Document Key Mechanisms"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 2-3 days"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Logging Mechanism"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// docs/architecture/mechanisms/logging.md\n\n## Logging Strategy\n\n### Implementation\n```typescript\n// Backend Logging (NestJS)\nimport { Logger } from '@nestjs/common';\n\n@Injectable()\nexport class LoggingService {\n  private readonly logger = new Logger(LoggingService.name);\n\n  logRequest(req: Request, correlationId: string) {\n    this.logger.log({\n      message: 'HTTP Request',\n      method: req.method,\n      url: req.url,\n      correlationId,\n      timestamp: new Date().toISOString()\n    });\n  }\n\n  logError(error: Error, context: string, correlationId: string) {\n    this.logger.error({\n      message: error.message,\n      stack: error.stack,\n      context,\n      correlationId,\n      timestamp: new Date().toISOString()\n    });\n  }\n}\n\n// Frontend Logging (Next.js)\nexport class ClientLogger {\n  static log(level: 'info' | 'warn' | 'error', message: string, data?: any) {\n    const logEntry = {\n      level,\n      message,\n      data,\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent,\n      url: window.location.href\n    };\n\n    // Send to logging service\n    this.sendToServer(logEntry);\n  }\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Error Handling Mechanism"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// docs/architecture/mechanisms/error-handling.md\n\n## Error Handling Strategy\n\n### Global Error Filter (NestJS)\n```typescript\n@Catch()\nexport class GlobalExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse<Response>();\n    const request = ctx.getRequest<Request>();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n    let message = 'Internal server error';\n\n    if (exception instanceof HttpException) {\n      status = exception.getStatus();\n      message = exception.message;\n    }\n\n    const errorResponse = {\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      message,\n      correlationId: request.headers['x-correlation-id']\n    };\n\n    this.logger.error('Exception caught', exception, request.url);\n    response.status(status).json(errorResponse);\n  }\n}\n\n// Error Boundary (Next.js)\nexport class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    ClientLogger.log('error', 'React Error Boundary', {\n      error: error.message,\n      errorInfo\n    });\n  }\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Security Mechanisms"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// docs/architecture/mechanisms/security.md\n\n## Security Implementation\n\n### Authentication & Authorization\n```typescript\n// JWT Strategy (NestJS)\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      userId: payload.sub,\n      username: payload.username,\n      roles: payload.roles\n    };\n  }\n}\n\n// Role-based Guard\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride<Role[]>(\n      ROLES_KEY,\n      [context.getHandler(), context.getClass()]\n    );\n\n    if (!requiredRoles) return true;\n\n    const { user } = context.switchToHttp().getRequest();\n    return requiredRoles.some((role) => user.roles?.includes(role));\n  }\n}\n\n// Frontend Auth Context (Next.js)\nexport const AuthContext = createContext<AuthContextValue | null>(null);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const login = async (credentials: LoginCredentials) => {\n    const response = await authAPI.login(credentials);\n    setUser(response.user);\n    localStorage.setItem('token', response.token);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-3-architecture-validation-and-review",children:"Phase 3: Architecture Validation and Review"}),"\n",(0,r.jsx)(n.h4,{id:"step-31-create-architecture-review-checklist",children:"Step 3.1: Create Architecture Review Checklist"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 1 day"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Review Checklist Creation"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# docs/architecture/review-checklist.md\n\n## Architecture Foundation Review Checklist\n\n### Documentation Completeness\n\n- [ ] System context diagram created and reviewed\n- [ ] Container architecture diagram documented\n- [ ] Component diagrams for each major service\n- [ ] Technology stack documented with rationale\n- [ ] Application layers defined with clear responsibilities\n- [ ] Key mechanisms documented (logging, error handling, security)\n\n### Technical Validation\n\n- [ ] Architecture supports required non-functional requirements\n- [ ] Scalability patterns identified and documented\n- [ ] Security considerations addressed at all layers\n- [ ] Performance implications analyzed\n- [ ] Integration patterns defined for external services\n\n### Implementation Readiness\n\n- [ ] Development team understands architecture\n- [ ] Implementation guidelines created\n- [ ] Code structure templates prepared\n- [ ] Development environment aligned with architecture\n- [ ] CI/CD pipeline supports architectural patterns\n\n### Stakeholder Alignment\n\n- [ ] Business stakeholders approve architecture direction\n- [ ] Technical team committed to architectural patterns\n- [ ] External teams understand integration patterns\n- [ ] Documentation accessible to all stakeholders\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"step-32-conduct-architecture-review-sessions",children:"Step 3.2: Conduct Architecture Review Sessions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 2-3 days",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Participants"}),": Architects, tech leads, senior developers, stakeholders"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Schedule Review Sessions"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create review session documentation\nmkdir -p docs/architecture/reviews\ntouch docs/architecture/reviews/review-session-1.md\ntouch docs/architecture/reviews/review-session-2.md\ntouch docs/architecture/reviews/review-decisions.md\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Review Session Template"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# Architecture Review Session 1\n\n**Date**: [Date]  \n**Duration**: 2 hours  \n**Participants**: [List participants]  \n**Facilitator**: [Lead Architect]\n\n## Agenda\n\n1. Architecture Overview Presentation (30 min)\n2. Layer Architecture Deep Dive (30 min)\n3. Key Mechanisms Review (30 min)\n4. Questions and Discussions (20 min)\n5. Action Items and Next Steps (10 min)\n\n## Decisions Made\n\n- [Decision 1]: Rationale and impact\n- [Decision 2]: Rationale and impact\n\n## Action Items\n\n- [ ] [Action 1] - Assigned to [Person] - Due [Date]\n- [ ] [Action 2] - Assigned to [Person] - Due [Date]\n\n## Follow-up Required\n\n- [ ] Schedule technical deep-dive session\n- [ ] Create implementation guidelines\n- [ ] Update documentation based on feedback\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-4-implementation-guidelines-and-templates",children:"Phase 4: Implementation Guidelines and Templates"}),"\n",(0,r.jsx)(n.h4,{id:"step-41-create-development-templates",children:"Step 4.1: Create Development Templates"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 2-3 days"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Code Structure Templates"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create template structure\nmkdir -p templates/nestjs-service\nmkdir -p templates/nextjs-page\nmkdir -p templates/shared-components\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"NestJS Service Template"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// templates/nestjs-service/service.template.ts\n\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class {{ServiceName}}Service {\n  private readonly logger = new Logger({{ServiceName}}Service.name);\n\n  constructor(\n    @InjectRepository({{EntityName}})\n    private readonly {{entityName}}Repository: Repository<{{EntityName}}>,\n  ) {}\n\n  async create(create{{EntityName}}Dto: Create{{EntityName}}Dto): Promise<{{EntityName}}> {\n    this.logger.log(`Creating {{entityName}}: ${JSON.stringify(create{{EntityName}}Dto)}`);\n\n    try {\n      const {{entityName}} = this.{{entityName}}Repository.create(create{{EntityName}}Dto);\n      const saved{{EntityName}} = await this.{{entityName}}Repository.save({{entityName}});\n\n      this.logger.log(`{{EntityName}} created successfully: ${saved{{EntityName}}.id}`);\n      return saved{{EntityName}};\n    } catch (error) {\n      this.logger.error(`Failed to create {{entityName}}`, error.stack);\n      throw new InternalServerErrorException('Failed to create {{entityName}}');\n    }\n  }\n\n  async findAll(): Promise<{{EntityName}}[]> {\n    this.logger.log('Fetching all {{entityName}}s');\n    return this.{{entityName}}Repository.find();\n  }\n\n  async findOne(id: string): Promise<{{EntityName}}> {\n    this.logger.log(`Fetching {{entityName}} with id: ${id}`);\n\n    const {{entityName}} = await this.{{entityName}}Repository.findOne({ where: { id } });\n    if (!{{entityName}}) {\n      throw new NotFoundException(`{{EntityName}} with id ${id} not found`);\n    }\n\n    return {{entityName}};\n  }\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Next.js Page Template"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// templates/nextjs-page/page.template.tsx\n\nimport { Metadata } from 'next';\nimport { Suspense } from 'react';\nimport { PageHeader } from '@/components/ui/page-header';\nimport { LoadingSpinner } from '@/components/ui/loading-spinner';\nimport { ErrorBoundary } from '@/components/error-boundary';\n\nexport const metadata: Metadata = {\n  title: '{{PageTitle}}',\n  description: '{{PageDescription}}',\n};\n\ninterface {{PageName}}PageProps {\n  params: { id?: string };\n  searchParams: { [key: string]: string | string[] | undefined };\n}\n\nexport default function {{PageName}}Page({ params, searchParams }: {{PageName}}PageProps) {\n  return (\n    <ErrorBoundary>\n      <div className=\"container mx-auto px-4 py-8\">\n        <PageHeader\n          title=\"{{PageTitle}}\"\n          description=\"{{PageDescription}}\"\n        />\n\n        <Suspense fallback={<LoadingSpinner />}>\n          <{{PageName}}Content params={params} searchParams={searchParams} />\n        </Suspense>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nasync function {{PageName}}Content({ params, searchParams }: {{PageName}}PageProps) {\n  // Fetch data here\n  const data = await fetch{{PageName}}Data(params, searchParams);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Page content */}\n    </div>\n  );\n}\n\nasync function fetch{{PageName}}Data(\n  params: { id?: string },\n  searchParams: { [key: string]: string | string[] | undefined }\n) {\n  // Implement data fetching logic\n  try {\n    const response = await fetch(`/api/{{endpoint}}`, {\n      next: { revalidate: 3600 } // Cache for 1 hour\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to fetch data');\n    }\n\n    return response.json();\n  } catch (error) {\n    console.error('Error fetching {{pageTitle}} data:', error);\n    throw error;\n  }\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"step-42-create-implementation-guidelines",children:"Step 4.2: Create Implementation Guidelines"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 1-2 days"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Development Guidelines Document"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# docs/architecture/implementation-guidelines.md\n\n## Architecture Implementation Guidelines\n\n### General Principles\n\n1. **Follow Layer Boundaries**\n\n   - Controllers should only handle HTTP concerns\n   - Services contain business logic\n   - Repositories handle data access\n   - Never skip layers or create circular dependencies\n\n2. **Dependency Injection**\n\n   - Use constructor injection for dependencies\n   - Inject interfaces, not concrete implementations\n   - Register all services in appropriate modules\n\n3. **Error Handling**\n   - Use appropriate HTTP status codes\n   - Implement correlation IDs for request tracing\n   - Log all errors with sufficient context\n   - Return consistent error response format\n\n### Naming Conventions\n\n#### Backend (NestJS)\n\n```typescript\n// Files and Classes\nuser.controller.ts     -> UserController\nuser.service.ts        -> UserService\nuser.repository.ts     -> UserRepository\nuser.entity.ts         -> User\ncreate-user.dto.ts     -> CreateUserDto\n\n// Methods\ncreateUser()           // Verb + noun\nfindUserById()         // Action description\nvalidateUserInput()    // Clear intent\n```\n"})}),"\n",(0,r.jsx)(n.h4,{id:"frontend-nextjs",children:"Frontend (Next.js)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Files and Components\nuser-profile.tsx       -> UserProfile\nuser-settings.tsx      -> UserSettings\napi/users/route.ts     -> GET, POST handlers\n\n// Hooks and Utils\nuse-user-data.ts       -> useUserData\nformat-date.ts         -> formatDate\nvalidate-email.ts      -> validateEmail\n"})}),"\n",(0,r.jsx)(n.h3,{id:"code-organization",children:"Code Organization"}),"\n",(0,r.jsx)(n.h4,{id:"backend-structure",children:"Backend Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"src/\n\u251c\u2500\u2500 modules/\n\u2502   \u251c\u2500\u2500 user/\n\u2502   \u2502   \u251c\u2500\u2500 dto/\n\u2502   \u2502   \u251c\u2500\u2500 entities/\n\u2502   \u2502   \u251c\u2500\u2500 user.controller.ts\n\u2502   \u2502   \u251c\u2500\u2500 user.service.ts\n\u2502   \u2502   \u251c\u2500\u2500 user.repository.ts\n\u2502   \u2502   \u2514\u2500\u2500 user.module.ts\n\u2502   \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 common/\n\u2502   \u251c\u2500\u2500 guards/\n\u2502   \u251c\u2500\u2500 interceptors/\n\u2502   \u251c\u2500\u2500 filters/\n\u2502   \u2514\u2500\u2500 decorators/\n\u2514\u2500\u2500 config/\n"})}),"\n",(0,r.jsx)(n.h4,{id:"frontend-structure",children:"Frontend Structure"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"src/\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 (dashboard)/\n\u2502   \u251c\u2500\u2500 api/\n\u2502   \u2514\u2500\u2500 globals.css\n\u251c\u2500\u2500 components/\n\u2502   \u251c\u2500\u2500 ui/\n\u2502   \u251c\u2500\u2500 forms/\n\u2502   \u2514\u2500\u2500 layout/\n\u251c\u2500\u2500 lib/\n\u2502   \u251c\u2500\u2500 utils.ts\n\u2502   \u251c\u2500\u2500 validations.ts\n\u2502   \u2514\u2500\u2500 api.ts\n\u2514\u2500\u2500 types/\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"phase-5-final-documentation-and-handover",children:"Phase 5: Final Documentation and Handover"}),"\n",(0,r.jsx)(n.h4,{id:"step-51-create-architecture-decision-records-adrs",children:"Step 5.1: Create Architecture Decision Records (ADRs)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 1-2 days"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ADR Template Creation"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# docs/architecture/decisions/ADR-001-architecture-foundation.md\n\n# ADR-001: Application Architecture Foundation\n\n## Status\n\nAccepted\n\n## Context\n\nWe need to establish a solid architectural foundation for our e-commerce platform that will support scalability, maintainability, and team productivity.\n\n## Decision\n\nWe will implement a layered architecture with:\n\n- NestJS for backend microservices\n- Next.js for frontend microfrontends\n- PostgreSQL for primary data storage\n- Redis for caching and sessions\n- TypeScript throughout the stack\n\n## Consequences\n\n### Positive\n\n- Strong typing reduces runtime errors\n- Layered architecture improves maintainability\n- Microservices enable independent scaling\n- Modern frameworks provide extensive tooling\n\n### Negative\n\n- Increased complexity compared to monolithic approach\n- Learning curve for team members\n- Additional operational overhead for multiple services\n\n## Implementation\n\n- Follow the implementation guidelines in this document\n- Use provided templates for consistency\n- Regular architecture reviews to ensure compliance\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"step-52-create-final-architecture-summary",children:"Step 5.2: Create Final Architecture Summary"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Duration"}),": 1 day"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Actions:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Executive Summary Document"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# docs/architecture/architecture-foundation-summary.md\n\n# Architecture Foundation Summary\n\n## Overview\n\nThis document provides a high-level summary of the application architecture foundation established for the e-commerce platform.\n\n## Architecture Highlights\n\n### Technology Stack\n\n- **Frontend**: Next.js 14+ with TypeScript\n- **Backend**: NestJS 15+ with TypeScript\n- **Database**: PostgreSQL with TypeORM\n- **Caching**: Redis\n- **Authentication**: JWT with refresh tokens\n\n### Architecture Patterns\n\n- **Frontend**: Component-based architecture with atomic design\n- **Backend**: Layered architecture with dependency injection\n- **Communication**: RESTful APIs with OpenAPI documentation\n- **Data**: Repository pattern with TypeORM\n\n### Key Mechanisms\n\n- **Logging**: Structured logging with correlation IDs\n- **Error Handling**: Global exception filters and error boundaries\n- **Security**: JWT authentication, role-based authorization\n- **Validation**: DTO validation with class-validator\n\n## Implementation Status\n\n- [x] Architecture documentation complete\n- [x] Layer definitions established\n- [x] Key mechanisms documented\n- [x] Review sessions completed\n- [x] Implementation guidelines created\n- [x] Development templates prepared\n\n## Next Steps\n\n1. Begin development using established patterns\n2. Regular architecture compliance reviews\n3. Update documentation as architecture evolves\n4. Monitor implementation effectiveness\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"verification-and-sign-off",children:"Verification and Sign-off"}),"\n",(0,r.jsx)(n.h3,{id:"checklist-for-completion",children:"Checklist for Completion"}),"\n",(0,r.jsx)(n.p,{children:"Before marking this requirement as complete, verify:"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Documentation Complete"}),": All architecture documents created and reviewed"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Diagrams Created"}),": C4 model diagrams (Context, Container, Component) completed"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Layers Defined"}),": Clear layer responsibilities and boundaries documented"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Mechanisms Documented"}),": Logging, error handling, and security mechanisms defined"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Review Completed"}),": Architecture review sessions conducted with stakeholders"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Guidelines Created"}),": Implementation guidelines and templates prepared"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Team Trained"}),": Development team understands and can implement the architecture"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Stakeholder Approval"}),": Business and technical stakeholders have signed off"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"success-metrics",children:"Success Metrics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation Coverage"}),": 100% of architecture components documented"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Team Understanding"}),": All developers can explain layer responsibilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Review Completion"}),": All planned review sessions completed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Stakeholder Satisfaction"}),": Stakeholder sign-off obtained"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implementation Readiness"}),": Templates and guidelines ready for use"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"maintenance-and-updates",children:"Maintenance and Updates"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regular Reviews"}),": Quarterly architecture review sessions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation Updates"}),": Keep documentation current with changes"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pattern Evolution"}),": Update patterns based on implementation learnings"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Team Training"}),": Onboard new team members on architecture principles"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"This implementation guide ensures that your application architecture foundation meets the maturity assessment requirements and provides a solid foundation for development activities."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5741:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(9729);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);