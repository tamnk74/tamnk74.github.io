"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[6522],{5741:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(9729);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},6092:e=>{e.exports=JSON.parse('{"permalink":"/fullstack-dev/blog/lets-encrypt-nginx-ssl-setup","editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/blog/2025-10-06-lets-encrypt-nginx-ssl-setup.md","source":"@site/blog/2025-10-06-lets-encrypt-nginx-ssl-setup.md","title":"Securing Your Website with Let\'s Encrypt and Nginx: A Complete Guide","description":"In today\'s web landscape, HTTPS is no longer optional\u2014it\'s essential. Search engines favor HTTPS sites, browsers mark HTTP sites as \\"not secure,\\" and users expect their data to be encrypted. Let\'s Encrypt has revolutionized SSL certificate provisioning by providing free, automated, and open certificates that are trusted by all major browsers.","date":"2025-10-06T00:00:00.000Z","tags":[{"inline":false,"label":"Let\'s Encrypt","permalink":"/fullstack-dev/blog/tags/lets-encrypt","description":"Let\'s Encrypt SSL certificate automation"},{"inline":false,"label":"Nginx","permalink":"/fullstack-dev/blog/tags/nginx","description":"Nginx web server and configuration"},{"inline":false,"label":"SSL","permalink":"/fullstack-dev/blog/tags/ssl","description":"SSL/TLS encryption and certificates"},{"inline":false,"label":"HTTPS","permalink":"/fullstack-dev/blog/tags/https","description":"HTTPS protocol and secure connections"},{"inline":false,"label":"Security","permalink":"/fullstack-dev/blog/tags/security","description":"Application security practices"},{"inline":false,"label":"Certbot","permalink":"/fullstack-dev/blog/tags/certbot","description":"Certbot SSL certificate management"},{"inline":false,"label":"Automation","permalink":"/fullstack-dev/blog/tags/automation","description":"Process automation and scripting"},{"inline":false,"label":"DevOps","permalink":"/fullstack-dev/blog/tags/devops","description":"DevOps practices and tools"}],"readingTime":8.26,"hasTruncateMarker":true,"authors":[{"name":"Tam Nguyen","title":"Full Stack Developer, Next.js for Production Creator","url":"https://github.com/tamnk74","page":{"permalink":"/fullstack-dev/blog/authors/tam"},"socials":{"github":"https://github.com/tamnk74"},"imageURL":"https://github.com/tamnk74.png","key":"tam"}],"frontMatter":{"slug":"lets-encrypt-nginx-ssl-setup","title":"Securing Your Website with Let\'s Encrypt and Nginx: A Complete Guide","authors":["tam"],"tags":["lets-encrypt","nginx","ssl","https","security","certbot","automation","devops"]},"unlisted":false,"prevItem":{"title":"Comprehensive Guide to Bot Prevention: Protecting Your Website from Automated Threats","permalink":"/fullstack-dev/blog/bot-prevention-mechanisms-website-security"},"nextItem":{"title":"Building Secure Microservices: Authentication & Authorization with NestJS on GCP Kubernetes","permalink":"/fullstack-dev/blog/nestjs-auth-microservices-gcp-kubernetes"}}')},7015:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>o});var s=i(6092),t=i(5813),r=i(5741);const a={slug:"lets-encrypt-nginx-ssl-setup",title:"Securing Your Website with Let's Encrypt and Nginx: A Complete Guide",authors:["tam"],tags:["lets-encrypt","nginx","ssl","https","security","certbot","automation","devops"]},l=void 0,c={authorsImageUrls:[void 0]},o=[{value:"What is Let&#39;s Encrypt?",id:"what-is-lets-encrypt",level:2},{value:"Key Benefits",id:"key-benefits",level:3},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing Certbot",id:"installing-certbot",level:2},{value:"Ubuntu/Debian",id:"ubuntudebian",level:3},{value:"CentOS/RHEL 8+",id:"centosrhel-8",level:3},{value:"Alternative: Using Package Managers",id:"alternative-using-package-managers",level:3},{value:"Basic Nginx Configuration",id:"basic-nginx-configuration",level:2},{value:"Obtaining SSL Certificates",id:"obtaining-ssl-certificates",level:2},{value:"Method 1: Automatic Configuration (Recommended)",id:"method-1-automatic-configuration-recommended",level:3},{value:"Method 2: Certificate Only (Manual Configuration)",id:"method-2-certificate-only-manual-configuration",level:3},{value:"Method 3: Webroot Plugin",id:"method-3-webroot-plugin",level:3},{value:"Manual Nginx SSL Configuration",id:"manual-nginx-ssl-configuration",level:2},{value:"Advanced SSL Configuration",id:"advanced-ssl-configuration",level:2},{value:"Perfect Forward Secrecy",id:"perfect-forward-secrecy",level:3},{value:"SSL Configuration Snippet",id:"ssl-configuration-snippet",level:3},{value:"Automatic Certificate Renewal",id:"automatic-certificate-renewal",level:2},{value:"Setting Up Automatic Renewal",id:"setting-up-automatic-renewal",level:3},{value:"Testing Renewal",id:"testing-renewal",level:3},{value:"Renewal Hooks",id:"renewal-hooks",level:3},{value:"Multiple Domains and Subdomains",id:"multiple-domains-and-subdomains",level:2},{value:"Single Certificate for Multiple Domains",id:"single-certificate-for-multiple-domains",level:3},{value:"Wildcard Certificates",id:"wildcard-certificates",level:3},{value:"Using DNS Plugins",id:"using-dns-plugins",level:3},{value:"Reverse Proxy with SSL",id:"reverse-proxy-with-ssl",level:2},{value:"Monitoring and Troubleshooting",id:"monitoring-and-troubleshooting",level:2},{value:"Certificate Information",id:"certificate-information",level:3},{value:"Common Issues",id:"common-issues",level:3},{value:"Certificate Expiry Monitoring",id:"certificate-expiry-monitoring",level:3},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"1. Regular Updates",id:"1-regular-updates",level:3},{value:"2. Security Headers Testing",id:"2-security-headers-testing",level:3},{value:"3. Certificate Transparency Monitoring",id:"3-certificate-transparency-monitoring",level:3},{value:"4. HSTS Preloading",id:"4-hsts-preloading",level:3},{value:"Docker and Let&#39;s Encrypt",id:"docker-and-lets-encrypt",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2},{value:"SSL Session Resumption",id:"ssl-session-resumption",level:3},{value:"OCSP Stapling",id:"ocsp-stapling",level:3},{value:"HTTP/2 Support",id:"http2-support",level:3},{value:"Conclusion",id:"conclusion",level:2},{value:"Additional Resources",id:"additional-resources",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"In today's web landscape, HTTPS is no longer optional\u2014it's essential. Search engines favor HTTPS sites, browsers mark HTTP sites as \"not secure,\" and users expect their data to be encrypted. Let's Encrypt has revolutionized SSL certificate provisioning by providing free, automated, and open certificates that are trusted by all major browsers."}),"\n",(0,t.jsx)(n.p,{children:"In this comprehensive guide, we'll walk through setting up Let's Encrypt SSL certificates with Nginx, from initial installation to automated renewal, ensuring your website stays secure without manual intervention."}),"\n",(0,t.jsx)(n.h2,{id:"what-is-lets-encrypt",children:"What is Let's Encrypt?"}),"\n",(0,t.jsx)(n.p,{children:"Let's Encrypt is a free, automated, and open Certificate Authority (CA) run by the Internet Security Research Group (ISRG). It provides domain-validated SSL/TLS certificates at no cost, with the mission of creating a more secure and privacy-respecting web."}),"\n",(0,t.jsx)(n.h3,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Free"}),": No cost for certificates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Automated"}),": Certificates can be issued and renewed automatically"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Open"}),": The protocol and software are open source"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Trusted"}),": Certificates are trusted by all major browsers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Domain Validated"}),": Quick verification process"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"90-day Validity"}),": Forces automation and reduces risk of compromised keys"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"Before we begin, ensure you have:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"A domain name pointing to your server"}),"\n",(0,t.jsx)(n.li,{children:"Nginx installed and running"}),"\n",(0,t.jsx)(n.li,{children:"Root or sudo access to your server"}),"\n",(0,t.jsx)(n.li,{children:"Port 80 accessible from the internet"}),"\n",(0,t.jsx)(n.li,{children:"A basic Nginx configuration for your domain"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"installing-certbot",children:"Installing Certbot"}),"\n",(0,t.jsx)(n.p,{children:"Certbot is the official Let's Encrypt client that automates certificate issuance and renewal."}),"\n",(0,t.jsx)(n.h3,{id:"ubuntudebian",children:"Ubuntu/Debian"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo apt update\nsudo apt install snapd\nsudo snap install core; sudo snap refresh core\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n"})}),"\n",(0,t.jsx)(n.h3,{id:"centosrhel-8",children:"CentOS/RHEL 8+"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo dnf install epel-release\nsudo dnf install snapd\nsudo systemctl enable --now snapd.socket\nsudo ln -s /var/lib/snapd/snap /snap\nsudo snap install core; sudo snap refresh core\nsudo snap install --classic certbot\nsudo ln -s /snap/bin/certbot /usr/bin/certbot\n"})}),"\n",(0,t.jsx)(n.h3,{id:"alternative-using-package-managers",children:"Alternative: Using Package Managers"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Ubuntu/Debian\nsudo apt install certbot python3-certbot-nginx\n\n# CentOS/RHEL\nsudo yum install certbot python3-certbot-nginx\n"})}),"\n",(0,t.jsx)(n.h2,{id:"basic-nginx-configuration",children:"Basic Nginx Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Before obtaining SSL certificates, set up a basic HTTP configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:"# /etc/nginx/sites-available/example.com\nserver {\n    listen 80;\n    server_name example.com www.example.com;\n    root /var/www/example.com;\n    index index.html index.htm;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n\n    # Let's Encrypt challenge location\n    location /.well-known/acme-challenge/ {\n        root /var/www/example.com;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Enable the site and test the configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx\n"})}),"\n",(0,t.jsx)(n.h2,{id:"obtaining-ssl-certificates",children:"Obtaining SSL Certificates"}),"\n",(0,t.jsx)(n.h3,{id:"method-1-automatic-configuration-recommended",children:"Method 1: Automatic Configuration (Recommended)"}),"\n",(0,t.jsx)(n.p,{children:"The easiest way is to let Certbot automatically configure Nginx:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo certbot --nginx -d example.com -d www.example.com\n"})}),"\n",(0,t.jsx)(n.p,{children:"This command will:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Verify domain ownership"}),"\n",(0,t.jsx)(n.li,{children:"Obtain the certificate"}),"\n",(0,t.jsx)(n.li,{children:"Automatically configure Nginx"}),"\n",(0,t.jsx)(n.li,{children:"Set up HTTP to HTTPS redirects"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"method-2-certificate-only-manual-configuration",children:"Method 2: Certificate Only (Manual Configuration)"}),"\n",(0,t.jsx)(n.p,{children:"If you prefer to configure Nginx manually:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo certbot certonly --nginx -d example.com -d www.example.com\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then manually configure Nginx with the obtained certificates."}),"\n",(0,t.jsx)(n.h3,{id:"method-3-webroot-plugin",children:"Method 3: Webroot Plugin"}),"\n",(0,t.jsx)(n.p,{children:"For more control over the verification process:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo certbot certonly --webroot -w /var/www/example.com -d example.com -d www.example.com\n"})}),"\n",(0,t.jsx)(n.h2,{id:"manual-nginx-ssl-configuration",children:"Manual Nginx SSL Configuration"}),"\n",(0,t.jsx)(n.p,{children:"If you used the certificate-only method, here's how to configure Nginx manually:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:'# /etc/nginx/sites-available/example.com\nserver {\n    listen 80;\n    server_name example.com www.example.com;\n    \n    # Redirect all HTTP requests to HTTPS\n    return 301 https://$server_name$request_uri;\n}\n\nserver {\n    listen 443 ssl http2;\n    server_name example.com www.example.com;\n    \n    # SSL Configuration\n    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;\n    \n    # SSL Security Configuration\n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;\n    ssl_prefer_server_ciphers off;\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout 10m;\n    \n    # OCSP Stapling\n    ssl_stapling on;\n    ssl_stapling_verify on;\n    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;\n    resolver 8.8.8.8 8.8.4.4 valid=300s;\n    resolver_timeout 5s;\n    \n    # Security Headers\n    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;\n    add_header X-Frame-Options "SAMEORIGIN" always;\n    add_header X-Content-Type-Options "nosniff" always;\n    add_header X-XSS-Protection "1; mode=block" always;\n    add_header Referrer-Policy "strict-origin-when-cross-origin" always;\n    \n    root /var/www/example.com;\n    index index.html index.htm;\n    \n    location / {\n        try_files $uri $uri/ =404;\n    }\n    \n    # Let\'s Encrypt renewal\n    location /.well-known/acme-challenge/ {\n        root /var/www/example.com;\n    }\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"Test and reload Nginx:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo nginx -t\nsudo systemctl reload nginx\n"})}),"\n",(0,t.jsx)(n.h2,{id:"advanced-ssl-configuration",children:"Advanced SSL Configuration"}),"\n",(0,t.jsx)(n.h3,{id:"perfect-forward-secrecy",children:"Perfect Forward Secrecy"}),"\n",(0,t.jsx)(n.p,{children:"Generate Diffie-Hellman parameters for enhanced security:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo openssl dhparam -out /etc/nginx/dhparam.pem 2048\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add to your Nginx configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:"ssl_dhparam /etc/nginx/dhparam.pem;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"ssl-configuration-snippet",children:"SSL Configuration Snippet"}),"\n",(0,t.jsx)(n.p,{children:"Create a reusable SSL configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:'# /etc/nginx/snippets/ssl-params.conf\nssl_protocols TLSv1.2 TLSv1.3;\nssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;\nssl_prefer_server_ciphers off;\nssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;\n\n# OCSP Stapling\nssl_stapling on;\nssl_stapling_verify on;\nresolver 8.8.8.8 8.8.4.4 valid=300s;\nresolver_timeout 5s;\n\n# Diffie-Hellman parameter\nssl_dhparam /etc/nginx/dhparam.pem;\n\n# Security Headers\nadd_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;\nadd_header X-Frame-Options "SAMEORIGIN" always;\nadd_header X-Content-Type-Options "nosniff" always;\nadd_header X-XSS-Protection "1; mode=block" always;\nadd_header Referrer-Policy "strict-origin-when-cross-origin" always;\n'})}),"\n",(0,t.jsx)(n.p,{children:"Include it in your server blocks:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:"server {\n    listen 443 ssl http2;\n    server_name example.com;\n    \n    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;\n    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;\n    \n    include /etc/nginx/snippets/ssl-params.conf;\n    \n    # Your site configuration...\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"automatic-certificate-renewal",children:"Automatic Certificate Renewal"}),"\n",(0,t.jsx)(n.p,{children:"Let's Encrypt certificates expire after 90 days, so automation is crucial."}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-automatic-renewal",children:"Setting Up Automatic Renewal"}),"\n",(0,t.jsx)(n.p,{children:"Certbot automatically installs a systemd timer. Check if it's active:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl status snap.certbot.renew.timer\n"})}),"\n",(0,t.jsx)(n.p,{children:"If not using snap, create a cron job:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo crontab -e\n"})}),"\n",(0,t.jsx)(n.p,{children:"Add this line to check for renewal twice daily:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"0 12 * * * /usr/bin/certbot renew --quiet\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testing-renewal",children:"Testing Renewal"}),"\n",(0,t.jsx)(n.p,{children:"Test the renewal process without actually renewing:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo certbot renew --dry-run\n"})}),"\n",(0,t.jsx)(n.h3,{id:"renewal-hooks",children:"Renewal Hooks"}),"\n",(0,t.jsx)(n.p,{children:"Add hooks to reload Nginx after successful renewal:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'sudo certbot renew --deploy-hook "systemctl reload nginx"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Or create a renewal configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# /etc/letsencrypt/renewal-hooks/deploy/reload-nginx.sh\n#!/bin/bash\nsystemctl reload nginx\n\n# Make it executable\nsudo chmod +x /etc/letsencrypt/renewal-hooks/deploy/reload-nginx.sh\n"})}),"\n",(0,t.jsx)(n.h2,{id:"multiple-domains-and-subdomains",children:"Multiple Domains and Subdomains"}),"\n",(0,t.jsx)(n.h3,{id:"single-certificate-for-multiple-domains",children:"Single Certificate for Multiple Domains"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo certbot --nginx -d example.com -d www.example.com -d api.example.com -d blog.example.com\n"})}),"\n",(0,t.jsx)(n.h3,{id:"wildcard-certificates",children:"Wildcard Certificates"}),"\n",(0,t.jsx)(n.p,{children:"For wildcard certificates, you need DNS challenge:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo certbot certonly --manual --preferred-challenges dns -d example.com -d *.example.com\n"})}),"\n",(0,t.jsx)(n.p,{children:"You'll need to add TXT records to your DNS for verification."}),"\n",(0,t.jsx)(n.h3,{id:"using-dns-plugins",children:"Using DNS Plugins"}),"\n",(0,t.jsx)(n.p,{children:"For automated wildcard certificates, use DNS plugins:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Cloudflare example\nsudo snap install certbot-dns-cloudflare\nsudo certbot certonly --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini -d example.com -d *.example.com\n"})}),"\n",(0,t.jsx)(n.h2,{id:"reverse-proxy-with-ssl",children:"Reverse Proxy with SSL"}),"\n",(0,t.jsx)(n.p,{children:"For applications behind Nginx:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:"server {\n    listen 443 ssl http2;\n    server_name api.example.com;\n    \n    ssl_certificate /etc/letsencrypt/live/api.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/api.example.com/privkey.pem;\n    \n    include /etc/nginx/snippets/ssl-params.conf;\n    \n    location / {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_cache_bypass $http_upgrade;\n        \n        # Timeouts\n        proxy_connect_timeout 60s;\n        proxy_send_timeout 60s;\n        proxy_read_timeout 60s;\n    }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"monitoring-and-troubleshooting",children:"Monitoring and Troubleshooting"}),"\n",(0,t.jsx)(n.h3,{id:"certificate-information",children:"Certificate Information"}),"\n",(0,t.jsx)(n.p,{children:"Check certificate details:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo certbot certificates\n"})}),"\n",(0,t.jsx)(n.p,{children:"View certificate information:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"openssl x509 -in /etc/letsencrypt/live/example.com/cert.pem -text -noout\n"})}),"\n",(0,t.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rate Limits"}),": Let's Encrypt has rate limits (50 certificates per domain per week)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DNS Propagation"}),": Ensure DNS records have propagated"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Firewall"}),": Ensure ports 80 and 443 are open"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Webroot Permissions"}),": Ensure Nginx can write to webroot directory"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"certificate-expiry-monitoring",children:"Certificate Expiry Monitoring"}),"\n",(0,t.jsx)(n.p,{children:"Create a script to monitor certificate expiry:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# /usr/local/bin/check-ssl-expiry.sh\n\nDOMAIN="example.com"\nTHRESHOLD=30\n\nEXPIRY_DATE=$(echo | openssl s_client -servername $DOMAIN -connect $DOMAIN:443 2>/dev/null | openssl x509 -noout -dates | grep notAfter | cut -d= -f2)\nEXPIRY_EPOCH=$(date -d "$EXPIRY_DATE" +%s)\nCURRENT_EPOCH=$(date +%s)\nDAYS_UNTIL_EXPIRY=$(( ($EXPIRY_EPOCH - $CURRENT_EPOCH) / 86400 ))\n\nif [ $DAYS_UNTIL_EXPIRY -lt $THRESHOLD ]; then\n    echo "SSL certificate for $DOMAIN expires in $DAYS_UNTIL_EXPIRY days!"\n    # Send alert (email, Slack, etc.)\nfi\n'})}),"\n",(0,t.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"1-regular-updates",children:"1. Regular Updates"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo snap refresh certbot\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-security-headers-testing",children:"2. Security Headers Testing"}),"\n",(0,t.jsx)(n.p,{children:"Use tools like:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.ssllabs.com/ssltest/",children:"SSL Labs SSL Test"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://observatory.mozilla.org/",children:"Mozilla Observatory"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://securityheaders.com/",children:"Security Headers"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-certificate-transparency-monitoring",children:"3. Certificate Transparency Monitoring"}),"\n",(0,t.jsx)(n.p,{children:"Monitor your certificates at:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://crt.sh/",children:"crt.sh"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://transparencyreport.google.com/https/certificates",children:"Certificate Transparency logs"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-hsts-preloading",children:"4. HSTS Preloading"}),"\n",(0,t.jsxs)(n.p,{children:["Submit your domain to the ",(0,t.jsx)(n.a,{href:"https://hstspreload.org/",children:"HSTS preload list"})," for enhanced security."]}),"\n",(0,t.jsx)(n.h2,{id:"docker-and-lets-encrypt",children:"Docker and Let's Encrypt"}),"\n",(0,t.jsx)(n.p,{children:"For containerized applications:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\nservices:\n  nginx:\n    image: nginx:alpine\n    ports:\n      - "80:80"\n      - "443:443"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf\n      - /etc/letsencrypt:/etc/letsencrypt:ro\n    \n  certbot:\n    image: certbot/certbot\n    volumes:\n      - /etc/letsencrypt:/etc/letsencrypt\n      - /var/www/certbot:/var/www/certbot\n    command: certonly --webroot -w /var/www/certbot -d example.com --email admin@example.com --agree-tos --no-eff-email\n'})}),"\n",(0,t.jsx)(n.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,t.jsx)(n.h3,{id:"ssl-session-resumption",children:"SSL Session Resumption"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:"ssl_session_cache shared:SSL:10m;\nssl_session_timeout 10m;\nssl_session_tickets off;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"ocsp-stapling",children:"OCSP Stapling"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:"ssl_stapling on;\nssl_stapling_verify on;\nssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"http2-support",children:"HTTP/2 Support"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-nginx",children:"listen 443 ssl http2;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(n.p,{children:"Let's Encrypt with Nginx provides a robust, free solution for securing your websites with SSL/TLS certificates. The combination of automated certificate issuance, renewal, and Nginx's high-performance SSL handling creates a powerful security setup that scales from small personal sites to large enterprise applications."}),"\n",(0,t.jsx)(n.p,{children:"Key takeaways:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Always use automated renewal to prevent certificate expiry"}),"\n",(0,t.jsx)(n.li,{children:"Implement proper security headers for enhanced protection"}),"\n",(0,t.jsx)(n.li,{children:"Monitor certificate health and expiry dates"}),"\n",(0,t.jsx)(n.li,{children:"Use strong SSL configurations following current best practices"}),"\n",(0,t.jsx)(n.li,{children:"Test your SSL configuration regularly"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"With this setup, you'll have a secure, automated SSL certificate management system that requires minimal maintenance while providing maximum security for your users."}),"\n",(0,t.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://letsencrypt.org/docs/",children:"Let's Encrypt Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://certbot.eff.org/docs/",children:"Certbot Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://ssl-config.mozilla.org/",children:"Mozilla SSL Configuration Generator"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://nginx.org/en/docs/http/ngx_http_ssl_module.html",children:"Nginx SSL Module Documentation"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/ssllabs/research/wiki/SSL-and-TLS-Deployment-Best-Practices",children:"SSL Labs Best Practices"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"Have you implemented Let's Encrypt with Nginx? Share your experiences and any challenges you've faced in the comments!"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);