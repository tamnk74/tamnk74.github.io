"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[169],{5741:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>c});var s=a(9729);const o={},r=s.createContext(o);function t(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:n},e.children)}},7034:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>k,frontMatter:()=>t,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"devops/kafka-debug-guide","title":"Kafka Debug and Troubleshooting Guide","description":"Overview","source":"@site/docs/devops/kafka-debug-guide.md","sourceDirName":"devops","slug":"/devops/kafka-debug-guide","permalink":"/fullstack-dev/docs/devops/kafka-debug-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/docs/devops/kafka-debug-guide.md","tags":[],"version":"current","frontMatter":{}}');var o=a(5813),r=a(5741);const t={},c="Kafka Debug and Troubleshooting Guide",i={},l=[{value:"Overview",id:"overview",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Quick Debug Commands",id:"quick-debug-commands",level:2},{value:"1. Cluster Connection",id:"1-cluster-connection",level:3},{value:"2. Kafka Status Check",id:"2-kafka-status-check",level:3},{value:"3. Quick Health Check",id:"3-quick-health-check",level:3},{value:"Common Issues and Solutions",id:"common-issues-and-solutions",level:2},{value:"Issue 1: Mount Path Permission Errors",id:"issue-1-mount-path-permission-errors",level:3},{value:"Issue 2: Lost+Found Directory Error",id:"issue-2-lostfound-directory-error",level:3},{value:"Issue 3: DNS Resolution Errors (Cross-Namespace)",id:"issue-3-dns-resolution-errors-cross-namespace",level:3},{value:"Issue 4: Topic Not Found Errors",id:"issue-4-topic-not-found-errors",level:3},{value:"Issue 5: Security Policy Violations",id:"issue-5-security-policy-violations",level:3},{value:"Deployment Troubleshooting",id:"deployment-troubleshooting",level:2},{value:"1. Pod Startup Issues",id:"1-pod-startup-issues",level:3},{value:"2. Persistent Volume Issues",id:"2-persistent-volume-issues",level:3},{value:"3. Service and Network Issues",id:"3-service-and-network-issues",level:3},{value:"Network and DNS Issues",id:"network-and-dns-issues",level:2},{value:"Cross-Namespace Communication",id:"cross-namespace-communication",level:3},{value:"Service Mesh Integration",id:"service-mesh-integration",level:3},{value:"Security Context Problems",id:"security-context-problems",level:2},{value:"1. Non-Root User Setup",id:"1-non-root-user-setup",level:3},{value:"2. Volume Permission Fixes",id:"2-volume-permission-fixes",level:3},{value:"Volume and Storage Issues",id:"volume-and-storage-issues",level:2},{value:"1. PVC Troubleshooting",id:"1-pvc-troubleshooting",level:3},{value:"2. Data Recovery",id:"2-data-recovery",level:3},{value:"Topic Management",id:"topic-management",level:2},{value:"1. Topic Creation and Management",id:"1-topic-creation-and-management",level:3},{value:"2. Topic Configuration Updates",id:"2-topic-configuration-updates",level:3},{value:"Application Connection Issues",id:"application-connection-issues",level:2},{value:"1. KafkaJS Connection Debugging",id:"1-kafkajs-connection-debugging",level:3},{value:"2. Producer/Consumer Testing",id:"2-producerconsumer-testing",level:3},{value:"Performance and Monitoring",id:"performance-and-monitoring",level:2},{value:"1. Resource Monitoring",id:"1-resource-monitoring",level:3},{value:"2. Performance Tuning",id:"2-performance-tuning",level:3},{value:"3. Log Analysis",id:"3-log-analysis",level:3},{value:"Recovery Procedures",id:"recovery-procedures",level:2},{value:"1. Complete Kafka Reset",id:"1-complete-kafka-reset",level:3},{value:"2. Rolling Restart",id:"2-rolling-restart",level:3},{value:"3. Scale Down and Up",id:"3-scale-down-and-up",level:3},{value:"4. Emergency Data Backup",id:"4-emergency-data-backup",level:3},{value:"Configuration Files Reference",id:"configuration-files-reference",level:2},{value:"1. Main Kafka Deployment",id:"1-main-kafka-deployment",level:3},{value:"2. Topic Setup Job",id:"2-topic-setup-job",level:3},{value:"3. Cleanup Script",id:"3-cleanup-script",level:3},{value:"Best Practices Learned",id:"best-practices-learned",level:2},{value:"Related Documentation",id:"related-documentation",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"kafka-debug-and-troubleshooting-guide",children:"Kafka Debug and Troubleshooting Guide"})}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"This guide provides comprehensive debugging steps and troubleshooting procedures for Apache Kafka deployment on Google Kubernetes Engine (GKE) for the e-commerce microservices platform. This document covers all the issues encountered and solutions implemented during the Kafka setup process."}),"\n",(0,o.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#quick-debug-commands",children:"Quick Debug Commands"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#common-issues-and-solutions",children:"Common Issues and Solutions"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#deployment-troubleshooting",children:"Deployment Troubleshooting"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#network-and-dns-issues",children:"Network and DNS Issues"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#security-context-problems",children:"Security Context Problems"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#volume-and-storage-issues",children:"Volume and Storage Issues"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#topic-management",children:"Topic Management"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#application-connection-issues",children:"Application Connection Issues"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#performance-and-monitoring",children:"Performance and Monitoring"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#recovery-procedures",children:"Recovery Procedures"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"quick-debug-commands",children:"Quick Debug Commands"}),"\n",(0,o.jsx)(n.h3,{id:"1-cluster-connection",children:"1. Cluster Connection"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Connect to GKE cluster\ngcloud container clusters get-credentials sea1-prod-ecom-gke \\\n  --zone asia-southeast1-a \\\n  --project one-global-ecommerce-prod\n\n# Verify connection\nkubectl cluster-info\nkubectl get nodes\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-kafka-status-check",children:"2. Kafka Status Check"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check all Kafka resources\nkubectl get all -n kafka\n\n# Check pods status\nkubectl get pods -n kafka -o wide\n\n# Check services and endpoints\nkubectl get services -n kafka\nkubectl get endpoints -n kafka\n\n# Check persistent volumes\nkubectl get pv,pvc -n kafka\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-quick-health-check",children:"3. Quick Health Check"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check if Zookeeper is responding\nkubectl exec -n kafka deployment/zookeeper -- echo srvr | nc localhost 2181\n\n# Check if Kafka is responding\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics --bootstrap-server localhost:9092 --list\n\n# Check topic creation capability\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics --bootstrap-server localhost:9092 --create --topic test-topic --partitions 1 --replication-factor 1 --if-not-exists\n"})}),"\n",(0,o.jsx)(n.h2,{id:"common-issues-and-solutions",children:"Common Issues and Solutions"}),"\n",(0,o.jsx)(n.h3,{id:"issue-1-mount-path-permission-errors",children:"Issue 1: Mount Path Permission Errors"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Error"}),": ",(0,o.jsx)(n.code,{children:"Command [/usr/local/bin/dub path /var/lib/zookeeper/data writable] FAILED"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Root Cause"}),": Zookeeper container running as non-root user cannot write to mounted volumes."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# Add fsGroup to deployment security context\nspec:\n  template:\n    spec:\n      securityContext:\n        fsGroup: 1000\n        runAsUser: 1000\n        runAsNonRoot: true\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Debug Commands"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check pod security context\nkubectl describe pod -n kafka <zookeeper-pod-name>\n\n# Check volume permissions\nkubectl exec -n kafka <zookeeper-pod-name> -- ls -la /var/lib/zookeeper/\n\n# Test write permissions\nkubectl exec -n kafka <zookeeper-pod-name> -- touch /var/lib/zookeeper/data/test-file\n"})}),"\n",(0,o.jsx)(n.h3,{id:"issue-2-lostfound-directory-error",children:"Issue 2: Lost+Found Directory Error"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Error"}),": ",(0,o.jsx)(n.code,{children:"Found directory /var/lib/kafka/data/lost+found"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Root Cause"}),": Kafka rejects any unexpected directories in its data directory, including filesystem-generated ",(0,o.jsx)(n.code,{children:"lost+found"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# Change KAFKA_LOG_DIRS to use subdirectory\n- name: KAFKA_LOG_DIRS\n  value: '/var/lib/kafka/data/kafka-logs' # Instead of '/var/lib/kafka/data'\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Debug Commands"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check Kafka data directory contents\nkubectl exec -n kafka <kafka-pod-name> -- ls -la /var/lib/kafka/data/\n\n# Check Kafka logs for directory errors\nkubectl logs -n kafka deployment/kafka-broker | grep "Found directory"\n\n# Verify log directory configuration\nkubectl exec -n kafka <kafka-pod-name> -- env | grep KAFKA_LOG_DIRS\n'})}),"\n",(0,o.jsx)(n.h3,{id:"issue-3-dns-resolution-errors-cross-namespace",children:"Issue 3: DNS Resolution Errors (Cross-Namespace)"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Error"}),": ",(0,o.jsx)(n.code,{children:"KafkaJSConnectionError: Connection error: getaddrinfo ENOTFOUND kafka-service"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Root Cause"}),": Application running in different namespace cannot resolve ",(0,o.jsx)(n.code,{children:"kafka-service"})," without FQDN."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# Create ExternalName service in application namespace\napiVersion: v1\nkind: Service\nmetadata:\n  name: kafka-service\n  namespace: prod-env # Application namespace\nspec:\n  type: ExternalName\n  externalName: kafka-service.kafka.svc.cluster.local\n  ports:\n    - port: 9092\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Debug Commands"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check which namespace your application is running in\nkubectl get pods --all-namespaces | grep -E "(app|backend|frontend|ecom)"\n\n# Test DNS resolution from application namespace\nkubectl run -n prod-env test-pod --image=busybox --rm -it -- nslookup kafka-service\n\n# Test connection from application namespace\nkubectl run -n prod-env test-pod --image=busybox --rm -it -- telnet kafka-service 9092\n\n# Check service endpoints\nkubectl get endpoints -n kafka kafka-service\nkubectl get endpoints -n prod-env kafka-service\n'})}),"\n",(0,o.jsx)(n.h3,{id:"issue-4-topic-not-found-errors",children:"Issue 4: Topic Not Found Errors"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Error"}),": ",(0,o.jsx)(n.code,{children:"UNKNOWN_TOPIC_OR_PARTITION"})," with error code 3"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Root Cause"}),": Topics don't exist and auto-creation is disabled."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Option 1: Enable auto-creation (development)\n# Set KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'\n\n# Option 2: Create topics manually (production)\nkubectl apply -f kafka-topics-setup.yaml\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Debug Commands"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# List existing topics\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics --bootstrap-server localhost:9092 --list\n\n# Check topic details\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics --bootstrap-server localhost:9092 --describe\n\n# Check auto-creation setting\nkubectl exec -n kafka deployment/kafka-broker -- env | grep KAFKA_AUTO_CREATE_TOPICS_ENABLE\n\n# Test topic creation\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics --bootstrap-server localhost:9092 --create --topic test-topic --partitions 3 --replication-factor 1\n"})}),"\n",(0,o.jsx)(n.h3,{id:"issue-5-security-policy-violations",children:"Issue 5: Security Policy Violations"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Error"}),": Pod security policy violations for non-root containers"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Root Cause"}),": Init containers or main containers trying to run as root."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Solution"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# Ensure all containers run as non-root\nsecurityContext:\n  allowPrivilegeEscalation: false\n  readOnlyRootFilesystem: false\n  runAsNonRoot: true\n  runAsUser: 1000\n  runAsGroup: 1000\n  capabilities:\n    drop:\n      - ALL\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Debug Commands"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check pod security context\nkubectl describe pod -n kafka <pod-name> | grep -A 20 "Security Context"\n\n# Check for security policy violations\nkubectl get events -n kafka | grep -i security\n\n# Verify user/group IDs\nkubectl exec -n kafka <pod-name> -- id\n'})}),"\n",(0,o.jsx)(n.h2,{id:"deployment-troubleshooting",children:"Deployment Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"1-pod-startup-issues",children:"1. Pod Startup Issues"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check pod events for startup issues\nkubectl describe pod -n kafka <pod-name>\n\n# Check init container logs\nkubectl logs -n kafka <pod-name> -c <init-container-name>\n\n# Check main container logs\nkubectl logs -n kafka <pod-name> -c <container-name>\n\n# Check resource constraints\nkubectl top pods -n kafka\nkubectl describe nodes | grep -A 5 "Allocated resources"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-persistent-volume-issues",children:"2. Persistent Volume Issues"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check PVC status\nkubectl get pvc -n kafka\n\n# Check PV binding\nkubectl get pv | grep kafka\n\n# Check storage class\nkubectl get storageclass\n\n# Check volume mount issues\nkubectl describe pod -n kafka <pod-name> | grep -A 10 "Mounts"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"3-service-and-network-issues",children:"3. Service and Network Issues"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check service configuration\nkubectl get svc -n kafka -o yaml\n\n# Test service connectivity\nkubectl run test-pod --image=busybox --rm -it -- telnet kafka-service.kafka.svc.cluster.local 9092\n\n# Check endpoints\nkubectl get endpoints -n kafka\n\n# Check network policies\nkubectl get networkpolicy -n kafka\n"})}),"\n",(0,o.jsx)(n.h2,{id:"network-and-dns-issues",children:"Network and DNS Issues"}),"\n",(0,o.jsx)(n.h3,{id:"cross-namespace-communication",children:"Cross-Namespace Communication"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Test DNS resolution across namespaces\nkubectl run -n prod-env dns-test --image=busybox --rm -it -- nslookup kafka-service.kafka.svc.cluster.local\n\n# Test connectivity from different namespaces\nkubectl run -n prod-env net-test --image=busybox --rm -it -- telnet kafka-service.kafka.svc.cluster.local 9092\n\n# Check service discovery\nkubectl get services --all-namespaces | grep kafka\n"})}),"\n",(0,o.jsx)(n.h3,{id:"service-mesh-integration",children:"Service Mesh Integration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check if Istio is installed and affecting traffic\nkubectl get pods -n istio-system\n\n# Check Istio configuration for Kafka\nkubectl get destinationrule -n kafka\nkubectl get virtualservice -n kafka\n\n# Check Istio sidecar injection\nkubectl get pods -n kafka -o yaml | grep istio\n"})}),"\n",(0,o.jsx)(n.h2,{id:"security-context-problems",children:"Security Context Problems"}),"\n",(0,o.jsx)(n.h3,{id:"1-non-root-user-setup",children:"1. Non-Root User Setup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Verify container user context\nkubectl exec -n kafka <pod-name> -- whoami\nkubectl exec -n kafka <pod-name> -- id\n\n# Check file permissions\nkubectl exec -n kafka <pod-name> -- ls -la /var/lib/kafka/\nkubectl exec -n kafka <pod-name> -- ls -la /var/lib/zookeeper/\n\n# Test write permissions\nkubectl exec -n kafka <pod-name> -- touch /var/lib/kafka/data/test-write\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-volume-permission-fixes",children:"2. Volume Permission Fixes"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check fsGroup application\nkubectl describe pod -n kafka <pod-name> | grep fsGroup\n\n# Verify volume ownership\nkubectl exec -n kafka <pod-name> -- ls -ldn /var/lib/kafka/data/\n\n# Manual permission fix (if needed)\nkubectl exec -n kafka <pod-name> -- chown -R 1000:1000 /var/lib/kafka/data/\n"})}),"\n",(0,o.jsx)(n.h2,{id:"volume-and-storage-issues",children:"Volume and Storage Issues"}),"\n",(0,o.jsx)(n.h3,{id:"1-pvc-troubleshooting",children:"1. PVC Troubleshooting"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check PVC events\nkubectl describe pvc -n kafka <pvc-name>\n\n# Check storage provisioner\nkubectl get storageclass -o yaml\n\n# Check available storage\nkubectl get pv\n\n# Force PVC deletion (if stuck)\nkubectl patch pvc -n kafka <pvc-name> -p \'{"metadata":{"finalizers":null}}\'\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-data-recovery",children:"2. Data Recovery"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Backup existing data before changes\nkubectl exec -n kafka <pod-name> -- tar -czf /tmp/kafka-backup.tar.gz /var/lib/kafka/data/\n\n# Copy backup to local machine\nkubectl cp kafka/<pod-name>:/tmp/kafka-backup.tar.gz ./kafka-backup.tar.gz\n\n# Restore data (if needed)\nkubectl cp ./kafka-backup.tar.gz kafka/<pod-name>:/tmp/\nkubectl exec -n kafka <pod-name> -- tar -xzf /tmp/kafka-backup.tar.gz -C /\n"})}),"\n",(0,o.jsx)(n.h2,{id:"topic-management",children:"Topic Management"}),"\n",(0,o.jsx)(n.h3,{id:"1-topic-creation-and-management",children:"1. Topic Creation and Management"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Create topics with specific configuration\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics \\\n  --bootstrap-server localhost:9092 \\\n  --create \\\n  --topic order-events \\\n  --partitions 3 \\\n  --replication-factor 1 \\\n  --config retention.ms=604800000\n\n# List all topics\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics \\\n  --bootstrap-server localhost:9092 \\\n  --list\n\n# Describe topic configuration\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics \\\n  --bootstrap-server localhost:9092 \\\n  --describe \\\n  --topic order-events\n\n# Delete topic (if needed)\nkubectl exec -n kafka deployment/kafka-broker -- kafka-topics \\\n  --bootstrap-server localhost:9092 \\\n  --delete \\\n  --topic test-topic\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-topic-configuration-updates",children:"2. Topic Configuration Updates"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Update topic configuration\nkubectl exec -n kafka deployment/kafka-broker -- kafka-configs \\\n  --bootstrap-server localhost:9092 \\\n  --entity-type topics \\\n  --entity-name order-events \\\n  --alter \\\n  --add-config retention.ms=1209600000\n\n# View topic configuration\nkubectl exec -n kafka deployment/kafka-broker -- kafka-configs \\\n  --bootstrap-server localhost:9092 \\\n  --entity-type topics \\\n  --entity-name order-events \\\n  --describe\n"})}),"\n",(0,o.jsx)(n.h2,{id:"application-connection-issues",children:"Application Connection Issues"}),"\n",(0,o.jsx)(n.h3,{id:"1-kafkajs-connection-debugging",children:"1. KafkaJS Connection Debugging"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Test connection from application pod\nkubectl exec -n prod-env <app-pod> -- node -e \"\nconst { Kafka } = require('kafkajs');\nconst kafka = Kafka({\n  clientId: 'debug-client',\n  brokers: ['kafka-service:9092']\n});\nkafka.admin().connect().then(() => console.log('Connected')).catch(console.error);\n\"\n\n# Check if topics are accessible from application\nkubectl run -n prod-env kafka-test --image=confluentinc/cp-kafka:7.4.0 --rm -it -- \\\n  kafka-topics --bootstrap-server kafka-service:9092 --list\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-producerconsumer-testing",children:"2. Producer/Consumer Testing"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Test producer\nkubectl run -n prod-env kafka-producer --image=confluentinc/cp-kafka:7.4.0 --rm -it -- \\\n  kafka-console-producer --bootstrap-server kafka-service:9092 --topic test-topic\n\n# Test consumer\nkubectl run -n prod-env kafka-consumer --image=confluentinc/cp-kafka:7.4.0 --rm -it -- \\\n  kafka-console-consumer --bootstrap-server kafka-service:9092 --topic test-topic --from-beginning\n"})}),"\n",(0,o.jsx)(n.h2,{id:"performance-and-monitoring",children:"Performance and Monitoring"}),"\n",(0,o.jsx)(n.h3,{id:"1-resource-monitoring",children:"1. Resource Monitoring"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Check resource usage\nkubectl top pods -n kafka\n\n# Check memory and CPU usage over time\nkubectl logs -n kafka deployment/kafka-broker | grep -E "(memory|cpu|heap)"\n\n# Monitor disk usage\nkubectl exec -n kafka <kafka-pod> -- df -h /var/lib/kafka/data\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-performance-tuning",children:"2. Performance Tuning"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check Kafka JVM settings\nkubectl exec -n kafka deployment/kafka-broker -- env | grep KAFKA_HEAP_OPTS\n\n# Monitor broker metrics\nkubectl exec -n kafka deployment/kafka-broker -- kafka-broker-api-versions --bootstrap-server localhost:9092\n\n# Check broker configuration\nkubectl exec -n kafka deployment/kafka-broker -- kafka-configs \\\n  --bootstrap-server localhost:9092 \\\n  --entity-type brokers \\\n  --entity-name 1 \\\n  --describe\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-log-analysis",children:"3. Log Analysis"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Monitor real-time logs\nkubectl logs -n kafka deployment/kafka-broker -f\n\n# Search for specific errors\nkubectl logs -n kafka deployment/kafka-broker | grep -E "(ERROR|WARN|Exception)"\n\n# Export logs for analysis\nkubectl logs -n kafka deployment/kafka-broker > kafka-broker.log\nkubectl logs -n kafka deployment/zookeeper > zookeeper.log\n'})}),"\n",(0,o.jsx)(n.h2,{id:"recovery-procedures",children:"Recovery Procedures"}),"\n",(0,o.jsx)(n.h3,{id:"1-complete-kafka-reset",children:"1. Complete Kafka Reset"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Use the cleanup script\nchmod +x cleanup-and-deploy-kafka.sh\n./cleanup-and-deploy-kafka.sh\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-rolling-restart",children:"2. Rolling Restart"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Restart Zookeeper first\nkubectl rollout restart deployment/zookeeper -n kafka\nkubectl rollout status deployment/zookeeper -n kafka\n\n# Then restart Kafka\nkubectl rollout restart deployment/kafka-broker -n kafka\nkubectl rollout status deployment/kafka-broker -n kafka\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-scale-down-and-up",children:"3. Scale Down and Up"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Scale down to zero\nkubectl scale deployment kafka-broker --replicas=0 -n kafka\nkubectl scale deployment zookeeper --replicas=0 -n kafka\n\n# Wait for pods to terminate\nkubectl get pods -n kafka\n\n# Scale back up\nkubectl scale deployment zookeeper --replicas=1 -n kafka\nkubectl wait --for=condition=available --timeout=300s deployment/zookeeper -n kafka\n\nkubectl scale deployment kafka-broker --replicas=1 -n kafka\nkubectl wait --for=condition=available --timeout=300s deployment/kafka-broker -n kafka\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-emergency-data-backup",children:"4. Emergency Data Backup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Create emergency backup of Kafka data\nkubectl exec -n kafka <kafka-pod> -- tar -czf /tmp/emergency-backup.tar.gz /var/lib/kafka/data/\n\n# Copy to safe location\nkubectl cp kafka/<kafka-pod>:/tmp/emergency-backup.tar.gz ./emergency-backup-$(date +%Y%m%d-%H%M%S).tar.gz\n\n# Backup Zookeeper data\nkubectl exec -n kafka <zookeeper-pod> -- tar -czf /tmp/zk-backup.tar.gz /var/lib/zookeeper/data/\nkubectl cp kafka/<zookeeper-pod>:/tmp/zk-backup.tar.gz ./zk-backup-$(date +%Y%m%d-%H%M%S).tar.gz\n"})}),"\n",(0,o.jsx)(n.h2,{id:"configuration-files-reference",children:"Configuration Files Reference"}),"\n",(0,o.jsx)(n.h3,{id:"1-main-kafka-deployment",children:"1. Main Kafka Deployment"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Current configuration file\ncat kafka.yaml\n\n# Backup current configuration\ncp kafka.yaml kafka-backup-$(date +%Y%m%d-%H%M%S).yaml\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-topic-setup-job",children:"2. Topic Setup Job"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Topic setup configuration\ncat kafka-topics-setup.yaml\n\n# Cross-namespace service\ncat kafka-service-prod-env.yaml\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-cleanup-script",children:"3. Cleanup Script"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Deployment automation\ncat cleanup-and-deploy-kafka.sh\n"})}),"\n",(0,o.jsx)(n.h2,{id:"best-practices-learned",children:"Best Practices Learned"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Always use fsGroup"}),": Set ",(0,o.jsx)(n.code,{children:"fsGroup: 1000"})," for volume permission handling"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Subdirectories for data"}),": Use subdirectories like ",(0,o.jsx)(n.code,{children:"/var/lib/kafka/data/kafka-logs"})," to avoid filesystem conflicts"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cross-namespace services"}),": Create ExternalName services for cross-namespace communication"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Topic management"}),": Use dedicated jobs for topic creation in production"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Resource limits"}),": Always set appropriate resource requests and limits"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Health checks"}),": Implement proper startup and liveness probes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Security contexts"}),": Follow non-root container best practices"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Monitoring"}),": Implement comprehensive logging and monitoring"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/fullstack-dev/docs/backend/kafka-implementation",children:"Kafka Implementation Guide"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"./external-secrets-debug-guide",children:"External Secrets Debug Guide"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"./devsecops-pipeline-setup",children:"DevSecOps Pipeline Setup"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"../security-practices/kubernetes-security",children:"Kubernetes Security Best Practices"})}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"Last updated: October 16, 2025"}),"\n",(0,o.jsx)(n.em,{children:"Environment: GKE sea1-prod-ecom-gke"}),"\n",(0,o.jsx)(n.em,{children:"Project: one-global-ecommerce-prod"}),"\n",(0,o.jsx)(n.em,{children:"Kafka Version: 7.4.0"})]})]})}function k(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);