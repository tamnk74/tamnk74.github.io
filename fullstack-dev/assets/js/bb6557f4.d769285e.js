"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[6698],{2398:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"architecture-practices/index","title":"Architecture Practices for NestJS & Next.js","description":"This section provides detailed implementation guides for each architecture practice identified in the Architecture Maturity Assessment. Each guide is specifically tailored for NestJS microservices and Next.js microfrontend architectures.","source":"@site/docs/architecture-practices/index.md","sourceDirName":"architecture-practices","slug":"/architecture-practices/","permalink":"/fullstack-dev/docs/architecture-practices/","draft":false,"unlisted":false,"editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/docs/architecture-practices/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Architecture Maturity Assessment Guide","permalink":"/fullstack-dev/docs/architecture-maturity-assessment"},"next":{"title":"SCM Policy for NestJS & Next.js Microservices","permalink":"/fullstack-dev/docs/architecture-practices/architecture-definition/scm-policy"}}');var r=i(5813),s=i(7814);const c={},l="Architecture Practices for NestJS & Next.js",a={},o=[{value:"Practice Categories",id:"practice-categories",level:2},{value:"\ud83c\udfd7\ufe0f Architecture Definition",id:"\ufe0f-architecture-definition",level:3},{value:"Architecture &amp; Coding Guidance",id:"architecture--coding-guidance",level:4},{value:"Communication &amp; Alignment",id:"communication--alignment",level:4},{value:"Non-functional Requirements",id:"non-functional-requirements",level:4},{value:"Technical Refinement &amp; Design",id:"technical-refinement--design",level:4},{value:"\u2699\ufe0f Architecture Execution",id:"\ufe0f-architecture-execution",level:3},{value:"Continuous Deployment",id:"continuous-deployment",level:4},{value:"Continuous Integration",id:"continuous-integration",level:4},{value:"Continuous Monitoring",id:"continuous-monitoring",level:4},{value:"\ud83d\udcca Architecture Management",id:"-architecture-management",level:3},{value:"People &amp; Technical Skills Development",id:"people--technical-skills-development",level:4},{value:"\u2705 Architecture Validation",id:"-architecture-validation",level:3},{value:"Architecture Evaluation",id:"architecture-evaluation",level:4},{value:"Implementation Approach",id:"implementation-approach",level:2},{value:"\ud83c\udfaf Getting Started",id:"-getting-started",level:3},{value:"\ud83d\udcc8 Maturity Progression",id:"-maturity-progression",level:3},{value:"\ud83d\udd17 Cross-References",id:"-cross-references",level:3},{value:"Technology-Specific Considerations",id:"technology-specific-considerations",level:2},{value:"NestJS Microservices",id:"nestjs-microservices",level:3},{value:"Next.js Microfrontends",id:"nextjs-microfrontends",level:3},{value:"Support and Contribution",id:"support-and-contribution",level:2},{value:"Getting Help",id:"getting-help",level:3},{value:"Contributing",id:"contributing",level:3}];function d(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"architecture-practices-for-nestjs--nextjs",children:"Architecture Practices for NestJS & Next.js"})}),"\n",(0,r.jsxs)(n.p,{children:["This section provides detailed implementation guides for each architecture practice identified in the ",(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-maturity-assessment",children:"Architecture Maturity Assessment"}),". Each guide is specifically tailored for NestJS microservices and Next.js microfrontend architectures."]}),"\n",(0,r.jsx)(n.h2,{id:"practice-categories",children:"Practice Categories"}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-architecture-definition",children:"\ud83c\udfd7\ufe0f Architecture Definition"}),"\n",(0,r.jsx)(n.p,{children:"Foundation practices for establishing architectural standards and guidelines."}),"\n",(0,r.jsx)(n.h4,{id:"architecture--coding-guidance",children:"Architecture & Coding Guidance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/scm-policy",children:"SCM Policy"})})," - Source Control Management policies and procedures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/dev-environment-setup",children:"Development Environment Setup"})})," - Local development environment configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/coding-standards",children:"Coding Standards & Conventions"})})," - Code quality standards and testing practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/dev-use-cases-guide",children:"Development Use Cases Guide"})})," - Special development scenarios and tools"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-definition/code-quality-tools",children:"Code Quality Tools"})})," - Linting, formatting, and quality analysis"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Additional practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Architecture Foundation - Application layers and core mechanisms"}),"\n",(0,r.jsx)(n.li,{children:"Backup & Recovery Strategy - Data protection and disaster recovery"}),"\n",(0,r.jsx)(n.li,{children:"Third-party Integration - External APIs and library management"}),"\n",(0,r.jsx)(n.li,{children:"Input Validation - Data validation and security practices"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"communication--alignment",children:"Communication & Alignment"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Knowledge Transfer Planning - Stakeholder and partner communication"}),"\n",(0,r.jsx)(n.li,{children:"Communication Channels - Team communication setup"}),"\n",(0,r.jsx)(n.li,{children:"Technical Documentation - Documentation standards and processes"}),"\n",(0,r.jsx)(n.li,{children:"Stakeholder Communication - Architecture change management"}),"\n",(0,r.jsx)(n.li,{children:"Architecture Sharing - Diagram creation and presentation"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"non-functional-requirements",children:"Non-functional Requirements"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"NFR Collection & Mapping - Requirements gathering and documentation"}),"\n",(0,r.jsx)(n.li,{children:"NFR Templates & Standards - Standardized requirement formats"}),"\n",(0,r.jsx)(n.li,{children:"NFR Approval Process - Stakeholder approval workflows"}),"\n",(0,r.jsx)(n.li,{children:"NFR Metrics & Targets - Measurable performance targets"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"technical-refinement--design",children:"Technical Refinement & Design"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Story Splitting - Breaking down features into deployable units"}),"\n",(0,r.jsx)(n.li,{children:"Technology Selection - Choosing stable, supported technologies"}),"\n",(0,r.jsx)(n.li,{children:"Documentation Maintenance - Keeping technical docs current"}),"\n",(0,r.jsx)(n.li,{children:"Refinement Process - Technical preparation workflows"}),"\n",(0,r.jsx)(n.li,{children:"Structured Refinement - High-quality technical guidance"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"\ufe0f-architecture-execution",children:"\u2699\ufe0f Architecture Execution"}),"\n",(0,r.jsx)(n.p,{children:"Implementation practices for continuous integration, deployment, and monitoring."}),"\n",(0,r.jsx)(n.h4,{id:"continuous-deployment",children:"Continuous Deployment"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-execution/cicd-pipeline",children:"CI/CD Pipeline"})})," - Complete pipeline implementation"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Additional practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Artifact Versioning - Version tracking across environments"}),"\n",(0,r.jsx)(n.li,{children:"Configuration Management - Environment-specific configurations"}),"\n",(0,r.jsx)(n.li,{children:"Automated Deployment - CI/CD pipeline setup"}),"\n",(0,r.jsx)(n.li,{children:"Database Migrations - Schema and data deployment"}),"\n",(0,r.jsx)(n.li,{children:"Rollback Strategies - Recovery and rollback procedures"}),"\n",(0,r.jsx)(n.li,{children:"Single-Click Deployment - Simplified production deployment"}),"\n",(0,r.jsx)(n.li,{children:"Smoke Testing - Deployment verification"}),"\n",(0,r.jsx)(n.li,{children:"Build Once Deploy Anywhere - Immutable artifacts"}),"\n",(0,r.jsx)(n.li,{children:"Lead Time Optimization - Fast delivery practices"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"continuous-integration",children:"Continuous Integration"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Source Control Best Practices - Git workflows and policies"}),"\n",(0,r.jsx)(n.li,{children:"Commit Standards - Commit message and PR guidelines"}),"\n",(0,r.jsx)(n.li,{children:"Environment Management - Multi-environment setup"}),"\n",(0,r.jsx)(n.li,{children:"Build Automation - Automated build processes"}),"\n",(0,r.jsx)(n.li,{children:"Branch Management - Branching strategies and merging"}),"\n",(0,r.jsx)(n.li,{children:"Database Versioning - Schema version control"}),"\n",(0,r.jsx)(n.li,{children:"Build Notifications - Team communication and alerts"}),"\n",(0,r.jsx)(n.li,{children:"GitOps Implementation - Infrastructure as code"}),"\n",(0,r.jsx)(n.li,{children:"Centralized Logging - Log aggregation and analysis"}),"\n",(0,r.jsx)(n.li,{children:"Configuration Scripts - Automated server configuration"}),"\n",(0,r.jsx)(n.li,{children:"Environment Provisioning - Automated environment creation"}),"\n",(0,r.jsx)(n.li,{children:"Auto-scaling Setup - Automatic resource scaling"}),"\n",(0,r.jsx)(n.li,{children:"Immutable Infrastructure - Infrastructure lifecycle management"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"continuous-monitoring",children:"Continuous Monitoring"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Infrastructure Monitoring - System health and performance"}),"\n",(0,r.jsx)(n.li,{children:"Application Monitoring - Application performance monitoring"}),"\n",(0,r.jsx)(n.li,{children:"Enhanced Monitoring - Advanced metrics and alerting"}),"\n",(0,r.jsx)(n.li,{children:"Team Monitoring Access - Shared monitoring visibility"}),"\n",(0,r.jsx)(n.li,{children:"DevOps Problem Resolution - Team-based issue handling"}),"\n",(0,r.jsx)(n.li,{children:"Business Monitoring - Business metrics tracking"}),"\n",(0,r.jsx)(n.li,{children:"Automated Issue Resolution - Self-healing systems"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-architecture-management",children:"\ud83d\udcca Architecture Management"}),"\n",(0,r.jsx)(n.p,{children:"Management practices for skills development, planning, and continuous improvement."}),"\n",(0,r.jsx)(n.h4,{id:"people--technical-skills-development",children:"People & Technical Skills Development"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-management/skills-assessment",children:"Skills Assessment"})})," - Team capability mapping and development"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Additional practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Architecture Roadmap - Technical milestone planning"}),"\n",(0,r.jsx)(n.li,{children:"PDCA Meetings - Regular architecture review sessions"}),"\n",(0,r.jsx)(n.li,{children:"Solution Review Process - Peer architecture reviews"}),"\n",(0,r.jsx)(n.li,{children:"Action Plan Tracking - Systematic improvement tracking"}),"\n",(0,r.jsx)(n.li,{children:"Architecture Backlog - Technical debt and improvement management"}),"\n",(0,r.jsx)(n.li,{children:"Technical Debt Management - Debt monitoring and reduction"}),"\n",(0,r.jsx)(n.li,{children:"Knowledge Sharing - Organization-wide practice scaling"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-architecture-validation",children:"\u2705 Architecture Validation"}),"\n",(0,r.jsx)(n.p,{children:"Validation practices for ensuring quality, performance, and compliance."}),"\n",(0,r.jsx)(n.h4,{id:"architecture-evaluation",children:"Architecture Evaluation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-practices/architecture-validation/code-review-process",children:"Code Review Process"})})," - Quality-focused code reviews"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"Additional practices to be documented:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Quality Visibility - Real-time quality monitoring"}),"\n",(0,r.jsx)(n.li,{children:"Quality Gates - Automated quality enforcement"}),"\n",(0,r.jsx)(n.li,{children:"Cross-platform Testing - Browser and device compatibility"}),"\n",(0,r.jsx)(n.li,{children:"Coverage Maintenance - Test coverage protection"}),"\n",(0,r.jsx)(n.li,{children:"Test Case Management - Test maintenance and updates"}),"\n",(0,r.jsx)(n.li,{children:"Coverage Gap Management - Systematic coverage improvement"}),"\n",(0,r.jsx)(n.li,{children:"Automated Testing Integration - Quality gates and enforcement"}),"\n",(0,r.jsx)(n.li,{children:"Anti-spam Protection - Form security and bot prevention"}),"\n",(0,r.jsx)(n.li,{children:"Performance Optimization - Asset optimization and caching"}),"\n",(0,r.jsx)(n.li,{children:"HTTP Caching - Browser caching strategies"}),"\n",(0,r.jsx)(n.li,{children:"Environment Protection - Non-production security"}),"\n",(0,r.jsx)(n.li,{children:"Performance Testing - Load testing and benchmarking"}),"\n",(0,r.jsx)(n.li,{children:"Regular Performance Testing - Continuous performance validation"}),"\n",(0,r.jsx)(n.li,{children:"Peer Architecture Review - External architecture validation"}),"\n",(0,r.jsx)(n.li,{children:"Performance Issue Tracking - Systematic performance problem management"}),"\n",(0,r.jsx)(n.li,{children:"Integrated Security Testing - Developer-driven security validation"}),"\n",(0,r.jsx)(n.li,{children:"Security Transparency - Stakeholder security reporting"}),"\n",(0,r.jsx)(n.li,{children:"Integrated Performance Testing - Developer-driven performance validation"}),"\n",(0,r.jsx)(n.li,{children:"Performance Transparency - Stakeholder performance reporting"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"implementation-approach",children:"Implementation Approach"}),"\n",(0,r.jsx)(n.h3,{id:"-getting-started",children:"\ud83c\udfaf Getting Started"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Assessment"}),": Use the ",(0,r.jsx)(n.a,{href:"/fullstack-dev/docs/architecture-maturity-assessment",children:"Architecture Maturity Assessment"})," to identify your current maturity level"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Planning"}),": Select practices appropriate for your target maturity level"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implementation"}),": Follow the detailed guides for each selected practice"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation"}),": Verify implementation using the provided checklists and metrics"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Iteration"}),": Continuously improve based on feedback and results"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-maturity-progression",children:"\ud83d\udcc8 Maturity Progression"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Level 1 (Foundation)"}),": Start with basic documentation, environment setup, and fundamental processes\n",(0,r.jsx)(n.strong,{children:"Level 2 (Managed)"}),": Add automation, standardization, and enhanced monitoring\n",(0,r.jsx)(n.strong,{children:"Level 3 (Defined)"}),": Implement quality gates, comprehensive testing, and metrics-driven improvements\n",(0,r.jsx)(n.strong,{children:"Level 4 (Quantitatively Managed)"}),": Focus on automation, self-service capabilities, and advanced monitoring\n",(0,r.jsx)(n.strong,{children:"Level 5 (Optimizing)"}),": Achieve self-healing systems, organization-wide scaling, and continuous innovation"]}),"\n",(0,r.jsx)(n.h3,{id:"-cross-references",children:"\ud83d\udd17 Cross-References"}),"\n",(0,r.jsx)(n.p,{children:"Each practice guide includes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Prerequisites"}),": Required foundation practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dependencies"}),": Related practices that should be implemented together"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Next Steps"}),": Logical progression to higher maturity levels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Related Documentation"}),": Links to complementary guides"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"technology-specific-considerations",children:"Technology-Specific Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"nestjs-microservices",children:"NestJS Microservices"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service mesh integration"})," for inter-service communication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Distributed tracing"})," for request flow monitoring"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"API versioning strategies"})," for backward compatibility"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Event-driven architecture"})," with message queues"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Database per service"})," pattern implementation"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"nextjs-microfrontends",children:"Next.js Microfrontends"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Module Federation"})," for runtime integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Shared component libraries"})," for consistency"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Independent deployment"})," strategies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"State management"})," across microfrontends"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance optimization"})," for large applications"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"support-and-contribution",children:"Support and Contribution"}),"\n",(0,r.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Documentation Issues"}),": Report gaps or improvements needed"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Implementation Questions"}),": Seek guidance on specific practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Best Practice Updates"}),": Suggest improvements based on experience"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"contributing",children:"Contributing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Practice Updates"}),": Share improvements and lessons learned"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"New Practices"}),": Propose additional architecture practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Technology Updates"}),": Update guides for new technology versions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-world Examples"}),": Contribute working examples and case studies"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"This documentation is continuously updated to reflect evolving best practices and technology capabilities."})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},7814:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var t=i(9729);const r={},s=t.createContext(r);function c(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);