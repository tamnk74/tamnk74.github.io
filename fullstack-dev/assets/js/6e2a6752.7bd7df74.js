"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[9323],{5741:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var i=r(9729);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},9214:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"backend/index","title":"C4 Model - E-commerce Web Application","description":"Level 1: System Context Diagram","source":"@site/docs/backend/index.md","sourceDirName":"backend","slug":"/backend/","permalink":"/fullstack-dev/docs/backend/","draft":false,"unlisted":false,"editUrl":"https://github.com/tamnk74/fullstack-dev/tree/main/docs-site/docs/backend/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Generation and Personalization Engine","permalink":"/fullstack-dev/docs/rag-recommendations/generation-engine"},"next":{"title":"Kafka Implementation Guide for E-commerce Microservices","permalink":"/fullstack-dev/docs/backend/kafka-implementation"}}');var t=r(5813),s=r(5741);const a={},o="C4 Model - E-commerce Web Application",l={},c=[{value:"Level 1: System Context Diagram",id:"level-1-system-context-diagram",level:2},{value:"Level 2: Container Diagram",id:"level-2-container-diagram",level:2},{value:"Level 3: Component Diagram - API Gateway",id:"level-3-component-diagram---api-gateway",level:2},{value:"Level 4: Code Diagram - Auth Service",id:"level-4-code-diagram---auth-service",level:2},{value:"Infrastructure Architecture",id:"infrastructure-architecture",level:2},{value:"Technology Stack Summary",id:"technology-stack-summary",level:2},{value:"Frontend",id:"frontend",level:3},{value:"Backend",id:"backend",level:3},{value:"Infrastructure",id:"infrastructure",level:3},{value:"DevOps &amp; Security",id:"devops--security",level:3},{value:"Architecture Patterns &amp; Principles",id:"architecture-patterns--principles",level:2},{value:"Microservices Architecture",id:"microservices-architecture",level:3},{value:"Security",id:"security",level:3},{value:"Scalability",id:"scalability",level:3},{value:"DevOps",id:"devops",level:3},{value:"Infrastructure Architecture",id:"infrastructure-architecture-1",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"c4-model---e-commerce-web-application",children:"C4 Model - E-commerce Web Application"})}),"\n",(0,t.jsx)(n.h2,{id:"level-1-system-context-diagram",children:"Level 1: System Context Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"graph TB\n    Customer[\ud83d\udc64 Customer<br/>Web/Mobile Users]\n    Admin[\ud83d\udc64 Admin<br/>Business Users]\n    PaymentProvider[\ud83d\udcb3 Payment Gateway<br/>Stripe/PayPal]\n    EmailService[\ud83d\udce7 Email Service<br/>SendGrid/AWS SES]\n    Auth0[\ud83d\udd10 Auth0<br/>Authentication Provider]\n\n    EcomSystem[E-commerce Platform<br/>Next.js + NestJS Microservices]\n\n    Customer --\x3e EcomSystem\n    Admin --\x3e EcomSystem\n    EcomSystem --\x3e PaymentProvider\n    EcomSystem --\x3e EmailService\n    EcomSystem --\x3e Auth0\n\n    classDef person fill:#08427b\n    classDef system fill:#1168bd\n    classDef external fill:#999999\n\n    class Customer,Admin person\n    class EcomSystem system\n    class PaymentProvider,EmailService,Auth0 external\n"})}),"\n",(0,t.jsx)(n.h2,{id:"level-2-container-diagram",children:"Level 2: Container Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'graph TB\n    Customer[\ud83d\udc64 Customer]\n    Admin[\ud83d\udc64 Admin]\n\n    subgraph "E-commerce Platform"\n        WebApp[Web Application<br/>Next.js 15 + React 19<br/>Tailwind CSS]\n        MicroFE[Microfrontend Modules<br/>Module Federation]\n        APIGateway[API Gateway<br/>NestJS + Express]\n\n        subgraph "Microservices"\n            AuthService[Auth Service<br/>NestJS + JWT]\n            UserService[User Service<br/>NestJS + TypeORM]\n            ProductService[Product Service<br/>NestJS + TypeORM]\n            OrderService[Order Service<br/>NestJS + TypeORM]\n            PaymentService[Payment Service<br/>NestJS]\n            NotificationService[Notification Service<br/>NestJS]\n        end\n\n        subgraph "Data Layer"\n            PostgreSQL[(Cloud SQL<br/>PostgreSQL)]\n            Redis[(Redis Cache)]\n            Elasticsearch[(Elasticsearch<br/>Search Engine)]\n            CloudStorage[(Cloud Storage<br/>Files & Media)]\n        end\n\n        MessageQueue[Message Queue<br/>Kafka/RabbitMQ]\n    end\n\n    subgraph "External Systems"\n        Auth0[Auth0<br/>OAuth 2.0]\n        PaymentGateway[Payment Gateway<br/>Stripe/PayPal]\n        EmailService[Email Service<br/>SendGrid]\n    end\n\n    Customer --\x3e WebApp\n    Admin --\x3e WebApp\n    WebApp --\x3e MicroFE\n    WebApp --\x3e APIGateway\n    APIGateway --\x3e AuthService\n    APIGateway --\x3e UserService\n    APIGateway --\x3e ProductService\n    APIGateway --\x3e OrderService\n    APIGateway --\x3e PaymentService\n    APIGateway --\x3e NotificationService\n\n    AuthService --\x3e Auth0\n    AuthService --\x3e PostgreSQL\n    UserService --\x3e PostgreSQL\n    UserService --\x3e Redis\n    ProductService --\x3e PostgreSQL\n    ProductService --\x3e Elasticsearch\n    ProductService --\x3e CloudStorage\n    OrderService --\x3e PostgreSQL\n    OrderService --\x3e MessageQueue\n    PaymentService --\x3e PaymentGateway\n    PaymentService --\x3e MessageQueue\n    NotificationService --\x3e EmailService\n    NotificationService --\x3e MessageQueue\n\n    classDef person fill:#08427b\n    classDef webapp fill:#1168bd\n    classDef microservice fill:#3f51b5\n    classDef database fill:#ff9800\n    classDef external fill:#999999\n\n    class Customer,Admin person\n    class WebApp,MicroFE,APIGateway webapp\n    class AuthService,UserService,ProductService,OrderService,PaymentService,NotificationService microservice\n    class PostgreSQL,Redis,Elasticsearch,CloudStorage,MessageQueue database\n    class Auth0,PaymentGateway,EmailService external\n'})}),"\n",(0,t.jsx)(n.h2,{id:"level-3-component-diagram---api-gateway",children:"Level 3: Component Diagram - API Gateway"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'graph TB\n    subgraph "API Gateway Container"\n        subgraph "Controllers"\n            AuthController[Auth Controller<br/>Login, Register, Refresh]\n            UserController[User Controller<br/>Profile, Preferences]\n            ProductController[Product Controller<br/>Catalog, Search]\n            OrderController[Order Controller<br/>Cart, Checkout]\n        end\n\n        subgraph "Middleware"\n            JWTMiddleware[JWT Middleware<br/>Token Validation]\n            RateLimiter[Rate Limiter<br/>Request Throttling]\n            CORS[CORS Handler<br/>Cross-Origin Requests]\n            Logger[Request Logger<br/>Audit & Monitoring]\n        end\n\n        subgraph "Services"\n            ServiceDiscovery[Service Discovery<br/>Microservice Registry]\n            LoadBalancer[Load Balancer<br/>Request Distribution]\n            CircuitBreaker[Circuit Breaker<br/>Fault Tolerance]\n        end\n\n        subgraph "Security"\n            AuthGuard[Auth Guard<br/>Route Protection]\n            RoleGuard[Role Guard<br/>RBAC Authorization]\n            APIKeyValidator[API Key Validator<br/>External API Access]\n        end\n    end\n\n    WebApp[Web Application] --\x3e AuthController\n    WebApp --\x3e UserController\n    WebApp --\x3e ProductController\n    WebApp --\x3e OrderController\n\n    AuthController --\x3e JWTMiddleware\n    UserController --\x3e JWTMiddleware\n    ProductController --\x3e RateLimiter\n    OrderController --\x3e JWTMiddleware\n\n    JWTMiddleware --\x3e AuthGuard\n    AuthGuard --\x3e RoleGuard\n\n    AuthController --\x3e ServiceDiscovery\n    UserController --\x3e ServiceDiscovery\n    ProductController --\x3e ServiceDiscovery\n    OrderController --\x3e ServiceDiscovery\n\n    ServiceDiscovery --\x3e LoadBalancer\n    LoadBalancer --\x3e CircuitBreaker\n\n    classDef controller fill:#1976d2\n    classDef middleware fill:#388e3c\n    classDef service fill:#f57c00\n    classDef security fill:#d32f2f\n\n    class AuthController,UserController,ProductController,OrderController controller\n    class JWTMiddleware,RateLimiter,CORS,Logger middleware\n    class ServiceDiscovery,LoadBalancer,CircuitBreaker service\n    class AuthGuard,RoleGuard,APIKeyValidator security\n'})}),"\n",(0,t.jsx)(n.h2,{id:"level-4-code-diagram---auth-service",children:"Level 4: Code Diagram - Auth Service"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"classDiagram\n    class AuthController {\n        +login(loginDto: LoginDto): Promise~AuthResponse~\n        +register(registerDto: RegisterDto): Promise~AuthResponse~\n        +refresh(refreshToken: string): Promise~AuthResponse~\n        +logout(userId: string): Promise~void~\n        +validateToken(token: string): Promise~TokenValidation~\n    }\n\n    class AuthService {\n        -jwtService: JwtService\n        -userService: UserService\n        -auth0Service: Auth0Service\n        +validateUser(email: string, password: string): Promise~User~\n        +generateTokens(user: User): Promise~Tokens~\n        +refreshTokens(refreshToken: string): Promise~Tokens~\n        +validateAuth0Token(token: string): Promise~User~\n    }\n\n    class JwtService {\n        +sign(payload: any, options?: JwtSignOptions): string\n        +verify(token: string): any\n        +decode(token: string): any\n    }\n\n    class Auth0Service {\n        -auth0Client: Auth0Client\n        +validateToken(token: string): Promise~Auth0User~\n        +getUserProfile(token: string): Promise~Auth0Profile~\n    }\n\n    class UserRepository {\n        +findByEmail(email: string): Promise~User~\n        +findById(id: string): Promise~User~\n        +create(userData: CreateUserDto): Promise~User~\n        +update(id: string, userData: UpdateUserDto): Promise~User~\n    }\n\n    class User {\n        +id: string\n        +email: string\n        +password: string\n        +firstName: string\n        +lastName: string\n        +role: UserRole\n        +createdAt: Date\n        +updatedAt: Date\n    }\n\n    class JwtStrategy {\n        +validate(payload: JwtPayload): Promise~User~\n    }\n\n    class Auth0Strategy {\n        +validate(profile: Auth0Profile): Promise~User~\n    }\n\n    AuthController --\x3e AuthService\n    AuthService --\x3e JwtService\n    AuthService --\x3e Auth0Service\n    AuthService --\x3e UserRepository\n    UserRepository --\x3e User\n    AuthService --\x3e JwtStrategy\n    AuthService --\x3e Auth0Strategy\n"})}),"\n",(0,t.jsx)(n.h2,{id:"infrastructure-architecture",children:"Infrastructure Architecture"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'graph TB\n    subgraph "Google Cloud Platform"\n        subgraph "GKE Cluster"\n            subgraph "Frontend Namespace"\n                NextJSPod[Next.js Pods<br/>3 replicas]\n                MFEPod[Microfrontend Pods<br/>2 replicas each]\n            end\n\n            subgraph "Backend Namespace"\n                GatewayPod[API Gateway Pods<br/>3 replicas]\n                AuthPod[Auth Service Pods<br/>2 replicas]\n                UserPod[User Service Pods<br/>2 replicas]\n                ProductPod[Product Service Pods<br/>3 replicas]\n                OrderPod[Order Service Pods<br/>2 replicas]\n                PaymentPod[Payment Service Pods<br/>2 replicas]\n                NotificationPod[Notification Service Pods<br/>2 replicas]\n            end\n\n            subgraph "Data Namespace"\n                RedisPod[Redis Pods<br/>3 replicas]\n                ElasticPod[Elasticsearch Pods<br/>3 replicas]\n                KafkaPod[Kafka Pods<br/>3 replicas]\n            end\n\n            subgraph "Monitoring Namespace"\n                DatadogPod[Datadog Agent<br/>DaemonSet]\n                PrometheusPod[Prometheus<br/>2 replicas]\n                GrafanaPod[Grafana<br/>1 replica]\n            end\n        end\n\n        CloudSQL[(Cloud SQL<br/>PostgreSQL<br/>Multi-AZ)]\n        CloudStorage[(Cloud Storage<br/>Static Assets)]\n        Filestore[(Filestore<br/>Shared Files)]\n\n        LoadBalancer[Load Balancer<br/>Global HTTP(S)]\n        CloudArmor[Cloud Armor<br/>WAF & DDoS Protection]\n    end\n\n    subgraph "External Services"\n        Auth0Ext[Auth0<br/>Authentication]\n        StripeExt[Stripe<br/>Payments]\n        SendGridExt[SendGrid<br/>Email]\n    end\n\n    subgraph "DevOps Pipeline"\n        GitHub[GitHub<br/>Source Code]\n        GitHubActions[GitHub Actions<br/>CI/CD Pipeline]\n        ArgoCD[ArgoCD<br/>GitOps Deployment]\n        SonarQube[SonarQube<br/>SAST]\n        OWASP[OWASP ZAP<br/>DAST]\n    end\n\n    Internet[Internet] --\x3e CloudArmor\n    CloudArmor --\x3e LoadBalancer\n    LoadBalancer --\x3e NextJSPod\n    LoadBalancer --\x3e GatewayPod\n\n    AuthPod --\x3e CloudSQL\n    UserPod --\x3e CloudSQL\n    ProductPod --\x3e CloudSQL\n    OrderPod --\x3e CloudSQL\n\n    ProductPod --\x3e ElasticPod\n    AuthPod --\x3e RedisPod\n    UserPod --\x3e RedisPod\n\n    OrderPod --\x3e KafkaPod\n    PaymentPod --\x3e KafkaPod\n    NotificationPod --\x3e KafkaPod\n\n    NextJSPod --\x3e CloudStorage\n    ProductPod --\x3e Filestore\n\n    AuthPod --\x3e Auth0Ext\n    PaymentPod --\x3e StripeExt\n    NotificationPod --\x3e SendGridExt\n\n    GitHub --\x3e GitHubActions\n    GitHubActions --\x3e SonarQube\n    GitHubActions --\x3e OWASP\n    GitHubActions --\x3e ArgoCD\n    ArgoCD --\x3e GatewayPod\n    ArgoCD --\x3e AuthPod\n\n    DatadogPod --\x3e PrometheusPod\n    PrometheusPod --\x3e GrafanaPod\n\n    classDef frontend fill:#61dafb\n    classDef backend fill:#e10098\n    classDef database fill:#336791\n    classDef external fill:#ffa726\n    classDef devops fill:#4caf50\n    classDef monitoring fill:#ff5722\n\n    class NextJSPod,MFEPod frontend\n    class GatewayPod,AuthPod,UserPod,ProductPod,OrderPod,PaymentPod,NotificationPod backend\n    class CloudSQL,RedisPod,ElasticPod,KafkaPod,CloudStorage,Filestore database\n    class Auth0Ext,StripeExt,SendGridExt external\n    class GitHub,GitHubActions,ArgoCD,SonarQube,OWASP devops\n    class DatadogPod,PrometheusPod,GrafanaPod monitoring\n'})}),"\n",(0,t.jsx)(n.h2,{id:"technology-stack-summary",children:"Technology Stack Summary"}),"\n",(0,t.jsx)(n.h3,{id:"frontend",children:"Frontend"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Framework"}),": Next.js 15+ with App Router"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"UI Library"}),": React 19+ with TypeScript"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Styling"}),": Tailwind CSS"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Architecture"}),": Module Federation for microfrontends"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"State Management"}),": Zustand"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"backend",children:"Backend"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Framework"}),": NestJS microservices"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ORM"}),": TypeORM"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Authentication"}),": JWT + Auth0 OAuth 2.0"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Pattern"}),": API Gateway"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Message Broker"}),": Kafka/RabbitMQ"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"infrastructure",children:"Infrastructure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Container Orchestration"}),": Google Kubernetes Engine (GKE)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Database"}),": Cloud SQL (PostgreSQL)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Storage"}),": Cloud Storage & Filestore"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching"}),": Redis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Search"}),": Elasticsearch"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"devops--security",children:"DevOps & Security"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CI/CD"}),": GitHub Actions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GitOps"}),": ArgoCD"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"SAST"}),": SonarQube"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"DAST"}),": OWASP ZAP"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitoring"}),": Datadog"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"architecture-patterns--principles",children:"Architecture Patterns & Principles"}),"\n",(0,t.jsx)(n.h3,{id:"microservices-architecture",children:"Microservices Architecture"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Gateway Pattern"}),": Single entry point for all client requests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Service Discovery"}),": Dynamic service registration and discovery"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Circuit Breaker"}),": Fault tolerance and graceful degradation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event-Driven Architecture"}),": Asynchronous communication via message queues"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"security",children:"Security"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"OAuth 2.0 + JWT"}),": Secure authentication and authorization"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RBAC"}),": Role-based access control"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"API Rate Limiting"}),": Protection against abuse"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"WAF"}),": Web Application Firewall with Cloud Armor"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"scalability",children:"Scalability"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Horizontal Scaling"}),": Auto-scaling pods based on load"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching Strategy"}),": Redis for session and data caching"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Search Optimization"}),": Elasticsearch for fast product search"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CDN"}),": Cloud Storage for static asset delivery"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"devops",children:"DevOps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GitOps"}),": Infrastructure and application deployment via Git"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Security Scanning"}),": SAST with SonarQube, DAST with OWASP ZAP"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Monitoring"}),": Comprehensive observability with Datadog"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CI/CD"}),": Automated testing and deployment pipelines"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"infrastructure-architecture-1",children:"Infrastructure Architecture"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:'flowchart TB\nsubgraph subGraph0["Client Layer"]\nB["CDN/Edge Caching"]\nA["Web Browsers"]\nC["Mobile Apps"]\nend\nsubgraph subGraph1["Load Balancing Layer"]\nD["Global Load Balancer"]\nE["Regional Load Balancers"]\nend\nsubgraph subGraph2["Application Layer"]\nF["Next.js Microfrontends"]\nG["API Gateway"]\nH["NestJS Microservices"]\nend\nsubgraph subGraph3["Data Layer"]\nI["Cloud SQL PostgreSQL"]\nJ["Redis Cache"]\nK["Elasticsearch"]\nL["Cloud Storage"]\nend\nsubgraph subGraph4["Performance Monitoring"]\nN["Performance Dashboard"]\nM["Real User Monitoring"]\nO["Synthetic Monitoring"]\nP["APM Agents"]\nQ["Infrastructure Metrics"]\nR["Alerting System"]\nS["Performance Analytics"]\nend\nsubgraph subGraph5["Performance Testing"]\nU["Performance Results"]\nT["Load Testing"]\nV["Stress Testing"]\nW["Spike Testing"]\nX["Volume Testing"]\nend\nA --\x3e B\nC --\x3e B\nB --\x3e D\nD --\x3e E\nE --\x3e F & G\nG --\x3e H\nH --\x3e I & J & K & L & P\nM --\x3e N\nO --\x3e N\nP --\x3e N\nQ --\x3e N\nN --\x3e R & S\nT --\x3e U\nV --\x3e U\nW --\x3e U\nX --\x3e U\nF --\x3e M\nI --\x3e Q\nJ --\x3e Q\nK --\x3e Q\n\n     T:::Aqua\n     V:::Sky\n    classDef Sky stroke-width:1px, stroke-dasharray:none, stroke:#374D7C, fill:#E2EBFF, color:#374D7C\n    classDef Aqua stroke-width:1px, stroke-dasharray:none, stroke:#46EDC8, fill:#DEFFF8, color:#378E7A\n    style W fill:#757575\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);