"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[9588],{478:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"deployment","title":"Deployment","description":"This guide covers various deployment strategies and configurations for the Next.js for Production application.","source":"@site/docs/deployment.md","sourceDirName":".","slug":"/deployment","permalink":"/nextjs-for-prod/docs/deployment","draft":false,"unlisted":false,"editUrl":"https://github.com/tamnk74/nextjs-for-prod/tree/main/docs-site/docs/deployment.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Testing","permalink":"/nextjs-for-prod/docs/testing"},"next":{"title":"Contributing","permalink":"/nextjs-for-prod/docs/contributing"}}');var o=s(5813),t=s(7814);const a={},i="Deployment",c={},l=[{value:"Deployment Options",id:"deployment-options",level:2},{value:"1. Vercel (Recommended)",id:"1-vercel-recommended",level:3},{value:"Quick Deployment",id:"quick-deployment",level:4},{value:"Vercel Configuration",id:"vercel-configuration",level:4},{value:"2. Docker Deployment",id:"2-docker-deployment",level:3},{value:"Production Dockerfile",id:"production-dockerfile",level:4},{value:"Docker Compose",id:"docker-compose",level:4},{value:"3. AWS Deployment",id:"3-aws-deployment",level:3},{value:"AWS ECS with Fargate",id:"aws-ecs-with-fargate",level:4},{value:"Deploy Script",id:"deploy-script",level:4},{value:"4. Google Cloud Platform",id:"4-google-cloud-platform",level:3},{value:"Cloud Run Deployment",id:"cloud-run-deployment",level:4},{value:"5. Kubernetes Deployment",id:"5-kubernetes-deployment",level:3},{value:"Kubernetes Manifests",id:"kubernetes-manifests",level:4},{value:"CI/CD Pipeline",id:"cicd-pipeline",level:2},{value:"GitHub Actions",id:"github-actions",level:3},{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Production Environment Variables",id:"production-environment-variables",level:3},{value:"Performance Optimization",id:"performance-optimization",level:2},{value:"Next.js Configuration",id:"nextjs-configuration",level:3},{value:"CDN Configuration",id:"cdn-configuration",level:3},{value:"Monitoring &amp; Health Checks",id:"monitoring--health-checks",level:2},{value:"Health Check Endpoint",id:"health-check-endpoint",level:3},{value:"Monitoring Setup",id:"monitoring-setup",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"SSL/TLS Configuration",id:"ssltls-configuration",level:3},{value:"Secrets Management",id:"secrets-management",level:3},{value:"Backup &amp; Recovery",id:"backup--recovery",level:2},{value:"Database Backup",id:"database-backup",level:3},{value:"Application Data Backup",id:"application-data-backup",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"deployment",children:"Deployment"})}),"\n",(0,o.jsx)(n.p,{children:"This guide covers various deployment strategies and configurations for the Next.js for Production application."}),"\n",(0,o.jsx)(n.h2,{id:"deployment-options",children:"Deployment Options"}),"\n",(0,o.jsx)(n.h3,{id:"1-vercel-recommended",children:"1. Vercel (Recommended)"}),"\n",(0,o.jsx)(n.p,{children:"Vercel provides the easiest deployment experience for Next.js applications."}),"\n",(0,o.jsx)(n.h4,{id:"quick-deployment",children:"Quick Deployment"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Connect Repository"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Go to ",(0,o.jsx)(n.a,{href:"https://vercel.com/dashboard",children:"Vercel Dashboard"})]}),"\n",(0,o.jsx)(n.li,{children:'Click "Import Project"'}),"\n",(0,o.jsx)(n.li,{children:"Connect your GitHub repository"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Configure Environment Variables"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-env",children:"NEXT_PUBLIC_APP_URL=https://your-app.vercel.app\nNEXT_PUBLIC_SUPABASE_URL=your_supabase_url\nNEXT_PUBLIC_SUPABASE_ANON_KEY=your_supabase_anon_key\nSUPABASE_SERVICE_ROLE_KEY=your_service_role_key\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Deploy"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'Click "Deploy"'}),"\n",(0,o.jsx)(n.li,{children:"Vercel automatically builds and deploys your app"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"vercel-configuration",children:"Vercel Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'// vercel.json\n{\n  "version": 2,\n  "builds": [\n    {\n      "src": "package.json",\n      "use": "@vercel/next"\n    }\n  ],\n  "routes": [\n    {\n      "src": "/api/(.*)",\n      "dest": "/api/$1"\n    }\n  ],\n  "env": {\n    "NODE_ENV": "production"\n  },\n  "functions": {\n    "app/**/*.ts": {\n      "memory": 1024\n    }\n  }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-docker-deployment",children:"2. Docker Deployment"}),"\n",(0,o.jsx)(n.h4,{id:"production-dockerfile",children:"Production Dockerfile"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dockerfile",children:'# Multi-stage build for production\nFROM node:18-alpine AS base\n\n# Install dependencies only when needed\nFROM base AS deps\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\n\n# Install dependencies based on the preferred package manager\nCOPY package.json pnpm-lock.yaml* ./\nRUN npm install -g pnpm && pnpm install --frozen-lockfile\n\n# Rebuild the source code only when needed\nFROM base AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\n# Build the application\nRUN npm install -g pnpm && pnpm build\n\n# Production image, copy all the files and run next\nFROM base AS runner\nWORKDIR /app\n\nENV NODE_ENV production\n\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\n\nCOPY --from=builder /app/public ./public\n\n# Set the correct permission for prerender cache\nRUN mkdir .next\nRUN chown nextjs:nodejs .next\n\n# Automatically leverage output traces to reduce image size\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static\n\nUSER nextjs\n\nEXPOSE 3000\n\nENV PORT 3000\nENV HOSTNAME "0.0.0.0"\n\nCMD ["node", "server.js"]\n'})}),"\n",(0,o.jsx)(n.h4,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'# docker-compose.yml\nversion: \'3.8\'\n\nservices:\n  app:\n    build:\n      context: .\n      dockerfile: Dockerfile\n      target: production\n    ports:\n      - "3000:3000"\n    environment:\n      - NODE_ENV=production\n      - DATABASE_URL=${DATABASE_URL}\n      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}\n    depends_on:\n      - postgres\n      - redis\n\n  postgres:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_DB: nextjs_prod\n      POSTGRES_USER: ${DB_USER}\n      POSTGRES_PASSWORD: ${DB_PASSWORD}\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n    ports:\n      - "5432:5432"\n\n  redis:\n    image: redis:7-alpine\n    ports:\n      - "6379:6379"\n    volumes:\n      - redis_data:/data\n\n  elasticsearch:\n    image: elasticsearch:8.8.0\n    environment:\n      - discovery.type=single-node\n      - xpack.security.enabled=false\n    ports:\n      - "9200:9200"\n    volumes:\n      - elasticsearch_data:/usr/share/elasticsearch/data\n\nvolumes:\n  postgres_data:\n  redis_data:\n  elasticsearch_data:\n'})}),"\n",(0,o.jsx)(n.h3,{id:"3-aws-deployment",children:"3. AWS Deployment"}),"\n",(0,o.jsx)(n.h4,{id:"aws-ecs-with-fargate",children:"AWS ECS with Fargate"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'# aws-task-definition.json\n{\n  "family": "nextjs-for-prod",\n  "networkMode": "awsvpc",\n  "requiresCompatibilities": ["FARGATE"],\n  "cpu": "256",\n  "memory": "512",\n  "executionRoleArn": "arn:aws:iam::account:role/ecsTaskExecutionRole",\n  "containerDefinitions": [\n    {\n      "name": "nextjs-app",\n      "image": "your-account.dkr.ecr.region.amazonaws.com/nextjs-for-prod:latest",\n      "portMappings": [\n        {\n          "containerPort": 3000,\n          "protocol": "tcp"\n        }\n      ],\n      "environment": [\n        {\n          "name": "NODE_ENV",\n          "value": "production"\n        }\n      ],\n      "secrets": [\n        {\n          "name": "DATABASE_URL",\n          "valueFrom": "arn:aws:secretsmanager:region:account:secret:database-url"\n        }\n      ],\n      "logConfiguration": {\n        "logDriver": "awslogs",\n        "options": {\n          "awslogs-group": "/ecs/nextjs-for-prod",\n          "awslogs-region": "us-east-1",\n          "awslogs-stream-prefix": "ecs"\n        }\n      }\n    }\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.h4,{id:"deploy-script",children:"Deploy Script"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# deploy-aws.sh\n\n# Build and push Docker image\ndocker build -t nextjs-for-prod .\ndocker tag nextjs-for-prod:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/nextjs-for-prod:latest\ndocker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/nextjs-for-prod:latest\n\n# Update ECS service\naws ecs update-service \\\n  --cluster nextjs-cluster \\\n  --service nextjs-service \\\n  --force-new-deployment\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-google-cloud-platform",children:"4. Google Cloud Platform"}),"\n",(0,o.jsx)(n.h4,{id:"cloud-run-deployment",children:"Cloud Run Deployment"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'# cloud-run.yml\napiVersion: serving.knative.dev/v1\nkind: Service\nmetadata:\n  name: nextjs-for-prod\n  annotations:\n    run.googleapis.com/ingress: all\nspec:\n  template:\n    metadata:\n      annotations:\n        autoscaling.knative.dev/maxScale: "10"\n        run.googleapis.com/cpu-throttling: "false"\n    spec:\n      containerConcurrency: 80\n      containers:\n      - image: gcr.io/PROJECT_ID/nextjs-for-prod:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: NODE_ENV\n          value: "production"\n        resources:\n          limits:\n            cpu: "1000m"\n            memory: "512Mi"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"5-kubernetes-deployment",children:"5. Kubernetes Deployment"}),"\n",(0,o.jsx)(n.h4,{id:"kubernetes-manifests",children:"Kubernetes Manifests"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'# k8s/deployment.yml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nextjs-for-prod\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nextjs-for-prod\n  template:\n    metadata:\n      labels:\n        app: nextjs-for-prod\n    spec:\n      containers:\n      - name: nextjs-app\n        image: nextjs-for-prod:latest\n        ports:\n        - containerPort: 3000\n        env:\n        - name: NODE_ENV\n          value: "production"\n        - name: DATABASE_URL\n          valueFrom:\n            secretKeyRef:\n              name: app-secrets\n              key: database-url\n        resources:\n          requests:\n            memory: "256Mi"\n            cpu: "250m"\n          limits:\n            memory: "512Mi"\n            cpu: "500m"\n        livenessProbe:\n          httpGet:\n            path: /api/health\n            port: 3000\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /api/health\n            port: 3000\n          initialDelaySeconds: 5\n          periodSeconds: 5\n\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nextjs-service\nspec:\n  selector:\n    app: nextjs-for-prod\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 3000\n  type: LoadBalancer\n'})}),"\n",(0,o.jsx)(n.h2,{id:"cicd-pipeline",children:"CI/CD Pipeline"}),"\n",(0,o.jsx)(n.h3,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# .github/workflows/deploy.yml\nname: Deploy to Production\n\non:\n  push:\n    branches: [main]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: '18'\n          cache: 'pnpm'\n      \n      - name: Install dependencies\n        run: pnpm install\n      \n      - name: Run tests\n        run: pnpm test\n      \n      - name: Run E2E tests\n        run: pnpm test:e2e\n\n  build-and-deploy:\n    needs: test\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      \n      - name: Configure AWS credentials\n        uses: aws-actions/configure-aws-credentials@v2\n        with:\n          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}\n          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}\n          aws-region: us-east-1\n      \n      - name: Login to Amazon ECR\n        id: login-ecr\n        uses: aws-actions/amazon-ecr-login@v1\n      \n      - name: Build and push Docker image\n        env:\n          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}\n          ECR_REPOSITORY: nextjs-for-prod\n          IMAGE_TAG: ${{ github.sha }}\n        run: |\n          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .\n          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG\n      \n      - name: Deploy to ECS\n        run: |\n          aws ecs update-service \\\n            --cluster production-cluster \\\n            --service nextjs-service \\\n            --force-new-deployment\n"})}),"\n",(0,o.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,o.jsx)(n.h3,{id:"production-environment-variables",children:"Production Environment Variables"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-env",children:"# .env.production\nNODE_ENV=production\nNEXT_PUBLIC_APP_URL=https://your-production-domain.com\n\n# Database\nDATABASE_URL=postgresql://user:password@host:port/database\nREDIS_URL=redis://host:port\n\n# Authentication\nNEXTAUTH_URL=https://your-production-domain.com\nNEXTAUTH_SECRET=your-super-secret-key\n\n# Supabase\nNEXT_PUBLIC_SUPABASE_URL=https://your-project.supabase.co\nNEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key\nSUPABASE_SERVICE_ROLE_KEY=your-service-role-key\n\n# Search\nELASTICSEARCH_URL=https://your-elasticsearch-instance.com\nELASTICSEARCH_USERNAME=elastic\nELASTICSEARCH_PASSWORD=your-password\n\n# Monitoring\nSENTRY_DSN=https://your-sentry-dsn\nNEXT_PUBLIC_ANALYTICS_ID=your-analytics-id\n\n# Email\nSMTP_HOST=smtp.your-provider.com\nSMTP_PORT=587\nSMTP_USER=your-email@domain.com\nSMTP_PASS=your-email-password\n"})}),"\n",(0,o.jsx)(n.h2,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,o.jsx)(n.h3,{id:"nextjs-configuration",children:"Next.js Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// next.config.ts\nconst nextConfig = {\n  // Enable output file tracing for Docker\n  output: 'standalone',\n  \n  // Optimize images\n  images: {\n    domains: ['your-cdn-domain.com'],\n    formats: ['image/webp', 'image/avif'],\n  },\n  \n  // Compress responses\n  compress: true,\n  \n  // Enable SWC minification\n  swcMinify: true,\n  \n  // Optimize bundles\n  experimental: {\n    outputFileTracingRoot: path.join(__dirname, '../../'),\n  },\n  \n  // Headers for security and caching\n  headers: async () => [\n    {\n      source: '/(.*)',\n      headers: [\n        {\n          key: 'X-Frame-Options',\n          value: 'DENY',\n        },\n        {\n          key: 'X-Content-Type-Options',\n          value: 'nosniff',\n        },\n        {\n          key: 'Referrer-Policy',\n          value: 'origin-when-cross-origin',\n        },\n      ],\n    },\n  ],\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"cdn-configuration",children:"CDN Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// Configure CDN for static assets\nconst CDN_URL = process.env.CDN_URL;\n\nconst nextConfig = {\n  assetPrefix: CDN_URL,\n  images: {\n    loader: 'custom',\n    loaderFile: './src/utils/imageLoader.js',\n  },\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"monitoring--health-checks",children:"Monitoring & Health Checks"}),"\n",(0,o.jsx)(n.h3,{id:"health-check-endpoint",children:"Health Check Endpoint"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// pages/api/health.ts\nexport default function handler(req, res) {\n  const healthcheck = {\n    uptime: process.uptime(),\n    message: 'OK',\n    timestamp: Date.now(),\n    checks: {\n      database: 'OK', // Add actual DB check\n      redis: 'OK',     // Add actual Redis check\n      elasticsearch: 'OK', // Add actual ES check\n    },\n  };\n  \n  try {\n    res.status(200).send(healthcheck);\n  } catch (error) {\n    healthcheck.message = error;\n    res.status(503).send(healthcheck);\n  }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"monitoring-setup",children:"Monitoring Setup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Sentry configuration\nimport * as Sentry from '@sentry/nextjs';\n\nSentry.init({\n  dsn: process.env.SENTRY_DSN,\n  environment: process.env.NODE_ENV,\n  tracesSampleRate: 1.0,\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,o.jsx)(n.h3,{id:"ssltls-configuration",children:"SSL/TLS Configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-nginx",children:"# nginx.conf\nserver {\n    listen 443 ssl http2;\n    server_name your-domain.com;\n    \n    ssl_certificate /path/to/certificate.crt;\n    ssl_certificate_key /path/to/private.key;\n    \n    ssl_protocols TLSv1.2 TLSv1.3;\n    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;\n    \n    location / {\n        proxy_pass http://localhost:3000;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection 'upgrade';\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_cache_bypass $http_upgrade;\n    }\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"secrets-management",children:"Secrets Management"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Using AWS Secrets Manager\naws secretsmanager create-secret \\\n  --name "nextjs-for-prod/database" \\\n  --description "Database credentials" \\\n  --secret-string \'{"username":"dbuser","password":"dbpass"}\'\n\n# Using Kubernetes secrets\nkubectl create secret generic app-secrets \\\n  --from-literal=database-url="postgresql://..." \\\n  --from-literal=redis-url="redis://..."\n'})}),"\n",(0,o.jsx)(n.h2,{id:"backup--recovery",children:"Backup & Recovery"}),"\n",(0,o.jsx)(n.h3,{id:"database-backup",children:"Database Backup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# backup-database.sh\n\n# Create database backup\npg_dump $DATABASE_URL > backup-$(date +%Y%m%d-%H%M%S).sql\n\n# Upload to S3\naws s3 cp backup-*.sql s3://your-backup-bucket/database/\n"})}),"\n",(0,o.jsx)(n.h3,{id:"application-data-backup",children:"Application Data Backup"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# backup-app-data.sh\n\n# Backup uploaded files\ntar -czf uploads-backup-$(date +%Y%m%d).tar.gz /app/uploads\n\n# Backup configuration\ntar -czf config-backup-$(date +%Y%m%d).tar.gz /app/config\n"})}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Build Failures"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Check Node.js version compatibility"}),"\n",(0,o.jsx)(n.li,{children:"Verify environment variables"}),"\n",(0,o.jsx)(n.li,{children:"Review build logs for specific errors"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Database Connection Issues"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Verify connection strings"}),"\n",(0,o.jsx)(n.li,{children:"Check network security groups"}),"\n",(0,o.jsx)(n.li,{children:"Ensure database is accessible"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Performance Issues"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Monitor memory usage"}),"\n",(0,o.jsx)(n.li,{children:"Check database query performance"}),"\n",(0,o.jsx)(n.li,{children:"Review CDN cache hit rates"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"For more deployment options and detailed guides, check the official documentation of each platform:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://vercel.com/docs",children:"Vercel Documentation"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.docker.com/",children:"Docker Documentation"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://docs.aws.amazon.com/",children:"AWS Documentation"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},7814:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var r=s(9729);const o={},t=r.createContext(o);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);