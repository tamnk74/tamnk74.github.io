{"version":3,"sources":["utils/firebase.js","features/auth/authService.js","features/auth/authSlice.js","components/AppBar/index.js","components/routers/NoAuthRouter/index.jsx","components/NotFound/index.jsx","components/routers/AuthRouter/index.jsx","features/category/categoryService.js","features/category/categorySlice.js","features/phrase/components/PhraseItem/index.js","features/phrase/phraseService.js","features/phrase/phraseSlice.js","features/category/components/NameInput/index.js","features/category/components/CategoryForm/index.js","features/category/components/CategoryModal/index.jsx","features/phrase/components/WordInput/index.js","features/phrase/components/AddPhrase/index.jsx","features/phrase/components/PhraseModal/index.js","features/phrase/components/PhraseList/index.js","features/phrase/pages/Main/index.js","features/phrase/pages/Add/index.js","features/phrase/index.js","features/category/components/CategoryList/index.js","features/category/pages/Main/index.js","features/category/index.js","features/auth/sign-in/index.js","routers/index.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","signIn","createAsyncThunk","a","email","password","rejectWithValue","signInWithEmailAndPassword","result","signOut","_","authSlice","createSlice","name","initialState","loading","user","currentRequestId","undefined","error","reducers","setUser","state","action","payload","extraReducers","pending","meta","requestId","fulfilled","rejected","selectUser","actions","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","menuItem","SearchAppBar","classes","dispatch","useDispatch","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","useEffect","onAuthStateChanged","authUser","uid","displayName","photoURL","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","to","className","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","style","Chip","avatar","Avatar","toUpperCase","label","NoAuthRoute","Component","component","rest","useSelector","render","props","pathname","from","location","NotFound","AuthRoute","getCategories","options","db","collection","orderBy","limit","get","then","querySnapshot","docs","map","item","data","categories","addCategory","add","createdAt","Date","toISOString","phrase","res","updateCategory","doc","set","merge","removeCategory","categoryId","delete","categorySlice","items","push","splice","filter","selectCategories","category","text","speechSyn","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","minWidth","bullet","margin","transform","chip","fontSize","pos","marginBottom","PhraseItem","isUpdate","handleOpen","handleDelete","setOpen","handleClose","phraseCategories","includes","Grid","Card","CardContent","length","meaning","CardActions","Button","size","type","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","autoFocus","getPhrases","queryBuilder","isFilter","Array","isArray","filteredCategories","where","addPhrase","updatePhrase","removePhrase","phraseId","phraseSlice","JSON","parse","localStorage","getItem","setFilteredCategories","setItem","stringify","selectPhrases","selectFilteredCategories","NameInput","onChange","setOptions","option","Autocomplete","fullWidth","freeSolo","e","disableClearable","renderInput","params","TextField","form","CategoryForm","onSubmit","useForm","handleSubmit","errors","formState","control","setValue","reset","submit","description","stopPropagation","container","direction","justify","xs","rules","required","defaultValue","field","ref","fieldState","value","shouldValidate","paper","background","border","boxShadow","shadows","getModalStyle","top","left","CategoryModal","modalStyle","Modal","WordInput","phrases","inputGroup","marginTop","flexDirection","dropdown","addBtn","AddPhrase","userId","multiple","getOptionLabel","find","Fab","PhraseModal","flexWrap","overflow","list","gridList","icon","PhraseList","setPhrase","currentPhrase","startAt","updatePhraseAction","phraseItem","body","MainPage","addPhraseAction","Phrase","match","useRouteMatch","exact","path","url","listItem","CategoryList","checked","handleToggle","currentIndex","indexOf","newChecked","ListItem","role","dense","button","ListItemIcon","Checkbox","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","CategoryPage","Copyright","align","Link","href","getFullYear","secondary","main","SignIn","history","useHistory","Container","maxWidth","CssBaseline","autoComplete","FormControlLabel","Box","mt","Routes","Category","App","fallback","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","phraseReducer","categoryReducer","authReducer","ReactDOM","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51cf838d.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyAqaF-6pe6wxykLHyB7CkG4TxYXsu3a6zg',\n  authDomain: 'my-spa-1ae0e.firebaseapp.com',\n  databaseURL: 'https://my-spa-1ae0e.firebaseio.com',\n  projectId: 'my-spa-1ae0e',\n  storageBucket: 'my-spa-1ae0e.appspot.com',\n  messagingSenderId: '535290719088',\n  appId: '1:535290719088:web:1cf171d8d605a11cadfdb5',\n});\n\nexport const auth = firebase.auth();\n\nexport default firebase.firestore();\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { auth } from '../../utils/firebase';\n\nexport const signIn = createAsyncThunk(\n  'auth/signin',\n  async ({ email, password }, { rejectWithValue }) => {\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password);\n      return result;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const signOut = createAsyncThunk(\n  'auth/signout',\n  async (_, { rejectWithValue }) => {\n    try {\n      return auth.signOut();\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n","/* eslint no-param-reassign: \"off\" */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { signIn, signOut } from './authService';\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    loading: 'idle',\n    user: null,\n    currentRequestId: undefined,\n    error: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n  extraReducers: {\n    [signIn.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [signIn.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.currentRequestId = undefined;\n      }\n    },\n    [signIn.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [signOut.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [signOut.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.user = null;\n        state.currentRequestId = undefined;\n      }\n    },\n    [signOut.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n  },\n});\n\nexport const selectUser = (state) => state.auth.user;\n\nexport const { setUser } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport AddIcon from '@material-ui/icons/Add';\nimport { auth } from 'utils/firebase';\nimport { signOut } from 'features/auth/authService';\nimport { setUser } from 'features/auth/authSlice';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  menuItem: {\n    display: 'flex',\n    'text-decoration': 'none',\n  },\n}));\n\nexport default function SearchAppBar({ user }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          setUser({\n            uid: authUser.uid,\n            email: authUser.email,\n            displayName: authUser.displayName,\n            photoURL: authUser.photoURL,\n          }),\n        );\n      }\n    });\n  }, []);\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={() => dispatch(signOut())}>Sign Out</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {user && (\n        <MenuItem>\n          <Link to=\"/phrases/new\" color=\"inherit\" className={classes.menuItem}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <AddIcon />\n            </IconButton>\n            <p>New Phrase</p>\n          </Link>\n        </MenuItem>\n      )}\n\n      <MenuItem>\n        <Link to=\"/categories\" color=\"inherit\" className={classes.menuItem}>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <CategoryIcon />\n            </Badge>\n          </IconButton>\n          <p>Categories</p>\n        </Link>\n      </MenuItem>\n      {user ? (\n        <MenuItem onClick={handleProfileMenuOpen}>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>{user.email}</p>\n        </MenuItem>\n      ) : (\n        <MenuItem>\n          <Link to=\"/sign-in\" className={classes.menuItem}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <ExitToAppIcon />\n            </IconButton>\n            <p>Sign In</p>\n          </Link>\n        </MenuItem>\n      )}\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <Link to=\"/\" color=\"inherit\">\n              <MenuIcon />\n            </Link>\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Memos\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {user && (\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Link to=\"/phrases/new\" color=\"inherit\">\n                  <AddIcon style={{ color: 'white' }} />\n                </Link>\n              </IconButton>\n            )}\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Link to=\"/categories\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <CategoryIcon />\n                </Badge>\n              </Link>\n            </IconButton>\n            {false && (\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            )}\n            {user ? (\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <Chip\n                  avatar={<Avatar>{user.email[0].toUpperCase()}</Avatar>}\n                  label={user.displayName || user.email}\n                />\n              </IconButton>\n            ) : (\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Link to=\"/sign-in\">\n                  <ExitToAppIcon style={{ color: 'white' }} />\n                </Link>\n              </IconButton>\n            )}\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/auth/authSlice';\n\nexport default function NoAuthRoute({ component: Component, ...rest }) {\n  const user = useSelector(selectUser);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return <div>Oopss ... Not found</div>;\n}\n\nNotFound.propTypes = {};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/auth/authSlice';\n\nexport default function AuthRoute({ component: Component, ...rest }) {\n  const user = useSelector(selectUser);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/sign-in',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport db from '../../utils/firebase';\n\nexport const findCategory = async () => {\n  try {\n    return db\n      .collection('categories')\n      .orderBy('createdAt', 'desc')\n      .limit(20)\n      .get()\n      .then((querySnapshot) =>\n        querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n      );\n  } catch (err) {\n    return [];\n  }\n};\n\nexport const getCategories = createAsyncThunk(\n  'category/list',\n  async (options = {}, { rejectWithValue }) => {\n    try {\n      const categories = await db\n        .collection('categories')\n        .orderBy('createdAt', 'desc')\n        .limit(options.limit || 100)\n        .get()\n        .then((querySnapshot) =>\n          querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n        );\n      return categories;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addCategory = createAsyncThunk(\n  'category/create',\n  async (data, { rejectWithValue }) => {\n    try {\n      const phrase = await db.collection('categories').add({\n        ...data,\n        createdAt: new Date().toISOString(),\n      });\n      const res = await phrase.get();\n      return {\n        id: phrase.id,\n        ...res.data(),\n      };\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const updateCategory = createAsyncThunk(\n  'category/update',\n  async (data, { rejectWithValue }) => {\n    try {\n      await db.collection('categories').doc(data.id).set(data, { merge: true });\n      return data.id;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const removeCategory = createAsyncThunk(\n  'category/remove',\n  async (categoryId, { rejectWithValue }) => {\n    try {\n      await db.collection('categories').doc(categoryId).delete();\n      return categoryId;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n","/* eslint no-param-reassign: \"off\" */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  addCategory,\n  getCategories,\n  updateCategory,\n  removeCategory,\n} from './categoryService';\n\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState: {\n    loading: 'idle',\n    items: [],\n    currentRequestId: undefined,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [addCategory.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [addCategory.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [addCategory.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [getCategories.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [getCategories.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.splice(0);\n        state.items.push(...action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [getCategories.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [updateCategory.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.categoryId,\n      );\n    },\n    [removeCategory.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.categoryId,\n      );\n    },\n  },\n});\n\nexport const selectCategories = (state) => state.category.items;\n\nexport default categorySlice.reducer;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chip from '@material-ui/core/Chip';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nasync function speak(text) {\n  const speechSyn = new SpeechSynthesisUtterance(text);\n  speechSyn.lang = 'en-US';\n  return window.speechSynthesis.speak(speechSyn);\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  chip: {\n    padding: '5px 20px 0px 20px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function PhraseItem({\n  phrase,\n  isUpdate,\n  categories,\n  handleOpen,\n  handleDelete,\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const phraseCategories = categories.filter(\n    (item) => phrase.categories && phrase.categories.includes(item.id),\n  );\n  return (\n    <Grid item>\n      <Card className={classes.root}>\n        <CardContent className={classes.chip}>\n          {phraseCategories.length\n            ? phraseCategories.map((item) => (\n                <Chip key={item.id} label={item.name} color=\"primary\" />\n              ))\n            : 'Word of the Day'}\n        </CardContent>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\">\n            {phrase.title}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\" />\n          <Typography variant=\"body2\" component=\"p\">\n            {phrase.meaning}\n            <br />\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            size=\"small\"\n            type=\"button\"\n            onClick={() => speak(phrase.title)}\n          >\n            <VolumeUpIcon />\n          </Button>\n          {isUpdate && (\n            <Button\n              size=\"small\"\n              type=\"button\"\n              onClick={() => handleOpen(phrase)}\n            >\n              Edit\n            </Button>\n          )}\n          {isUpdate && (\n            <Button size=\"small\" type=\"button\" onClick={handleClickOpen}>\n              Delete\n            </Button>\n          )}\n        </CardActions>\n      </Card>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Are you sure to remove this phrase?\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button\n            onClick={() => handleDelete(phrase)}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport db from '../../utils/firebase';\n\nexport const getPhrases = createAsyncThunk(\n  'phrase/getList',\n  async (options = {}, { rejectWithValue }) => {\n    try {\n      let queryBuilder = await db.collection('phrases');\n      if (\n        options.isFilter &&\n        Array.isArray(options.filteredCategories) &&\n        options.filteredCategories.length\n      ) {\n        queryBuilder = queryBuilder.where(\n          'categories',\n          'array-contains-any',\n          options.filteredCategories,\n        );\n      }\n      queryBuilder = queryBuilder.orderBy('createdAt', 'desc');\n      if (+options.limit !== -1) {\n        queryBuilder = queryBuilder.limit(options.limit || 100);\n      }\n      return queryBuilder\n        .get()\n        .then((querySnapshot) =>\n          querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n        );\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addPhrase = createAsyncThunk(\n  'phrase/create',\n  async (data, { rejectWithValue }) => {\n    try {\n      const phrase = await db.collection('phrases').add({\n        ...data,\n        createdAt: new Date().toISOString(),\n      });\n      const res = await phrase.get();\n      return {\n        id: phrase.id,\n        ...res.data(),\n      };\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const updatePhrase = createAsyncThunk(\n  'phrase/update',\n  async (data, { rejectWithValue }) => {\n    try {\n      await db.collection('phrases').doc(data.id).set(data, { merge: true });\n      return data.id;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const removePhrase = createAsyncThunk(\n  'phrase/remove',\n  async (phraseId, { rejectWithValue }) => {\n    try {\n      await db.collection('phrases').doc(phraseId).delete();\n      return phraseId;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n","/* eslint no-param-reassign: \"off\" */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  addPhrase,\n  getPhrases,\n  updatePhrase,\n  removePhrase,\n} from './phraseService';\n\nexport const phraseSlice = createSlice({\n  name: 'phrase',\n  initialState: {\n    loading: 'idle',\n    items: [],\n    filteredCategories:\n      JSON.parse(localStorage.getItem('filter-categories')) || [],\n    currentRequestId: undefined,\n    error: null,\n  },\n  reducers: {\n    setFilteredCategories: (state, action) => {\n      localStorage.setItem('filter-categories', JSON.stringify(action.payload));\n      state.filteredCategories = action.payload;\n    },\n  },\n  extraReducers: {\n    [addPhrase.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [addPhrase.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [addPhrase.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [getPhrases.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [getPhrases.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.splice(0);\n        state.items.push(...action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [getPhrases.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [updatePhrase.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.phraseId,\n      );\n    },\n    [removePhrase.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.phraseId,\n      );\n    },\n  },\n});\n\nexport const { setFilteredCategories } = phraseSlice.actions;\n\nexport const selectPhrases = (state) => state.phrase.items;\nexport const selectFilteredCategories = (state) =>\n  state.phrase.filteredCategories;\n\nexport default phraseSlice.reducer;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getCategories } from '../../categoryService';\nimport { selectCategories } from '../../categorySlice';\n\nexport default function NameInput({ onChange, ...props }) {\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [options, setOptions] = React.useState([]);\n  React.useEffect(() => {\n    if (!categories.length) {\n      dispatch(getCategories());\n    }\n    setOptions(categories.map((option) => `${option.name}`));\n  }, [categories]);\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      freeSolo\n      onClose={(e) => onChange(e)}\n      disableClearable\n      id=\"category-input\"\n      options={options}\n      renderInput={(params) => <TextField {...params} label=\"Name\" />}\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm, Controller } from 'react-hook-form';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport NameInput from '../NameInput';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function CategoryForm({ onSubmit, category }) {\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    formState: { errors },\n    control,\n    setValue,\n    reset,\n  } = useForm();\n\n  const submit = async (data) => {\n    onSubmit(data, category);\n    reset({\n      name: '',\n      description: '',\n    });\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.stopPropagation();\n        handleSubmit(submit)(e);\n      }}\n      className={classes.form}\n    >\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"name\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue={category.name || ''}\n            placeholder=\"Name\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field: { ref, ...rest }, fieldState }) => (\n              <NameInput\n                {...rest}\n                {...fieldState}\n                error={errors.name}\n                onChange={(e) => {\n                  setValue('name', e.currentTarget.value, {\n                    shouldValidate: true,\n                  });\n                }}\n              />\n            )}\n          />\n          {errors.title && <span>Title is required</span>}\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"description\"\n            control={control}\n            defaultValue={category.description || ''}\n            render={({ field }) => (\n              <TextField {...field} fullWidth label=\"Description\" />\n            )}\n          />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CategoryForm from '../CategoryForm';\nimport { addCategory, getCategories } from '../../categoryService';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(${-top}%, ${-left}%)`,\n  };\n}\n\nexport default function CategoryModal({\n  category = {},\n  open = false,\n  handleClose,\n  title = 'Add new category',\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleSubmit = (data) => {\n    dispatch(addCategory(data));\n    handleClose();\n    return dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  };\n  const [modalStyle] = useState(getModalStyle);\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <h2>{title}</h2>\n        <CategoryForm category={category} onSubmit={handleSubmit} />\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getPhrases } from '../../phraseService';\nimport { selectPhrases } from '../../phraseSlice';\n\nexport default function WordInput({ onChange, ...props }) {\n  const phrases = useSelector(selectPhrases);\n  const dispatch = useDispatch();\n  const [options, setOptions] = React.useState([]);\n\n  React.useEffect(() => {\n    if (!phrases.length) {\n      dispatch(getPhrases());\n    }\n    setOptions(phrases.map((option) => `${option.title}`));\n  }, [phrases]);\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      freeSolo\n      onClose={(e) => onChange(e)}\n      disableClearable\n      id=\"phrase-input\"\n      options={options}\n      renderInput={(params) => <TextField {...params} label=\"Title\" />}\n    />\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport CategoryModal from 'features/category/components/CategoryModal';\nimport { getCategories } from 'features/category/categoryService';\nimport { selectCategories } from 'features/category/categorySlice';\nimport { selectUser } from 'features/auth/authSlice';\nimport WordInput from '../WordInput';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  inputGroup: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(3),\n    },\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  dropdown: {\n    width: 'calc(100% - 56px)',\n  },\n  addBtn: {\n    width: '56px',\n    marginTop: 0,\n  },\n}));\n\nexport default function AddPhrase({ addPhrase, phrase = {} }) {\n  const classes = useStyles();\n  const categories = useSelector(selectCategories);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const PhraseInput = React.createRef();\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  }, []);\n  const {\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    control,\n    reset,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    addPhrase(\n      {\n        ...data,\n        userId: user.uid,\n      },\n      phrase,\n    );\n    reset({\n      title: '',\n      meaning: phrase.meaning || '',\n      categories: (phrase && phrase.meaning) || [],\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"title\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue={phrase.title || ''}\n            placeholder=\"Phrase\"\n            render={({ field: { ref, ...rest }, fieldState }) => (\n              <WordInput\n                {...rest}\n                {...fieldState}\n                error={errors.title}\n                onChange={(e) => {\n                  setValue('title', e.currentTarget.value, {\n                    shouldValidate: true,\n                  });\n                }}\n              />\n            )}\n          />\n          {errors.title && <span>Title is required</span>}\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"meaning\"\n            control={control}\n            defaultValue={phrase.meaning || ''}\n            render={({ field }) => (\n              <TextField {...field} fullWidth label=\"Meaning\" />\n            )}\n          />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.inputGroup}>\n          <Controller\n            name=\"categories\"\n            render={({ field }) => (\n              <Autocomplete\n                {...field}\n                multiple\n                id=\"categories-input\"\n                options={categories.map((category) => category.id)}\n                getOptionLabel={(option) => {\n                  const item = categories.find(\n                    (category) => category.id === option,\n                  );\n                  return item && item.name;\n                }}\n                className={classes.dropdown}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Categories\"\n                    placeholder=\"Categories\"\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            control={control}\n            defaultValue={phrase.categories || []}\n          />\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            className={classes.addBtn}\n            onClick={handleOpen}\n          >\n            <AddIcon />\n          </Fab>\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            {' '}\n            Submit{' '}\n          </Button>\n        </Grid>\n      </Grid>\n      <CategoryModal open={open} handleClose={handleClose} />\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport AddPhrase from '../AddPhrase';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(${-top}%, ${-left}%)`,\n  };\n}\n\nexport default function PhraseModal({\n  updatePhrase,\n  phrase = {},\n  open = false,\n  handleClose,\n}) {\n  const classes = useStyles();\n\n  const [modalStyle] = useState(getModalStyle);\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <AddPhrase addPhrase={updatePhrase} phrase={phrase} />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getCategories } from 'features/category/categoryService';\nimport { selectCategories } from 'features/category/categorySlice';\nimport { selectUser } from 'features/auth/authSlice';\nimport PhraseItem from '../PhraseItem';\nimport { removePhrase, getPhrases, updatePhrase } from '../../phraseService';\nimport { selectPhrases, selectFilteredCategories } from '../../phraseSlice';\nimport PhraseModal from '../PhraseModal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  list: {\n    flexGrow: 1,\n  },\n  gridList: {},\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\nexport default function PhraseList({ limit, isFilter = true }) {\n  const phrases = useSelector(selectPhrases);\n  const user = useSelector(selectUser);\n  const filteredCategories = useSelector(selectFilteredCategories);\n  const categories = useSelector(selectCategories);\n  const [phrase, setPhrase] = useState();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = (currentPhrase) => {\n    setPhrase(currentPhrase);\n    setOpen(true);\n  };\n\n  const handleDelete = async (currentPhrase) => {\n    await dispatch(removePhrase(currentPhrase.id));\n    return dispatch(\n      getPhrases({\n        isFilter,\n        filteredCategories,\n        limit: limit || 100,\n        startAt: 0,\n      }),\n    );\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updatePhraseAction = async (data, currentPhrase) => {\n    await dispatch(\n      updatePhrase({\n        ...currentPhrase,\n        ...data,\n      }),\n    );\n    setOpen(false);\n    return dispatch(\n      getPhrases({\n        isFilter,\n        limit: limit || 100,\n        startAt: 0,\n      }),\n    );\n  };\n  useEffect(() => {\n    if (!phrases.length) {\n      dispatch(\n        getPhrases({\n          isFilter,\n          filteredCategories,\n          limit: limit || 100,\n          startAt: 0,\n        }),\n      );\n    }\n    if (!categories.length) {\n      dispatch(\n        getCategories({\n          limit: 1000,\n        }),\n      );\n    }\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.list} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={2}>\n            {phrases.map((phraseItem) => (\n              <PhraseItem\n                phrase={phraseItem}\n                isUpdate={\n                  user && (user.uid === phraseItem.userId || !phraseItem.userId)\n                }\n                categories={categories}\n                key={phraseItem.id}\n                handleOpen={handleOpen}\n                handleDelete={handleDelete}\n              />\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n      <PhraseModal\n        open={open}\n        handleClose={handleClose}\n        phrase={phrase}\n        updatePhrase={updatePhraseAction}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PhraseList from '../../components/PhraseList';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <PhraseList limit={-1} />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AddPhrase from '../../components/AddPhrase';\nimport PhraseList from '../../components/PhraseList';\nimport { addPhrase, getPhrases } from '../../phraseService';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addPhraseAction = async (data) => {\n    await dispatch(addPhrase(data));\n    return dispatch(getPhrases({ limit: 9 }));\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <Grid container item xs={12} className={classes.form}>\n        <AddPhrase addPhrase={addPhraseAction} />\n      </Grid>\n      <Grid container item xs={12} className={classes.form}>\n        <PhraseList limit=\"-1\" isFilter={false} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NotFound from '../../components/NotFound';\nimport AuthRouter from '../../components/routers/AuthRouter';\nimport MainPage from './pages/Main';\nimport AddPhrase from './pages/Add';\n\nfunction Phrase() {\n  const match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={match.url} component={MainPage} />\n      <AuthRouter path={`${match.url}/new`} component={AddPhrase} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nPhrase.propTypes = {};\n\nexport default Phrase;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { selectCategories } from '../../categorySlice';\nimport { getCategories } from '../../categoryService';\nimport {\n  selectFilteredCategories,\n  setFilteredCategories,\n} from '../../../phrase/phraseSlice';\n\nconst useStyles = makeStyles({\n  listItem: {\n    width: '10px',\n    'list-style-type': 'none',\n  },\n});\n\nexport default function CategoryList() {\n  const classes = useStyles();\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const checked = useSelector(selectFilteredCategories);\n\n  useEffect(() => {\n    if (!categories.length) {\n      dispatch(getCategories());\n    }\n  }, []);\n  const handleToggle = (category) => () => {\n    const currentIndex = checked.indexOf(category.id);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(category.id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    return dispatch(setFilteredCategories(newChecked));\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {categories.map((category) => (\n        <Grid item xs={3} key={category.id} className={classes.listItem}>\n          <ListItem\n            role={undefined}\n            dense\n            button\n            onClick={handleToggle(category)}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(category.id) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': category.id }}\n              />\n            </ListItemIcon>\n            <ListItemText id={category.id} primary={category.name} />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"comments\">\n                <CommentIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CategoryList from '../../components/CategoryList';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function CategoryPage() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <CategoryList />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NotFound from '../../components/NotFound';\nimport MainPage from './pages/Main';\n\nfunction Phrase() {\n  const match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={match.url} component={MainPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nPhrase.propTypes = {};\n\nexport default Phrase;\n","import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { signIn } from '../authService';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    formState: { errors },\n    control,\n    reset,\n  } = useForm();\n\n  const submit = async (data) => {\n    dispatch(signIn(data)).then(() => {\n      history.push('/');\n    });\n    reset({\n      email: '',\n      password: '',\n    });\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          onSubmit={(e) => {\n            e.stopPropagation();\n            handleSubmit(submit)(e);\n          }}\n          className={classes.form}\n        >\n          <Controller\n            name=\"email\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue=\"\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field }) => (\n              <TextField\n                {...field}\n                error={errors.name}\n                fullWidth\n                required\n                margin=\"normal\"\n                autoComplete=\"email\"\n                label=\"Email Address\"\n                autoFocus\n              />\n            )}\n          />\n          {errors.email && <span>Email is required</span>}\n          <Controller\n            name=\"password\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue=\"\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field }) => (\n              <TextField\n                {...field}\n                error={errors.name}\n                type=\"password\"\n                fullWidth\n                required\n                label=\"Password\"\n                margin=\"normal\"\n              />\n            )}\n          />\n          {errors.password && <span>Password is required</span>}\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport NoAuthRouter from '../components/routers/NoAuthRouter';\nimport Phrase from '../features/phrase';\nimport Category from '../features/category';\nimport SignIn from '../features/auth/sign-in';\nimport NotFound from '../components/NotFound';\n\nconst Routes = () => (\n  <Switch>\n    <Redirect exact from=\"/\" to=\"/phrases\" />\n    <NoAuthRouter path=\"/sign-in\" component={SignIn} />\n    <Route path=\"/phrases\" component={Phrase} />\n    <Route path=\"/categories\" component={Category} />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { HashRouter } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport { selectUser } from './features/auth/authSlice';\nimport Routers from './routers';\n\nfunction App() {\n  const user = useSelector(selectUser);\n\n  return (\n    <Suspense fallback={<LinearProgress />}>\n      <HashRouter>\n        <AppBar user={user} />\n        <Routers />\n      </HashRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport phraseReducer from '../features/phrase/phraseSlice';\nimport categoryReducer from '../features/category/categorySlice';\nimport authReducer from '../features/auth/authSlice';\n\nexport default configureStore({\n  reducer: {\n    phrase: phraseReducer,\n    category: categoryReducer,\n    auth: authReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}