{"version":3,"sources":["components/AppBar/index.js","utils/firebase.js","features/phrase/AddPhrase/index.js","features/phrase/PhraseItem/index.js","features/phrase/phraseSlice.js","features/phrase/PhraseList/index.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","form","margin","AddPhrase","addPhrase","count","useForm","handleSubmit","errors","formState","control","reset","onSubmit","data","a","console","log","collection","add","createdAt","Date","toISOString","meaning","Grid","container","direction","justify","item","xs","name","fullWidth","rules","required","defaultValue","render","field","Input","Button","type","text","speechSyn","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","getModalStyle","top","left","transform","minWidth","bullet","fontSize","pos","marginBottom","paper","border","PhraseItem","phrase","React","useState","modalStyle","open","setOpen","body","style","id","ListItem","Card","CardContent","gutterBottom","component","CardActions","size","onClick","Modal","onClose","aria-labelledby","aria-describedby","phraseSlice","createSlice","initialState","items","reducers","state","action","push","payload","setPhrases","actions","selectPhrases","maxWidth","background","PhraseList","phrases","useSelector","dispatch","useDispatch","useEffect","orderBy","limit","get","then","querySnapshot","docs","map","List","App","setCount","n","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","phraserReducer","ReactDOM","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acdcb90f.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Material-UI\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import firebase from 'firebase';\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyAqaF-6pe6wxykLHyB7CkG4TxYXsu3a6zg\",\n    authDomain: \"my-spa-1ae0e.firebaseapp.com\",\n    databaseURL: \"https://my-spa-1ae0e.firebaseio.com\",\n    projectId: \"my-spa-1ae0e\",\n    storageBucket: \"my-spa-1ae0e.appspot.com\",\n    messagingSenderId: \"535290719088\",\n    appId: \"1:535290719088:web:1cf171d8d605a11cadfdb5\"\n  });\n  \nexport const db = firebase.firestore();\n\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { db } from '../../../utils/firebase';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: 1000,\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n  input: {\r\n    padding: theme.spacing(1, 0),\r\n    margin: theme.spacing(0.2, 0, 0, 0),\r\n  },\r\n}));\r\n\r\nexport default function AddPhrase({addPhrase, count}) {\r\n  const classes = useStyles();\r\n  const { handleSubmit, formState: { errors }, control, reset } = useForm();\r\n\r\n  const onSubmit = async data => {\r\n    console.log(data, addPhrase);\r\n    await db.collection(\"phrases\").add({\r\n      ...data,\r\n      createdAt: new Date().toISOString()\r\n    })\r\n    reset({ meaning: '' });\r\n    addPhrase(count + 1);\r\n    // db.collection(\"phrases\").orderBy(\"createdAt\", \"desc\").limit(1000).get()\r\n    //   .then(querySnapshot => querySnapshot.docs.map(item => item.data())) // .then(console.log);\r\n    //   .then(phrases => setPhrases(phrases));\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\r\n      <Grid\r\n        container\r\n        direction='column'\r\n        justify='center'\r\n        alignItems='center'\r\n        spacing={1}\r\n      >\r\n        <Grid container item xs={12} spacing={1} className={classes.input}>\r\n          <Controller\r\n            name='title'\r\n            fullWidth\r\n            control={control}\r\n            rules={{ required: true }}\r\n            defaultValue=''\r\n            placeholder='Phrase'\r\n            render={({ field }) => <Input {...field} fullWidth />}\r\n          />\r\n          {errors.title && <span>Title is required</span>}\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={1} className={classes.input}>\r\n          <Controller\r\n            name='meaning'\r\n            control={control}\r\n            defaultValue=''\r\n            render={({ field }) => <Input {...field} fullWidth />}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={1} className={classes.input}>\r\n          <Button type='submit' variant='contained' color='primary'>\r\n            {' '}\r\n            Submit{' '}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\n\r\nasync function speak(text) {\r\n  const speechSyn = new SpeechSynthesisUtterance(text);\r\n  speechSyn.lang = 'en-US';\r\n  return window.speechSynthesis.speak(speechSyn);\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: 'white',\r\n    border: '2px solid #000',\r\n  },\r\n});\r\n\r\nexport default function PhraseItem({ phrase }) {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n      <p id=\"simple-modal-description\">\r\n        Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\r\n      </p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <ListItem>\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {phrase.title}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          \r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {phrase.meaning}\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" type=\"button\" onClick={() => speak(phrase.title)}><VolumeUpIcon/></Button>\r\n        <Button size=\"small\" type=\"button\" onClick={handleOpen}>Edit</Button>\r\n        <Button size=\"small\" type=\"button\" >Delete</Button>\r\n      </CardActions>\r\n    </Card>\r\n    <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </ListItem>\r\n  );\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const phraseSlice = createSlice({\r\n  name: 'phrase',\r\n  initialState: {\r\n    items: [],\r\n  },\r\n  reducers: {\r\n    addPhrase: (state, action) => {\r\n      state.items.push(action.payload);\r\n    },\r\n    setPhrases: (state, action) => {\r\n      state.items = action.payload;\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addPhrase, setPhrases } = phraseSlice.actions\r\n\r\nexport const selectPhrases = state => state.phrase.items;\r\n\r\nexport default phraseSlice.reducer","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhraseItem from '../PhraseItem'\r\nimport { db } from '../../../utils/firebase';\r\nimport { selectPhrases, setPhrases } from '../phraseSlice';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function PhraseList() {\r\n  const phrases = useSelector(selectPhrases);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    db.collection('phrases')\r\n      .orderBy('createdAt', 'desc')\r\n      .limit(1000)\r\n      .get()\r\n      .then((querySnapshot) =>\r\n        querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id }))\r\n      ) // .then(console.log);\r\n      .then((phrases) => dispatch(setPhrases(phrases)));\r\n  }, []);\r\n\r\n  return (\r\n    <List component='nav' className={classes.root} aria-label='secondary mailbox folders'>\r\n      {phrases.map((phrase) => (\r\n        <PhraseItem phrase= {phrase} key={phrase.id}/>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from './components/AppBar';\nimport AddPhrase from './features/phrase/AddPhrase';\nimport PhraseList from './features/phrase/PhraseList';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1, 0, 2, 1),\n    flexGrow: 1,\n  },\n  body: {\n    margin: theme.spacing(1, 0, 2, 1),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n  const addPhrase = (n) => setCount(n);\n\n  return (\n    <div className={classes.root}>\n      <AppBar />\n      <Grid\n        container\n        direction='row'\n        justify='flex-start'\n        alignItems='flex-start'\n        spacing={6}\n        className={classes.body}\n      >\n        <Grid container item xs={4} spacing={1}>\n          <AddPhrase addPhrase={addPhrase} count={count} />\n        </Grid>\n        <Grid container item xs={8} spacing={1}>\n          <PhraseList count={count} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport phraserReducer from '../features/phrase/phraseSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    phrase: phraserReducer,\r\n  },\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}