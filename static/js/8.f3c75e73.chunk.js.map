{"version":3,"sources":["components/NotFound/index.jsx","features/category/components/CategoryList/index.js","features/category/pages/Main/index.js","features/category/index.js"],"names":["NotFound","useStyles","makeStyles","listItem","width","CategoryList","classes","categories","useSelector","selectCategories","dispatch","useDispatch","checked","selectFilteredCategories","useEffect","length","getCategories","handleToggle","category","currentIndex","indexOf","id","newChecked","push","splice","setFilteredCategories","Grid","container","spacing","map","item","xs","className","ListItem","role","undefined","dense","button","onClick","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","primary","name","ListItemSecondaryAction","IconButton","aria-label","theme","body","padding","form","input","margin","CategoryPage","direction","justify","alignItems","Phrase","match","useRouteMatch","exact","path","url","component","MainPage"],"mappings":"6GAAA,+DAEe,SAASA,IACtB,OAAO,wD,6MCeHC,EAAYC,YAAW,CAC3BC,SAAU,CACRC,MAAO,OACP,kBAAmB,UAIR,SAASC,IACtB,IAAMC,EAAUL,IACVM,EAAaC,YAAYC,KACzBC,EAAWC,cACXC,EAAUJ,YAAYK,KAE5BC,qBAAU,WACHP,EAAWQ,QACdL,EAASM,iBAEV,IACH,IAAMC,EAAe,SAACC,GAAD,OAAc,WACjC,IAAMC,EAAeP,EAAQQ,QAAQF,EAASG,IACxCC,EAAU,YAAOV,GAQvB,OANsB,IAAlBO,EACFG,EAAWC,KAAKL,EAASG,IAEzBC,EAAWE,OAAOL,EAAc,GAG3BT,EAASe,YAAsBH,MAGxC,OACE,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGrB,EAAWsB,KAAI,SAACX,GAAD,OACd,cAACQ,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAqBC,UAAW1B,EAAQH,SAAvD,SACE,eAAC8B,EAAA,EAAD,CACEC,UAAMC,EACNC,OAAK,EACLC,QAAM,EACNC,QAASrB,EAAaC,GAJxB,UAME,cAACqB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACL7B,SAA2C,IAAlCA,EAAQQ,QAAQF,EAASG,IAClCqB,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmB1B,EAASG,QAG9C,cAACwB,EAAA,EAAD,CAAcxB,GAAIH,EAASG,GAAIyB,QAAS5B,EAAS6B,OACjD,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYR,KAAK,MAAMS,aAAW,WAAlC,SACE,cAAC,IAAD,YAnBehC,EAASG,SC/CxC,IAAMpB,EAAYC,aAAW,SAACiD,GAAD,MAAY,CACvCC,KAAM,CACJC,QAASF,EAAMvB,QAAQ,EAAG,EAAG,EAAG,IAElC0B,KAAM,CACJlD,MAAO,OACPiD,QAASF,EAAMvB,QAAQ,EAAG,EAAG,EAAG,IAElC2B,MAAO,CACLF,QAASF,EAAMvB,QAAQ,EAAG,GAC1B4B,OAAQL,EAAMvB,QAAQ,GAAK,EAAG,EAAG,QAItB,SAAS6B,IACtB,IAAMnD,EAAUL,IAEhB,OACE,cAACyB,EAAA,EAAD,CACEC,WAAS,EACT+B,UAAU,MACVC,QAAQ,aACRC,WAAW,aACX5B,UAAW1B,EAAQ8C,KALrB,SAOE,cAAC/C,EAAD,MCbSwD,UAZf,WACE,IAAMC,EAAQC,cACd,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAMH,EAAMI,IAAKC,UAAWC,IACzC,cAAC,IAAD,CAAOD,UAAWnE","file":"static/js/8.f3c75e73.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function NotFound() {\n  return <div>Oopss ... Not found</div>;\n}\n\nNotFound.propTypes = {};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { selectCategories } from '../../categorySlice';\nimport { getCategories } from '../../categoryService';\nimport {\n  selectFilteredCategories,\n  setFilteredCategories,\n} from '../../../phrase/phraseSlice';\n\nconst useStyles = makeStyles({\n  listItem: {\n    width: '10px',\n    'list-style-type': 'none',\n  },\n});\n\nexport default function CategoryList() {\n  const classes = useStyles();\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const checked = useSelector(selectFilteredCategories);\n\n  useEffect(() => {\n    if (!categories.length) {\n      dispatch(getCategories());\n    }\n  }, []);\n  const handleToggle = (category) => () => {\n    const currentIndex = checked.indexOf(category.id);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(category.id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    return dispatch(setFilteredCategories(newChecked));\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {categories.map((category) => (\n        <Grid item xs={3} key={category.id} className={classes.listItem}>\n          <ListItem\n            role={undefined}\n            dense\n            button\n            onClick={handleToggle(category)}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(category.id) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': category.id }}\n              />\n            </ListItemIcon>\n            <ListItemText id={category.id} primary={category.name} />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"comments\">\n                <CommentIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CategoryList from '../../components/CategoryList';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function CategoryPage() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <CategoryList />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NotFound from '../../components/NotFound';\nimport MainPage from './pages/Main';\n\nfunction Phrase() {\n  const match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={match.url} component={MainPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nPhrase.propTypes = {};\n\nexport default Phrase;\n"],"sourceRoot":""}