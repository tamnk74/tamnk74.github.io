{"version":3,"sources":["utils/firebase.js","features/auth/authService.js","components/AppBar/index.js","features/auth/authSlice.js","components/routers/NoAuthRouter/index.jsx","components/NotFound/index.jsx","components/routers/AuthRouter/index.jsx","features/phrase/components/PhraseItem/index.js","features/phrase/phraseService.js","features/category/categoryService.js","features/phrase/phraseSlice.js","features/category/categorySlice.js","features/category/components/NameInput/index.js","features/category/components/CategoryForm/index.js","features/category/components/CategoryModal/index.jsx","features/phrase/components/WordInput/index.js","features/phrase/components/AddPhrase/index.jsx","features/phrase/components/PhraseModal/index.js","features/phrase/components/PhraseList/index.js","features/phrase/pages/Main/index.js","features/phrase/pages/Add/index.js","features/phrase/index.js","features/category/components/CategoryList/index.js","features/category/pages/Main/index.js","features/category/index.js","features/auth/sign-in/index.js","routers/index.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","signIn","createAsyncThunk","a","email","password","rejectWithValue","signInWithEmailAndPassword","result","signOut","_","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","SearchAppBar","user","classes","dispatch","useDispatch","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","aria-label","to","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","style","authSlice","createSlice","name","initialState","loading","currentRequestId","undefined","error","reducers","setUser","state","action","payload","extraReducers","pending","meta","requestId","fulfilled","displayName","refreshToken","refreshTemailVerifiedoken","emailVerified","rejected","selectUser","actions","NoAuthRoute","Component","component","rest","useSelector","render","props","pathname","from","location","NotFound","AuthRoute","text","speechSyn","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","minWidth","bullet","margin","transform","chip","fontSize","pos","marginBottom","PhraseItem","phrase","categories","handleOpen","handleDelete","setOpen","handleClose","phraseCategories","filter","item","includes","Grid","Card","CardContent","length","map","Chip","label","meaning","CardActions","Button","size","type","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","autoFocus","getPhrases","options","db","collection","queryBuilder","isFilter","Array","isArray","filteredCategories","where","orderBy","limit","get","then","querySnapshot","docs","data","addPhrase","add","createdAt","Date","toISOString","res","updatePhrase","doc","set","merge","removePhrase","phraseId","delete","getCategories","addCategory","updateCategory","removeCategory","categoryId","phraseSlice","items","JSON","parse","localStorage","getItem","setFilteredCategories","setItem","stringify","push","splice","selectPhrases","selectFilteredCategories","categorySlice","selectCategories","category","NameInput","onChange","setOptions","useEffect","option","Autocomplete","fullWidth","freeSolo","e","disableClearable","renderInput","params","TextField","form","CategoryForm","onSubmit","useForm","handleSubmit","errors","formState","control","setValue","reset","submit","description","stopPropagation","container","direction","justify","xs","rules","required","defaultValue","field","ref","fieldState","value","shouldValidate","paper","background","border","boxShadow","shadows","getModalStyle","top","left","CategoryModal","modalStyle","Modal","WordInput","phrases","inputGroup","marginTop","flexDirection","dropdown","addBtn","AddPhrase","multiple","getOptionLabel","find","Fab","PhraseModal","flexWrap","overflow","list","gridList","icon","PhraseList","setPhrase","currentPhrase","startAt","updatePhraseAction","phraseItem","body","MainPage","addPhraseAction","Phrase","match","useRouteMatch","exact","path","url","listItem","CategoryList","checked","handleToggle","currentIndex","indexOf","newChecked","ListItem","role","dense","button","ListItemIcon","Checkbox","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","CategoryPage","Copyright","align","Link","href","getFullYear","avatar","secondary","main","SignIn","history","useHistory","Container","maxWidth","CssBaseline","Avatar","autoComplete","FormControlLabel","Box","mt","Routes","Category","App","fallback","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","phraseReducer","categoryReducer","authReducer","ReactDOM","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07e64954.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyAqaF-6pe6wxykLHyB7CkG4TxYXsu3a6zg',\n  authDomain: 'my-spa-1ae0e.firebaseapp.com',\n  databaseURL: 'https://my-spa-1ae0e.firebaseio.com',\n  projectId: 'my-spa-1ae0e',\n  storageBucket: 'my-spa-1ae0e.appspot.com',\n  messagingSenderId: '535290719088',\n  appId: '1:535290719088:web:1cf171d8d605a11cadfdb5',\n});\n\nexport const auth = firebase.auth();\n\nexport default firebase.firestore();\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { auth } from '../../utils/firebase';\n\nexport const signIn = createAsyncThunk(\n  'auth/signin',\n  async ({ email, password }, { rejectWithValue }) => {\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password);\n      return result;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const signOut = createAsyncThunk(\n  'auth/signout',\n  async (_, { rejectWithValue }) => {\n    try {\n      return auth.signOut();\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport AddIcon from '@material-ui/icons/Add';\nimport { signOut } from '../../features/auth/authService';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function SearchAppBar({ user }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={() => dispatch(signOut())}>Sign Out</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Link to=\"/phrases/new\" color=\"inherit\">\n            <AddIcon />\n          </Link>\n        </IconButton>\n        <p>New Phrase</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Link to=\"/phrases/new\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <CategoryIcon />\n            </Badge>\n          </Link>\n        </IconButton>\n        <p>Categories</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <Link to=\"/\" color=\"inherit\">\n              <MenuIcon />\n            </Link>\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Memos\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {user && (\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Link to=\"/phrases/new\" color=\"inherit\">\n                  <AddIcon style={{ color: 'white' }} />\n                </Link>\n              </IconButton>\n            )}\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Link to=\"/categories\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <CategoryIcon />\n                </Badge>\n              </Link>\n            </IconButton>\n            {false && (\n              <IconButton\n                aria-label=\"show 17 new notifications\"\n                color=\"inherit\"\n              >\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            )}\n            {user ? (\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            ) : (\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Link to=\"/sign-in\">\n                  <ExitToAppIcon style={{ color: 'white' }} />\n                </Link>\n              </IconButton>\n            )}\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/* eslint no-param-reassign: \"off\" */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport { signIn, signOut } from './authService';\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    loading: 'idle',\n    user: null,\n    currentRequestId: undefined,\n    error: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n  extraReducers: {\n    [signIn.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [signIn.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.user = {\n          email: action.payload.user.email,\n          displayName: action.payload.user.displayName,\n          refreshToken: action.payload.user.refreshToken,\n          refreshTemailVerifiedoken: action.payload.user.emailVerified,\n        };\n        state.currentRequestId = undefined;\n      }\n    },\n    [signIn.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [signOut.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [signOut.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.user = null;\n        state.currentRequestId = undefined;\n      }\n    },\n    [signOut.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n  },\n});\n\nexport const selectUser = (state) => state.auth.user;\n\nexport const { setUser } = authSlice.actions;\n\nexport default authSlice.reducer;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/auth/authSlice';\n\nexport default function NoAuthRoute({ component: Component, ...rest }) {\n  const user = useSelector(selectUser);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return <div>Oopss ... Not found</div>;\n}\n\nNotFound.propTypes = {};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/auth/authSlice';\n\nexport default function AuthRoute({ component: Component, ...rest }) {\n  const user = useSelector(selectUser);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/sign-in',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chip from '@material-ui/core/Chip';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nasync function speak(text) {\n  const speechSyn = new SpeechSynthesisUtterance(text);\n  speechSyn.lang = 'en-US';\n  return window.speechSynthesis.speak(speechSyn);\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  chip: {\n    padding: '5px 20px 0px 20px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function PhraseItem({\n  phrase,\n  categories,\n  handleOpen,\n  handleDelete,\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const phraseCategories = categories.filter(\n    (item) => phrase.categories && phrase.categories.includes(item.id),\n  );\n  return (\n    <Grid item>\n      <Card className={classes.root}>\n        <CardContent className={classes.chip}>\n          {phraseCategories.length\n            ? phraseCategories.map((item) => (\n                <Chip key={item.id} label={item.name} color=\"primary\" />\n              ))\n            : 'Word of the Day'}\n        </CardContent>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\">\n            {phrase.title}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\" />\n          <Typography variant=\"body2\" component=\"p\">\n            {phrase.meaning}\n            <br />\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            size=\"small\"\n            type=\"button\"\n            onClick={() => speak(phrase.title)}\n          >\n            <VolumeUpIcon />\n          </Button>\n          <Button size=\"small\" type=\"button\" onClick={() => handleOpen(phrase)}>\n            Edit\n          </Button>\n          <Button size=\"small\" type=\"button\" onClick={handleClickOpen}>\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Are you sure to remove this phrase?\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button\n            onClick={() => handleDelete(phrase)}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport db from '../../utils/firebase';\n\nexport const getPhrases = createAsyncThunk(\n  'phrase/getList',\n  async (options = {}, { rejectWithValue }) => {\n    try {\n      let queryBuilder = await db.collection('phrases');\n      if (\n        options.isFilter &&\n        Array.isArray(options.filteredCategories) &&\n        options.filteredCategories.length\n      ) {\n        queryBuilder = queryBuilder.where(\n          'categories',\n          'array-contains-any',\n          options.filteredCategories,\n        );\n      }\n      queryBuilder = queryBuilder.orderBy('createdAt', 'desc');\n      if (+options.limit !== -1) {\n        queryBuilder = queryBuilder.limit(options.limit || 100);\n      }\n      return queryBuilder\n        .get()\n        .then((querySnapshot) =>\n          querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n        );\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addPhrase = createAsyncThunk(\n  'phrase/create',\n  async (data, { rejectWithValue }) => {\n    try {\n      const phrase = await db.collection('phrases').add({\n        ...data,\n        createdAt: new Date().toISOString(),\n      });\n      const res = await phrase.get();\n      return {\n        id: phrase.id,\n        ...res.data(),\n      };\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const updatePhrase = createAsyncThunk(\n  'phrase/update',\n  async (data, { rejectWithValue }) => {\n    try {\n      await db.collection('phrases').doc(data.id).set(data, { merge: true });\n      return data.id;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const removePhrase = createAsyncThunk(\n  'phrase/remove',\n  async (phraseId, { rejectWithValue }) => {\n    try {\n      await db.collection('phrases').doc(phraseId).delete();\n      return phraseId;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport db from '../../utils/firebase';\n\nexport const findCategory = async () => {\n  try {\n    return db\n      .collection('categories')\n      .orderBy('createdAt', 'desc')\n      .limit(20)\n      .get()\n      .then((querySnapshot) =>\n        querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n      );\n  } catch (err) {\n    return [];\n  }\n};\n\nexport const getCategories = createAsyncThunk(\n  'category/list',\n  async (options = {}, { rejectWithValue }) => {\n    try {\n      const categories = await db\n        .collection('categories')\n        .orderBy('createdAt', 'desc')\n        .limit(options.limit || 100)\n        .get()\n        .then((querySnapshot) =>\n          querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n        );\n      return categories;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addCategory = createAsyncThunk(\n  'category/create',\n  async (data, { rejectWithValue }) => {\n    try {\n      const phrase = await db.collection('categories').add({\n        ...data,\n        createdAt: new Date().toISOString(),\n      });\n      const res = await phrase.get();\n      return {\n        id: phrase.id,\n        ...res.data(),\n      };\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const updateCategory = createAsyncThunk(\n  'category/update',\n  async (data, { rejectWithValue }) => {\n    try {\n      await db.collection('categories').doc(data.id).set(data, { merge: true });\n      return data.id;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const removeCategory = createAsyncThunk(\n  'category/remove',\n  async (categoryId, { rejectWithValue }) => {\n    try {\n      await db.collection('categories').doc(categoryId).delete();\n      return categoryId;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n","/* eslint no-param-reassign: \"off\" */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  addPhrase,\n  getPhrases,\n  updatePhrase,\n  removePhrase,\n} from './phraseService';\n\nexport const phraseSlice = createSlice({\n  name: 'phrase',\n  initialState: {\n    loading: 'idle',\n    items: [],\n    filteredCategories:\n      JSON.parse(localStorage.getItem('filter-categories')) || [],\n    currentRequestId: undefined,\n    error: null,\n  },\n  reducers: {\n    setFilteredCategories: (state, action) => {\n      localStorage.setItem('filter-categories', JSON.stringify(action.payload));\n      state.filteredCategories = action.payload;\n    },\n  },\n  extraReducers: {\n    [addPhrase.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [addPhrase.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [addPhrase.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [getPhrases.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [getPhrases.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.splice(0);\n        state.items.push(...action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [getPhrases.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [updatePhrase.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.phraseId,\n      );\n    },\n    [removePhrase.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.phraseId,\n      );\n    },\n  },\n});\n\nexport const { setFilteredCategories } = phraseSlice.actions;\n\nexport const selectPhrases = (state) => state.phrase.items;\nexport const selectFilteredCategories = (state) =>\n  state.phrase.filteredCategories;\n\nexport default phraseSlice.reducer;\n","/* eslint no-param-reassign: \"off\" */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  addCategory,\n  getCategories,\n  updateCategory,\n  removeCategory,\n} from './categoryService';\n\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState: {\n    loading: 'idle',\n    items: [],\n    currentRequestId: undefined,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [addCategory.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [addCategory.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [addCategory.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [getCategories.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [getCategories.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.splice(0);\n        state.items.push(...action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [getCategories.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [updateCategory.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.categoryId,\n      );\n    },\n    [removeCategory.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.categoryId,\n      );\n    },\n  },\n});\n\nexport const selectCategories = (state) => state.category.items;\n\nexport default categorySlice.reducer;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getCategories } from '../../categoryService';\nimport { selectCategories } from '../../categorySlice';\n\nexport default function NameInput({ onChange, ...props }) {\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [options, setOptions] = React.useState([]);\n  React.useEffect(() => {\n    if (!categories.length) {\n      dispatch(getCategories());\n    }\n    setOptions(categories.map((option) => `${option.name}`));\n  }, [categories]);\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      freeSolo\n      onClose={(e) => onChange(e)}\n      disableClearable\n      id=\"category-input\"\n      options={options}\n      renderInput={(params) => <TextField {...params} label=\"Name\" />}\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm, Controller } from 'react-hook-form';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport NameInput from '../NameInput';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function CategoryForm({ onSubmit, category }) {\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    formState: { errors },\n    control,\n    setValue,\n    reset,\n  } = useForm();\n\n  const submit = async (data) => {\n    onSubmit(data, category);\n    reset({\n      name: '',\n      description: '',\n    });\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.stopPropagation();\n        handleSubmit(submit)(e);\n      }}\n      className={classes.form}\n    >\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"name\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue={category.name || ''}\n            placeholder=\"Name\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field: { ref, ...rest }, fieldState }) => (\n              <NameInput\n                {...rest}\n                {...fieldState}\n                error={errors.name}\n                onChange={(e) => {\n                  setValue('name', e.currentTarget.value, {\n                    shouldValidate: true,\n                  });\n                }}\n              />\n            )}\n          />\n          {errors.title && <span>Title is required</span>}\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"description\"\n            control={control}\n            defaultValue={category.description || ''}\n            render={({ field }) => (\n              <TextField {...field} fullWidth label=\"Description\" />\n            )}\n          />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CategoryForm from '../CategoryForm';\nimport { addCategory, getCategories } from '../../categoryService';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(${-top}%, ${-left}%)`,\n  };\n}\n\nexport default function CategoryModal({\n  category = {},\n  open = false,\n  handleClose,\n  title = 'Add new category',\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleSubmit = (data) => {\n    dispatch(addCategory(data));\n    handleClose();\n    return dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  };\n  const [modalStyle] = useState(getModalStyle);\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <h2>{title}</h2>\n        <CategoryForm category={category} onSubmit={handleSubmit} />\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getPhrases } from '../../phraseService';\nimport { selectPhrases } from '../../phraseSlice';\n\nexport default function WordInput({ onChange, ...props }) {\n  const phrases = useSelector(selectPhrases);\n  const dispatch = useDispatch();\n  const [options, setOptions] = React.useState([]);\n\n  React.useEffect(() => {\n    if (!phrases.length) {\n      dispatch(getPhrases());\n    }\n    setOptions(phrases.map((option) => `${option.title}`));\n  }, [phrases]);\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      freeSolo\n      onClose={(e) => onChange(e)}\n      disableClearable\n      id=\"phrase-input\"\n      options={options}\n      renderInput={(params) => <TextField {...params} label=\"Title\" />}\n    />\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport CategoryModal from '../../../category/components/CategoryModal';\nimport WordInput from '../WordInput';\nimport { getCategories } from '../../../category/categoryService';\nimport { selectCategories } from '../../../category/categorySlice';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  inputGroup: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(3),\n    },\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  dropdown: {\n    width: 'calc(100% - 56px)',\n  },\n  addBtn: {\n    width: '56px',\n    marginTop: 0,\n  },\n}));\n\nexport default function AddPhrase({ addPhrase, phrase = {} }) {\n  const classes = useStyles();\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const PhraseInput = React.createRef();\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  }, []);\n  const {\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    control,\n    reset,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    addPhrase(data, phrase);\n    reset({\n      title: '',\n      meaning: phrase.meaning || '',\n      categories: (phrase && phrase.meaning) || [],\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"title\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue={phrase.title || ''}\n            placeholder=\"Phrase\"\n            render={({ field: { ref, ...rest }, fieldState }) => (\n              <WordInput\n                {...rest}\n                {...fieldState}\n                error={errors.title}\n                onChange={(e) => {\n                  setValue('title', e.currentTarget.value, {\n                    shouldValidate: true,\n                  });\n                }}\n              />\n            )}\n          />\n          {errors.title && <span>Title is required</span>}\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"meaning\"\n            control={control}\n            defaultValue={phrase.meaning || ''}\n            render={({ field }) => (\n              <TextField {...field} fullWidth label=\"Meaning\" />\n            )}\n          />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.inputGroup}>\n          <Controller\n            name=\"categories\"\n            render={({ field }) => (\n              <Autocomplete\n                {...field}\n                multiple\n                id=\"categories-input\"\n                options={categories.map((category) => category.id)}\n                getOptionLabel={(option) => {\n                  const item = categories.find(\n                    (category) => category.id === option,\n                  );\n                  return item && item.name;\n                }}\n                className={classes.dropdown}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Categories\"\n                    placeholder=\"Categories\"\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            control={control}\n            defaultValue={phrase.categories || []}\n          />\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            className={classes.addBtn}\n            onClick={handleOpen}\n          >\n            <AddIcon />\n          </Fab>\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            {' '}\n            Submit{' '}\n          </Button>\n        </Grid>\n      </Grid>\n      <CategoryModal open={open} handleClose={handleClose} />\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport AddPhrase from '../AddPhrase';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(${-top}%, ${-left}%)`,\n  };\n}\n\nexport default function PhraseModal({\n  updatePhrase,\n  phrase = {},\n  open = false,\n  handleClose,\n}) {\n  const classes = useStyles();\n\n  const [modalStyle] = useState(getModalStyle);\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <AddPhrase addPhrase={updatePhrase} phrase={phrase} />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PhraseItem from '../PhraseItem';\nimport { removePhrase, getPhrases, updatePhrase } from '../../phraseService';\nimport { getCategories } from '../../../category/categoryService';\nimport { selectPhrases, selectFilteredCategories } from '../../phraseSlice';\nimport { selectCategories } from '../../../category/categorySlice';\nimport PhraseModal from '../PhraseModal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  list: {\n    flexGrow: 1,\n  },\n  gridList: {},\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\nexport default function PhraseList({ limit, isFilter = true }) {\n  const phrases = useSelector(selectPhrases);\n  const filteredCategories = useSelector(selectFilteredCategories);\n  const categories = useSelector(selectCategories);\n  const [phrase, setPhrase] = useState();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = (currentPhrase) => {\n    setPhrase(currentPhrase);\n    setOpen(true);\n  };\n\n  const handleDelete = async (currentPhrase) => {\n    await dispatch(removePhrase(currentPhrase.id));\n    return dispatch(\n      getPhrases({\n        isFilter,\n        filteredCategories,\n        limit: limit || 100,\n        startAt: 0,\n      }),\n    );\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updatePhraseAction = async (data, currentPhrase) => {\n    await dispatch(\n      updatePhrase({\n        ...currentPhrase,\n        ...data,\n      }),\n    );\n    setOpen(false);\n    return dispatch(\n      getPhrases({\n        isFilter,\n        limit: limit || 100,\n        startAt: 0,\n      }),\n    );\n  };\n  useEffect(() => {\n    dispatch(\n      getPhrases({\n        isFilter,\n        filteredCategories,\n        limit: limit || 100,\n        startAt: 0,\n      }),\n    );\n    dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.list} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={2}>\n            {phrases.map((phraseItem) => (\n              <PhraseItem\n                phrase={phraseItem}\n                categories={categories}\n                key={phraseItem.id}\n                handleOpen={handleOpen}\n                handleDelete={handleDelete}\n              />\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n      <PhraseModal\n        open={open}\n        handleClose={handleClose}\n        phrase={phrase}\n        updatePhrase={updatePhraseAction}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PhraseList from '../../components/PhraseList';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <PhraseList limit={-1} />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AddPhrase from '../../components/AddPhrase';\nimport PhraseList from '../../components/PhraseList';\nimport { addPhrase, getPhrases } from '../../phraseService';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addPhraseAction = async (data) => {\n    await dispatch(addPhrase(data));\n    return dispatch(getPhrases({ limit: 9 }));\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <Grid container item xs={12} className={classes.form}>\n        <AddPhrase addPhrase={addPhraseAction} />\n      </Grid>\n      <Grid container item xs={12} className={classes.form}>\n        <PhraseList limit=\"-1\" isFilter={false} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NotFound from '../../components/NotFound';\nimport AuthRouter from '../../components/routers/AuthRouter';\nimport MainPage from './pages/Main';\nimport AddPhrase from './pages/Add';\n\nfunction Phrase() {\n  const match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={match.url} component={MainPage} />\n      <AuthRouter path={`${match.url}/new`} component={AddPhrase} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nPhrase.propTypes = {};\n\nexport default Phrase;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport { selectCategories } from '../../categorySlice';\nimport { getCategories } from '../../categoryService';\nimport {\n  selectFilteredCategories,\n  setFilteredCategories,\n} from '../../../phrase/phraseSlice';\n\nconst useStyles = makeStyles({\n  listItem: {\n    width: '10px',\n    'list-style-type': 'none',\n  },\n});\n\nexport default function CategoryList() {\n  const classes = useStyles();\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const checked = useSelector(selectFilteredCategories);\n\n  useEffect(() => {\n    if (!categories.length) {\n      dispatch(getCategories());\n    }\n  }, []);\n  const handleToggle = (category) => () => {\n    const currentIndex = checked.indexOf(category.id);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(category.id);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    return dispatch(setFilteredCategories(newChecked));\n  };\n\n  return (\n    <Grid container spacing={3}>\n      {categories.map((category) => (\n        <Grid item xs={3} key={category.id} className={classes.listItem}>\n          <ListItem\n            role={undefined}\n            dense\n            button\n            onClick={handleToggle(category)}\n          >\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(category.id) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': category.id }}\n              />\n            </ListItemIcon>\n            <ListItemText id={category.id} primary={category.name} />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"comments\">\n                <CommentIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport CategoryList from '../../components/CategoryList';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function CategoryPage() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <CategoryList />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NotFound from '../../components/NotFound';\nimport MainPage from './pages/Main';\n\nfunction Phrase() {\n  const match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={match.url} component={MainPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nPhrase.propTypes = {};\n\nexport default Phrase;\n","import React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useHistory } from 'react-router-dom';\nimport { signIn } from '../authService';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    formState: { errors },\n    control,\n    reset,\n  } = useForm();\n\n  const submit = async (data) => {\n    dispatch(signIn(data)).then(() => {\n      history.push('/');\n    });\n    reset({\n      email: '',\n      password: '',\n    });\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          onSubmit={(e) => {\n            e.stopPropagation();\n            handleSubmit(submit)(e);\n          }}\n          className={classes.form}\n        >\n          <Controller\n            name=\"email\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue=\"\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field }) => (\n              <TextField\n                {...field}\n                error={errors.name}\n                fullWidth\n                required\n                margin=\"normal\"\n                autoComplete=\"email\"\n                label=\"Email Address\"\n                autoFocus\n              />\n            )}\n          />\n          {errors.email && <span>Email is required</span>}\n          <Controller\n            name=\"password\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue=\"\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field }) => (\n              <TextField\n                {...field}\n                error={errors.name}\n                type=\"password\"\n                fullWidth\n                required\n                label=\"Password\"\n                margin=\"normal\"\n              />\n            )}\n          />\n          {errors.password && <span>Password is required</span>}\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport NoAuthRouter from '../components/routers/NoAuthRouter';\nimport Phrase from '../features/phrase';\nimport Category from '../features/category';\nimport SignIn from '../features/auth/sign-in';\nimport NotFound from '../components/NotFound';\n\nconst Routes = () => (\n  <Switch>\n    <Redirect exact from=\"/\" to=\"/phrases\" />\n    <NoAuthRouter path=\"/sign-in\" component={SignIn} />\n    <Route path=\"/phrases\" component={Phrase} />\n    <Route path=\"/categories\" component={Category} />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { HashRouter } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport { selectUser } from './features/auth/authSlice';\nimport Routers from './routers';\n\nfunction App() {\n  const user = useSelector(selectUser);\n\n  return (\n    <Suspense fallback={<LinearProgress />}>\n      <HashRouter>\n        <AppBar user={user} />\n        <Routers />\n      </HashRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport phraseReducer from '../features/phrase/phraseSlice';\nimport categoryReducer from '../features/category/categorySlice';\nimport authReducer from '../features/auth/authSlice';\n\nexport default configureStore({\n  reducer: {\n    phrase: phraseReducer,\n    category: categoryReducer,\n    auth: authReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}