{"version":3,"sources":["components/NotFound/index.jsx","components/routers/AuthRouter/index.jsx","features/category/components/NameInput/index.js","features/category/components/CategoryForm/index.js","features/category/components/CategoryModal/index.jsx","services/firebase.js","features/phrase/components/WordInput/index.js","features/phrase/components/ImageInput/index.jsx","features/phrase/components/AddPhrase/index.jsx","features/phrase/components/PhraseModal/index.js","features/phrase/components/AudioInput/index.jsx","features/phrase/components/PhraseItem/index.js","features/phrase/components/PhraseList/list.js","features/phrase/pages/Main/index.js","features/phrase/pages/Add/index.js","features/phrase/index.js"],"names":["NotFound","AuthRoute","Component","component","rest","user","useSelector","selectUser","render","props","to","pathname","state","from","location","NameInput","onChange","categories","selectCategories","dispatch","useDispatch","React","useState","options","setOptions","useEffect","length","getCategories","map","option","name","Autocomplete","fullWidth","freeSolo","onClose","e","disableClearable","id","renderInput","params","TextField","label","useStyles","makeStyles","theme","form","width","margin","spacing","input","padding","CategoryForm","onSubmit","category","classes","useForm","handleSubmit","errors","formState","control","setValue","reset","submit","data","a","defaultValue","description","stopPropagation","className","Grid","container","direction","justifyContent","alignItems","item","xs","rules","required","placeholder","field","ref","fieldState","error","currentTarget","value","shouldValidate","title","Button","type","variant","color","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","getModalStyle","top","left","transform","CategoryModal","open","handleClose","modalStyle","Modal","style","addCategory","limit","firebaseService","handleUploadImage","file","folder","uploadTask","fbStorage","child","put","console","log","Promise","resolve","reject","on","firebase","storage","TaskEvent","STATE_CHANGED","snapshot","getDownloadURL","then","url","WordInput","phrases","selectAllPhrases","imgPreview","ImageInput","image","setImage","fileNameRef","useRef","document","onpaste","event","items","clipboardData","originalEvent","i","indexOf","getAsFile","current","reader","FileReader","onload","target","result","readAsDataURL","Card","CardActionArea","src","height","alt","CardActions","size","onClick","files","onloadend","inputGroup","marginTop","display","flexDirection","dropdown","addBtn","AddPhrase","addPhrase","phrase","setOpen","trim","replace","imageUrl","meaning","userId","uid","multiple","getOptionLabel","find","_","Fab","PhraseModal","updatePhrase","audio","micBtn","borderRadius","AudioInput","phraseId","recordState","setRecordState","setAudio","handleStart","RecordState","START","canvasWidth","STOP","canvasHeight","onStop","audioData","controls","PAUSE","blob","text","speechSyn","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","root","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","secondary","bullet","chip","pos","marginBottom","actions","audioInput","alignSelf","PhraseItem","panel","isUpdate","handleOpen","handleDelete","phraseCategories","filter","includes","expanded","setExpanded","Accordion","isExpanded","AccordionSummary","expandIcon","Chip","Typography","AccordionDetails","Dialog","DialogTitle","DialogActions","autoFocus","flexWrap","overflow","list","flexGrow","gridList","icon","AccordionPhraseList","setPhrase","currentPhrase","removePhrase","getPhrases","updatePhraseAction","phraseItem","body","MainPage","selectOptions","selectPhrases","handleSearch","debounce","query","Pagination","count","totalPage","page","newOptions","showFirstButton","showLastButton","AddPage","addPhraseAction","Phrase","match","useRouteMatch","exact","path"],"mappings":"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","file":"static/js/11.7151267e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function NotFound() {\n  return <div>Oopss ... Not found</div>;\n}\n\nNotFound.propTypes = {};\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/auth/authSlice';\n\nexport default function AuthRoute({ component: Component, ...rest }) {\n  const user = useSelector(selectUser);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/sign-in',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getCategories } from '../../categoryService';\nimport { selectCategories } from '../../categorySlice';\n\nexport default function NameInput({ onChange, ...props }) {\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [options, setOptions] = React.useState([]);\n  React.useEffect(() => {\n    if (!categories.length) {\n      dispatch(getCategories());\n    }\n    setOptions(categories.map((option) => `${option.name}`));\n  }, [categories]);\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      freeSolo\n      onClose={(e) => onChange(e)}\n      disableClearable\n      id=\"category-input\"\n      options={options}\n      renderInput={(params) => <TextField {...params} label=\"Name\" />}\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm, Controller } from 'react-hook-form';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport NameInput from '../NameInput';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function CategoryForm({ onSubmit, category }) {\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    formState: { errors },\n    control,\n    setValue,\n    reset,\n  } = useForm();\n\n  const submit = async (data) => {\n    const defaultValue = {\n      name: '',\n      description: '',\n    };\n    onSubmit({ name: data.name, description: data.description ?? '' }, category);\n    reset(defaultValue);\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.stopPropagation();\n        handleSubmit(submit)(e);\n      }}\n      className={classes.form}\n    >\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"name\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue={category.name ?? ''}\n            placeholder=\"Name\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field: { ref, ...rest }, fieldState }) => (\n              <NameInput\n                {...rest}\n                {...fieldState}\n                error={errors.name}\n                onChange={(e) => {\n                  setValue('name', e.currentTarget.value, {\n                    shouldValidate: true,\n                  });\n                }}\n              />\n            )}\n          />\n          {errors.title && <span>Title is required</span>}\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"description\"\n            control={control}\n            defaultValue={category.description ?? ''}\n            render={({ field }) => <TextField {...field} fullWidth label=\"Description\" />}\n          />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CategoryForm from '../CategoryForm';\nimport { addCategory, getCategories } from '../../categoryService';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(${-top}%, ${-left}%)`,\n  };\n}\n\nexport default function CategoryModal({\n  category = {},\n  open = false,\n  handleClose,\n  title = 'Add new category',\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleSubmit = (data) => {\n    dispatch(addCategory(data));\n    handleClose();\n    return dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  };\n  const [modalStyle] = useState(getModalStyle);\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <h2>{title}</h2>\n        <CategoryForm category={category} onSubmit={handleSubmit} />\n      </div>\n    </Modal>\n  );\n}\n","import firebase, { fbStorage } from 'utils/firebase';\n\nconst handleUploadImage = (file, folder = 'images') => {\n  const uploadTask = fbStorage.ref().child(`${folder}/${file.name}`).put(file.data);\n  console.log(file);\n  return new Promise((resolve, reject) => {\n    uploadTask.on(\n      firebase.storage.TaskEvent.STATE_CHANGED,\n      () => {},\n      (error) => {\n        reject(error);\n      },\n      () => {\n        uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n          resolve(url);\n        });\n      },\n    );\n  });\n};\n\nexport const firebaseService = {\n  handleUploadImage,\n};\n\nexport default firebaseService;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { selectAllPhrases } from '../../phraseSlice';\n\nexport default function WordInput({ onChange, ...props }) {\n  const phrases = useSelector(selectAllPhrases);\n  const [options, setOptions] = React.useState([]);\n\n  React.useEffect(() => {\n    setOptions(phrases.map((option) => `${option.title}`));\n  }, [phrases]);\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      freeSolo\n      onClose={(e) => onChange(e)}\n      disableClearable\n      id=\"phrase-input\"\n      options={options}\n      renderInput={(params) => <TextField {...params} label=\"Title\" />}\n    />\n  );\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, CardActionArea } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  imgPreview: {\n    width: '240px',\n  },\n}));\n\nexport default function ImageInput({ onChange }) {\n  const classes = useStyles();\n  const [image, setImage] = useState(null);\n  const fileNameRef = useRef('unknown.png');\n  const handleChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      fileNameRef.current = file;\n      onChange(fileNameRef.current);\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onloadend = () => {\n        setImage(reader.result);\n      };\n    }\n  };\n\n  const removeImage = () => {\n    setImage(null);\n    fileNameRef.current = null;\n    onChange(null);\n  };\n\n  useEffect(() => {\n    document.onpaste = (event) => {\n      const { items } = event.clipboardData || event.originalEvent.clipboardData;\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i];\n        if (item.type.indexOf('image') !== -1) {\n          const file = item.getAsFile();\n          fileNameRef.current = file;\n          onChange(fileNameRef.current);\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            setImage(e.target.result);\n          };\n\n          reader.readAsDataURL(file);\n        }\n      }\n    };\n  }, []);\n\n  return (\n    <div className={classes.input}>\n      <Card className={classes.imgPreview}>\n        {image && (\n          <CardActionArea>\n            <img src={image} id=\"file\" width=\"240\" height=\"180\" alt=\"Preview\" />\n          </CardActionArea>\n        )}\n        <CardActions>\n          {image && (\n            <Button size=\"small\" color=\"primary\" onClick={removeImage}>\n              Remove\n            </Button>\n          )}\n          {!image && <input type=\"file\" id=\"file\" onChange={handleChange} />}\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport CategoryModal from 'features/category/components/CategoryModal';\nimport { selectCategories } from 'features/category/categorySlice';\nimport { selectUser } from 'features/auth/authSlice';\nimport { firebaseService } from 'services/firebase';\nimport WordInput from '../WordInput';\nimport ImageInput from '../ImageInput';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  inputGroup: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(3),\n    },\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  dropdown: {\n    width: 'calc(100% - 56px)',\n  },\n  addBtn: {\n    width: '56px',\n    marginTop: 0,\n  },\n}));\n\nexport default function AddPhrase({ addPhrase, phrase = {} }) {\n  const classes = useStyles();\n  const categories = useSelector(selectCategories);\n  const user = useSelector(selectUser);\n  const [open, setOpen] = useState(false);\n  const [image, setImage] = useState(null);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const {\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    control,\n    reset,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    const imageUrl =\n      image &&\n      (await firebaseService.handleUploadImage({\n        data: image,\n        name: `${data.title.trim().replace(/\\s/g, '_')}.png`,\n      }));\n    addPhrase(\n      {\n        ...data,\n        meaning: data.meaning || '',\n        image: imageUrl || phrase.image || '',\n        userId: user.uid,\n      },\n      phrase,\n    );\n    reset({\n      title: '',\n      meaning: phrase.meaning || '',\n      image: phrase.image || '',\n      categories: (phrase && phrase.categories) || [],\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n      <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" spacing={1}>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"title\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue={phrase.title || ''}\n            placeholder=\"Phrase\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field: { ref, ...rest }, fieldState }) => (\n              <WordInput\n                {...rest}\n                {...fieldState}\n                error={errors.title}\n                onChange={(e) => {\n                  setValue('title', e.currentTarget.value, {\n                    shouldValidate: true,\n                  });\n                }}\n              />\n            )}\n          />\n          {errors.title && <span>Title is required</span>}\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"meaning\"\n            control={control}\n            defaultValue={phrase.meaning ?? ''}\n            render={({ field }) => <TextField {...field} fullWidth label=\"Meaning\" />}\n          />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.inputGroup}>\n          <Controller\n            name=\"categories\"\n            render={({ field }) => (\n              <Autocomplete\n                {...field}\n                multiple\n                id=\"categories-input\"\n                options={categories.map((category) => category.id)}\n                getOptionLabel={(option) => {\n                  const item = categories.find((category) => category.id === option);\n                  return item && item.name;\n                }}\n                className={classes.dropdown}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Categories\" placeholder=\"Categories\" />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            control={control}\n            defaultValue={phrase.categories || []}\n          />\n          <Fab color=\"primary\" aria-label=\"add\" className={classes.addBtn} onClick={handleOpen}>\n            <AddIcon />\n          </Fab>\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <ImageInput onChange={(value) => setImage(value)} />\n        </Grid>\n\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            {' '}\n            Submit{' '}\n          </Button>\n        </Grid>\n      </Grid>\n      <CategoryModal open={open} handleClose={handleClose} />\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport AddPhrase from '../AddPhrase';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(${-top}%, ${-left}%)`,\n  };\n}\n\nexport default function PhraseModal({\n  updatePhrase,\n  phrase = {},\n  open = false,\n  handleClose,\n}) {\n  const classes = useStyles();\n\n  const [modalStyle] = useState(getModalStyle);\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <AddPhrase addPhrase={updatePhrase} phrase={phrase} />\n      </div>\n    </Modal>\n  );\n}\n","/* eslint-disable jsx-a11y/media-has-caption */\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport StopIcon from '@material-ui/icons/Stop';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nimport firebase, { fbStorage } from 'utils/firebase';\n\nconst useStyles = makeStyles(() => ({\n  input: {\n    width: '100%',\n    display: 'flex',\n  },\n  audio: {\n    height: '15px',\n  },\n  micBtn: {\n    borderRadius: '50%',\n    width: '40px',\n    height: '40px',\n  },\n}));\n\nexport default function AudioInput({ userId, phraseId }) {\n  const classes = useStyles();\n  const [recordState, setRecordState] = useState(null);\n  const [audio, setAudio] = useState(null);\n  const handleStart = () => {\n    setAudio(null);\n    setRecordState(RecordState.START);\n  };\n  const handleStop = () => {\n    setRecordState(RecordState.STOP);\n  };\n  const handlePause = () => {\n    setRecordState(RecordState.PAUSE);\n  };\n\n  const onStop = (audioData) => {\n    setAudio(audioData);\n    console.log('audioData', audioData);\n  };\n\n  const uploadAudio = () => {\n    const uploadTask = fbStorage.ref().child(`audios/${userId}/${phraseId}.wav`).put(audio.blob);\n\n    uploadTask.on(\n      firebase.storage.TaskEvent.STATE_CHANGED,\n      () => {},\n      (error) => {\n        throw error;\n      },\n      () => {\n        uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n          console.log('uploaded', url);\n        });\n      },\n    );\n  };\n\n  return (\n    <div className={classes.input}>\n      <AudioReactRecorder\n        canvasWidth={recordState !== RecordState.STOP ? '100px' : '0px'}\n        canvasHeight={recordState !== RecordState.STOP ? '20px' : '0px'}\n        state={recordState}\n        onStop={onStop}\n      />\n      {audio && (\n        <audio controls className={classes.audio}>\n          <source src={audio.url} />\n        </audio>\n      )}\n      {(recordState === RecordState.STOP || !recordState) && (\n        <button type=\"button\" className=\"micBtn\" onClick={handleStart}>\n          <MicIcon />\n        </button>\n      )}\n      {recordState === RecordState.START && (\n        <button type=\"button\" className=\"micBtn\" onClick={handlePause}>\n          <PauseCircleOutlineIcon />\n        </button>\n      )}\n      {recordState === RecordState.PAUSE && (\n        <button type=\"button\" className=\"micBtn\" onClick={handleStart}>\n          <PlayArrowIcon />\n        </button>\n      )}\n      {recordState !== RecordState.STOP && (\n        <button type=\"button\" className=\"micBtn\" onClick={handleStop}>\n          <StopIcon />\n        </button>\n      )}\n      {audio && userId && phraseId && (\n        <button type=\"button\" className=\"micBtn\" onClick={uploadAudio}>\n          <CloudUploadIcon />\n        </button>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport { AccordionSummary } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Accordion from '@material-ui/core/Accordion';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'features/auth/authSlice';\nimport AudioInput from '../AudioInput';\n\nasync function speak(text) {\n  const speechSyn = new SpeechSynthesisUtterance(text);\n  speechSyn.lang = 'en-US';\n  return window.speechSynthesis.speak(speechSyn);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  chip: {\n    padding: '5px 20px 0px 20px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  actions: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n  },\n  audioInput: {\n    alignSelf: 'flex-end',\n  },\n}));\n\nexport default function PhraseItem({ phrase, isUpdate, categories, handleOpen, handleDelete }) {\n  const classes = useStyles();\n  const user = useSelector(selectUser);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const phraseCategories = categories.filter(\n    (item) => phrase.categories && phrase.categories.includes(item.id),\n  );\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n    <Accordion\n      expanded={expanded === 'panel1'}\n      onChange={handleChange('panel1')}\n      className={classes.root}\n    >\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1bh-content\"\n        id=\"panel1bh-header\"\n      >\n        <div className={classes.heading}>\n          {phraseCategories.length\n            ? phraseCategories.map((item) => (\n                <Chip key={item.id} label={item.name} color=\"primary\" />\n              ))\n            : 'Word of the Day'}\n        </div>\n        <Typography className={classes.secondaryHeading}>{phrase.title}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        {phrase.image && <img src={phrase.image} alt={phrase.title} width=\"360\" height=\"240\" />}\n        <div className=\"content\">\n          <Typography>{phrase.meaning}</Typography>\n        </div>\n        <div className={classes.actions}>\n          <CardActions>\n            <Button size=\"small\" type=\"button\" onClick={() => speak(phrase.title)}>\n              <VolumeUpIcon />\n            </Button>\n            {isUpdate && (\n              <Button size=\"small\" type=\"button\" onClick={() => handleOpen(phrase)}>\n                Edit\n              </Button>\n            )}\n            {isUpdate && (\n              <Button size=\"small\" type=\"button\" onClick={handleClickOpen}>\n                Delete\n              </Button>\n            )}\n          </CardActions>\n          <div className={classes.audioInput}>\n            <AudioInput phraseId={phrase.id} userId={user.uid} />\n          </div>\n        </div>\n      </AccordionDetails>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Are you sure to remove this phrase?</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={() => handleDelete(phrase)} color=\"secondary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Accordion>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getCategories } from 'features/category/categoryService';\nimport { selectCategories } from 'features/category/categorySlice';\nimport { selectUser } from 'features/auth/authSlice';\n\nimport { removePhrase, getPhrases, updatePhrase } from '../../phraseService';\nimport PhraseModal from '../PhraseModal';\nimport PhraseItem from '../PhraseItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  list: {\n    flexGrow: 1,\n  },\n  gridList: {},\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\nexport default function AccordionPhraseList({ phrases, options }) {\n  const user = useSelector(selectUser);\n  const categories = useSelector(selectCategories);\n  const [phrase, setPhrase] = useState();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = (currentPhrase) => {\n    setPhrase(currentPhrase);\n    setOpen(true);\n  };\n\n  const handleDelete = async (currentPhrase) => {\n    await dispatch(removePhrase(currentPhrase.id));\n    return dispatch(getPhrases(options));\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updatePhraseAction = async (data, currentPhrase) => {\n    await dispatch(\n      updatePhrase({\n        ...currentPhrase,\n        ...data,\n      }),\n    );\n    setOpen(false);\n    return dispatch(getPhrases(options));\n  };\n  useEffect(() => {\n    dispatch(getPhrases(options));\n    dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      {phrases.map((phraseItem) => (\n        <PhraseItem\n          phrase={phraseItem}\n          isUpdate={user && (user.uid === phraseItem.userId || !phraseItem.userId)}\n          categories={categories}\n          key={phraseItem.id}\n          handleOpen={handleOpen}\n          handleDelete={handleDelete}\n        />\n      ))}\n      <PhraseModal\n        open={open}\n        handleClose={handleClose}\n        phrase={phrase}\n        updatePhrase={updatePhraseAction}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AccordionPhraseList from 'features/phrase/components/PhraseList/list';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Pagination } from '@material-ui/lab';\nimport { selectOptions, selectPhrases, setOptions } from 'features/phrase/phraseSlice';\nimport { getPhrases } from 'features/phrase/phraseService';\nimport { TextField } from '@material-ui/core';\nimport debounce from 'lodash.debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const options = useSelector(selectOptions);\n  const phrases = useSelector(selectPhrases);\n  const handleChange = (_, value) => {\n    const newOptions = {\n      ...options,\n      page: value,\n    };\n    dispatch(setOptions(newOptions));\n  };\n\n  const handleSearch = debounce((event) => {\n    dispatch(setOptions({ ...options, query: event.target.value }));\n  }, 500);\n\n  useEffect(() => {\n    dispatch(getPhrases(options));\n  }, [options]);\n\n  return (\n    <Grid container className={classes.body}>\n      <TextField id=\"search\" label=\"Search\" onChange={handleSearch} />\n      <Pagination\n        count={options.totalPage}\n        page={options.page}\n        onChange={handleChange}\n        showFirstButton\n        showLastButton\n      />\n      <AccordionPhraseList phrases={phrases} options={options} />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AccordionPhraseList from 'features/phrase/components/PhraseList/list';\nimport { selectOptions, selectPhrases } from 'features/phrase/phraseSlice';\nimport AddPhrase from '../../components/AddPhrase';\nimport { addPhrase, getPhrases } from '../../phraseService';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function AddPage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addPhraseAction = async (data) => {\n    dispatch(addPhrase(data));\n    dispatch(getPhrases({ limit: 50, page: 1 }));\n  };\n  const options = useSelector(selectOptions);\n  const phrases = useSelector(selectPhrases);\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"flex-start\" className={classes.body}>\n      <Grid container item xs={12} className={classes.form}>\n        <AddPhrase addPhrase={addPhraseAction} />\n      </Grid>\n      <Grid container item xs={12} className={classes.form}>\n        <AccordionPhraseList phrases={phrases} options={options} />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NotFound from '../../components/NotFound';\nimport AuthRouter from '../../components/routers/AuthRouter';\nimport MainPage from './pages/Main';\nimport AddPhrase from './pages/Add';\n\nfunction Phrase() {\n  const match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={match.url} component={MainPage} />\n      <AuthRouter path={`${match.url}/new`} component={AddPhrase} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nPhrase.propTypes = {};\n\nexport default Phrase;\n"],"sourceRoot":""}