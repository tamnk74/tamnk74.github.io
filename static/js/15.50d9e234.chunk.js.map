{"version":3,"sources":["features/cv/components/skills.jsx","features/cv/components/languages.jsx","features/cv/images/dut.jpg","features/cv/components/educations.jsx","features/cv/components/experiences.jsx","features/cv/components/projects.jsx","features/cv/components/contact.jsx","features/cv/index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","Skills","skills","classes","List","className","map","skill","ListItem","ListItemAvatar","Avatar","details","ListItemText","primary","title","secondary","detail","Typography","component","variant","inline","color","maxWidth","Languages","languages","language","name","description","uniIcon","height","educations","Box","education","Card","CardHeader","avatar","icon","src","Logo","major","school","subheader","qualification","gpa","grade","timelineItem","content","jobBlock","padding","jobTitle","marginTop","marginBottom","time","margin","project","paddingBottom","experiences","Timeline","align","experience","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","elevation","role","company","startTime","endTime","projects","CardContent","pos","join","paragraph","Project","links","link","href","target","rel","contact","Contacts","contacts","Grid","container","spacing","item","xs","sm","wrap","info","display","flexWrap","justifyContent","overflow","paddingTop","section","sectionTitle","textAlign","flexDirection","gridList","CV","useState","summary","profile","setProfile","useEffect","then","result","default","Container","GridList","GridListTile","alt","process","gutterBottom","split","line","style","marginLeft"],"mappings":"0TAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,gBAAiBH,EAAMI,QAAQC,WAAWC,WAI/B,SAASC,EAAT,GAAkC,IAAD,IAAfC,cAAe,MAAN,GAAM,EACxCC,EAAUX,IAEhB,OACE,cAACY,EAAA,EAAD,CAAMC,UAAWF,EAAQR,KAAzB,SACGO,EAAOI,KAAI,SAACC,GAAD,OACV,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,QAGHH,EAAMI,QACL,cAACC,EAAA,EAAD,CACEC,QAASN,EAAMO,MACfC,UACE,mCACGR,EAAMI,QAAQL,KAAI,SAACU,GAAD,OACjB,gCACE,cAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWF,EAAQiB,OACnBC,MAAM,cAJR,SAMGL,EAAOF,QAPZ,KASKE,EAAOA,iBAOpB,cAACJ,EAAA,EAAD,CACEC,QAASN,EAAMO,MACfC,UACE,mCACE,cAACE,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWF,EAAQiB,OACnBC,MAAM,cAJR,SAMGd,EAAMS,qBCpD3B,IAAMxB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP0B,SAAU,IACVzB,gBAAiBH,EAAMI,QAAQC,WAAWC,WAI/B,SAASuB,EAAT,GAAwC,IAAD,IAAlBC,iBAAkB,MAAN,GAAM,EAC9CrB,EAAUX,IAEhB,OACE,cAACY,EAAA,EAAD,CAAMC,UAAWF,EAAQR,KAAzB,SACG6B,EAAUlB,KAAI,SAACmB,GAAD,OACb,eAACjB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,QAGJ,cAACE,EAAA,EAAD,CACEC,QAASY,EAASC,KAClBX,UAAWU,EAASE,sB,sBC/BjB,MAA0B,gCCQnCnC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP0B,SAAU,IACVzB,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE5C4B,QAAS,CACPhC,MAAO,OACPiC,OAAQ,YAIG,SAASN,EAAT,GAAyC,IAAD,IAAnBO,kBAAmB,MAAN,GAAM,EAC/C3B,EAAUX,IAChB,OACE,cAACuC,EAAA,EAAD,UACGD,EAAWxB,KAAI,SAAC0B,GAAD,OACd,cAACC,EAAA,EAAD,CAAM5B,UAAWF,EAAQ6B,UAAzB,SACE,cAACE,EAAA,EAAD,CACEC,OACqB,QAAnBH,EAAUI,KACR,cAAC1B,EAAA,EAAD,CAAQ2B,IAAKC,EAAMjC,UAAWF,EAAQyB,UAEtC,cAAClB,EAAA,EAAD,CAAQ,aAAW,SAASL,UAAWF,EAAQyB,QAA/C,SACGI,EAAUI,OAIjBtB,MAAK,UAAKkB,EAAUO,MAAf,eAA2BP,EAAUQ,QAC1CC,UAAS,UAAKT,EAAUU,cAAf,kBAAsCV,EAAUW,IAAhD,2BAAsEX,EAAUY,MAAhF,c,mECxBfpD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP0B,SAAU,IACVzB,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE5C6C,aAAc,CACZ,YAAa,CACXC,QAAS,SAGbC,SAAU,CACRC,QAAS,QAEXC,SAAU,CACRD,QAAS,UACTE,UAAW,MACXC,aAAc,OAEhBC,KAAM,CACJC,OAAQ,UACRhC,MAAO,0BAETiC,QAAS,CACPC,cAAe,YAIJ,SAAStD,EAAT,GAAuC,IAAD,IAApBuD,mBAAoB,MAAN,GAAM,EAC7CrD,EAAUX,IAChB,OACE,cAACiE,EAAA,EAAD,CAAUC,MAAM,OAAhB,SACGF,EAAYlD,KAAI,SAACqD,GAAD,OACf,eAACC,EAAA,EAAD,CAAcvD,UAAWF,EAAQ0C,aAAjC,UACE,eAACgB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAa3C,QAAQ,WAAWE,MAAOsC,EAAWtC,QAClD,cAAC0C,EAAA,EAAD,OAEF,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOC,UAAW,EAAG7D,UAAWF,EAAQ4C,SAAxC,UACE,qBAAI1C,UAAWF,EAAQ8C,SAAvB,UACGU,EAAWQ,KADd,OACwBR,EAAWS,WAEnC,oBAAG/D,UAAWF,EAAQiD,KAAtB,UACGO,EAAWU,UADd,MAC4BV,EAAWW,SAAW,SAEjDX,EAAWY,SAASjE,KAAI,SAACgD,GAAD,OACvB,cAACrB,EAAA,EAAD,CAAM5B,UAAWF,EAAQmD,QAASnC,QAAQ,WAA1C,SACE,eAACqD,EAAA,EAAD,WACE,cAACvD,EAAA,EAAD,CACEE,QAAQ,KACRD,UAAU,KACVb,UAAWF,EAAQmD,QAHrB,SAKGA,EAAQ5B,OAEX,eAACT,EAAA,EAAD,CAAYZ,UAAWF,EAAQsE,IAAKpD,MAAM,gBAA1C,UACE,yCACCiC,EAAQpD,OAAOwE,KAAK,SAEvB,eAACzD,EAAA,EAAD,CAAY0D,WAAS,EAArB,UACE,+CADF,IACyBrB,EAAQ3B,eAEjC,eAACV,EAAA,EAAD,CAAY0D,WAAS,EAArB,UACE,iDADF,IAC2BrB,EAAQa,6BCpEvD,IAAM3E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACPC,gBAAiBH,EAAMI,QAAQC,WAAWC,WAI/B,SAAS4E,EAAT,GAAqC,IAAD,IAAjBL,gBAAiB,MAAN,GAAM,EAC3CpE,EAAUX,IAEhB,OACE,cAACY,EAAA,EAAD,CAAMC,UAAWF,EAAQR,KAAzB,SACG4E,EAASjE,KAAI,SAACgD,GAAD,OACZ,eAAC9C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,QAGJ,cAACE,EAAA,EAAD,CACEC,QAASyC,EAAQ5B,KACjBX,UACE,qCACGuC,EAAQ3B,YACR2B,EAAQuB,MAAMvE,KAAI,SAACwE,GAAD,OACjB,8BACE,mBAAGC,KAAMD,EAAME,OAAO,SAASC,IAAI,aAAnC,SACGH,cAdf,Y,sBCfFtF,EAAYC,aAAW,iBAAO,CAClCyF,QAAS,CACPhC,UAAW,YAIA,SAASiC,EAAT,GAAsC,IAAD,IAAjBC,gBAAiB,MAAN,GAAM,EAC5CjF,EAAUX,IAEhB,OACE,cAAC6F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGlF,UAAWF,EAAQ+E,QAA/C,SACGE,EAAS9E,KAAI,SAAC4E,GAAD,OACZ,cAACG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACL,EAAA,EAAD,CAAMC,WAAS,EAACK,KAAK,SAASJ,QAAS,EAAvC,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACE,cAAC9E,EAAA,EAAD,UACE,cAAC,IAAD,QAGJ,cAAC2E,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAAb,SACE,eAAC7E,EAAA,EAAD,WACE,8BAAIsE,EAAQxD,KAAZ,QACCwD,EAAQU,oBCXzB,IAAMpG,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJkG,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,SACVC,WAAY,OACZpG,gBAAiBH,EAAMI,QAAQC,WAAWC,OAE5CkG,QAAS,CACPrE,OAAQ,kBACRjC,MAAO,mBAETuG,aAAc,CACZ9C,OAAQ,oBAEVlB,OAAQ,CACNvC,MAAOF,EAAM6F,QAAQ,IACrB1D,OAAQnC,EAAM6F,QAAQ,KAExBzE,MAAO,CACLsF,UAAW,SACXP,QAAS,OACTQ,cAAe,SACfN,eAAgB,UAElBO,SAAU,CACRtD,QAAS,YAIE,SAASuD,IACtB,IAAMpG,EAAUX,IAChB,EAA8BgH,mBAAS,CACrCC,QAAS,GACTrB,SAAU,GACV5D,UAAW,GACXtB,OAAQ,GACR4B,WAAY,GACZ0B,YAAa,GACbe,SAAU,KAPZ,mBAAOmC,EAAP,KAAgBC,EAAhB,KAeA,OANAC,qBAAU,WACR,+BAAiBC,MAAK,SAACC,GACrBH,EAAWG,EAAOC,cAEnB,IAGD,cAACC,EAAA,EAAD,CAAW3G,UAAWF,EAAQR,KAA9B,SACE,eAACsH,EAAA,EAAD,CAAU5G,UAAU,SAApB,UACE,eAAC6G,EAAA,EAAD,CAAmC7G,UAAWF,EAAQ+F,QAAtD,UACE,eAACb,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAf,SACE,cAAChF,EAAA,EAAD,CACEL,UAAWF,EAAQgC,OACnBgF,IAAKT,EAAQhF,KACbW,IAAK+E,GAAyBV,EAAQvE,WAG1C,cAACkD,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,EAAGrF,UAAWF,EAAQW,MAArC,SACE,eAAC0D,EAAA,EAAD,WACE,cAACvD,EAAA,EAAD,CAAYoG,cAAY,EAAClG,QAAQ,KAAKD,UAAU,KAAhD,SACGwF,EAAQhF,OAEX,cAACT,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBH,UAAU,IAA5D,SACGwF,EAAQ5F,gBAKjB,cAACuE,EAAA,EAAD,CAAMC,WAAS,MApBEoB,EAAQvE,QAsB3B,eAAC+E,EAAA,EAAD,CAA2B7G,UAAWF,EAAQ+F,QAA9C,UACE,oBAAI7F,UAAWF,EAAQgG,aAAvB,oBACA,cAAClE,EAAA,EAAD,UACGyE,EAAQD,QAAQa,MAAM,MAAMhH,KAAI,SAACiH,GAAD,OAC/B,cAACtG,EAAA,EAAD,CAAYuG,MAAO,CAAEC,WAAY,OAAjC,SAA2CF,WAJ/B,UAQlB,eAACL,EAAA,EAAD,CAA4B7G,UAAWF,EAAQ+F,QAA/C,UACE,oBAAI7F,UAAWF,EAAQgG,aAAvB,qBACA,cAAChB,EAAD,CAAUC,SAAUsB,EAAQtB,aAFZ,WAIlB,eAAC8B,EAAA,EAAD,CAA6B7G,UAAWF,EAAQ+F,QAAhD,UACE,oBAAIhF,UAAU,KAAKb,UAAWF,EAAQgG,aAAtC,yBAGA,cAAC,EAAD,CAAa3C,YAAakD,EAAQlD,gBAJlB,YAMlB,eAAC0D,EAAA,EAAD,CAAkC7G,UAAWF,EAAQ+F,QAArD,UACE,oBAAIhF,UAAU,KAAKb,UAAWF,EAAQgG,aAAtC,2BAGA,cAACvB,EAAD,CAAUL,SAAUmC,EAAQnC,aAJZ,iBAMlB,eAAC2C,EAAA,EAAD,CAA2B7G,UAAWF,EAAQ+F,QAA9C,UACE,oBAAIhF,UAAU,KAAKb,UAAWF,EAAQgG,aAAtC,kCAGA,cAAClG,EAAD,CAAQC,OAAQwG,EAAQxG,WAJR,UAMlB,eAACgH,EAAA,EAAD,CAA8B7G,UAAWF,EAAQ+F,QAAjD,UACE,oBAAIhF,UAAU,KAAKb,UAAWF,EAAQgG,aAAtC,uBAGA,cAAC,EAAD,CAAYrE,WAAY4E,EAAQ5E,eAJhB,aAMlB,eAACoF,EAAA,EAAD,CAA8B7G,UAAWF,EAAQ+F,QAAjD,UACE,oBAAIhF,UAAU,KAAKb,UAAWF,EAAQgG,aAAtC,uBAGA,cAAC5E,EAAD,CAAWC,UAAWkF,EAAQlF,cAJd","file":"static/js/15.50d9e234.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function Skills({ skills = [] }) {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      {skills.map((skill) => (\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <ImageIcon />\n            </Avatar>\n          </ListItemAvatar>\n          {skill.details ? (\n            <ListItemText\n              primary={skill.title}\n              secondary={\n                <>\n                  {skill.details.map((detail) => (\n                    <div>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        className={classes.inline}\n                        color=\"textPrimary\"\n                      >\n                        {detail.title}\n                      </Typography>\n                      : {detail.detail}\n                    </div>\n                  ))}\n                </>\n              }\n            />\n          ) : (\n            <ListItemText\n              primary={skill.title}\n              secondary={\n                <>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    {skill.detail}\n                  </Typography>\n                </>\n              }\n            />\n          )}\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function Languages({ languages = [] }) {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      {languages.map((language) => (\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <ImageIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={language.name}\n            secondary={language.description}\n          />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/dut.57e70e11.jpg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Box } from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Card from '@material-ui/core/Card';\nimport Logo from '../images/dut.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  uniIcon: {\n    width: '52px',\n    height: '52px',\n  },\n}));\n\nexport default function Languages({ educations = [] }) {\n  const classes = useStyles();\n  return (\n    <Box>\n      {educations.map((education) => (\n        <Card className={classes.education}>\n          <CardHeader\n            avatar={\n              education.icon === 'DUT' ? (\n                <Avatar src={Logo} className={classes.uniIcon} />\n              ) : (\n                <Avatar aria-label=\"recipe\" className={classes.uniIcon}>\n                  {education.icon}\n                </Avatar>\n              )\n            }\n            title={`${education.major} at ${education.school}`}\n            subheader={`${education.qualification}. GPA: ${education.gpa}. Degree grade: ${education.grade} `}\n          />\n        </Card>\n      ))}\n    </Box>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Timeline from '@material-ui/lab/Timeline';\nimport TimelineItem from '@material-ui/lab/TimelineItem';\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\nimport TimelineContent from '@material-ui/lab/TimelineContent';\nimport TimelineDot from '@material-ui/lab/TimelineDot';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  timelineItem: {\n    '&::before': {\n      content: 'none',\n    },\n  },\n  jobBlock: {\n    padding: '15px',\n  },\n  jobTitle: {\n    padding: '0px 0px',\n    marginTop: '0px',\n    marginBottom: '0px',\n  },\n  time: {\n    margin: '5px 0px',\n    color: 'rgb(175 170 170 / 87%)',\n  },\n  project: {\n    paddingBottom: '10px',\n  },\n}));\n\nexport default function Skills({ experiences = [] }) {\n  const classes = useStyles();\n  return (\n    <Timeline align=\"left\">\n      {experiences.map((experience) => (\n        <TimelineItem className={classes.timelineItem}>\n          <TimelineSeparator>\n            <TimelineDot variant=\"outlined\" color={experience.color} />\n            <TimelineConnector />\n          </TimelineSeparator>\n          <TimelineContent>\n            <Paper elevation={3} className={classes.jobBlock}>\n              <h3 className={classes.jobTitle}>\n                {experience.role} at {experience.company}\n              </h3>\n              <p className={classes.time}>\n                {experience.startTime} - {experience.endTime || 'Now'}\n              </p>\n              {experience.projects.map((project) => (\n                <Card className={classes.project} variant=\"outlined\">\n                  <CardContent>\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h2\"\n                      className={classes.project}\n                    >\n                      {project.name}\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                      <b>Skills: </b>\n                      {project.skills.join(', ')}\n                    </Typography>\n                    <Typography paragraph>\n                      <b>Descriptions: </b> {project.description}\n                    </Typography>\n                    <Typography paragraph>\n                      <b>Responsibility: </b> {project.role}\n                    </Typography>\n                  </CardContent>\n                </Card>\n              ))}\n            </Paper>\n          </TimelineContent>\n        </TimelineItem>\n      ))}\n    </Timeline>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function Project({ projects = [] }) {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      {projects.map((project) => (\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <ImageIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            primary={project.name}\n            secondary={\n              <>\n                {project.description}\n                {project.links.map((link) => (\n                  <div>\n                    <a href={link} target=\"_blank\" rel=\"noreferrer\">\n                      {link}\n                    </a>\n                  </div>\n                ))}\n              </>\n            }\n          />\n          )\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\n\nconst useStyles = makeStyles(() => ({\n  contact: {\n    marginTop: '10px',\n  },\n}));\n\nexport default function Contacts({ contacts = [] }) {\n  const classes = useStyles();\n\n  return (\n    <Grid container spacing={3} className={classes.contact}>\n      {contacts.map((contact) => (\n        <Grid item xs={12} sm={6}>\n          <Grid container wrap=\"nowrap\" spacing={2}>\n            <Grid item>\n              <Avatar>\n                <ContactMailIcon />\n              </Avatar>\n            </Grid>\n            <Grid item xs>\n              <ListItemText>\n                <b>{contact.name}: </b>\n                {contact.info}\n              </ListItemText>\n            </Grid>\n          </Grid>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Card } from '@material-ui/core';\nimport Skills from './components/skills';\nimport Languages from './components/languages';\nimport Educations from './components/educations';\nimport Experiences from './components/experiences';\nimport Projects from './components/projects';\nimport Contacts from './components/contact';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    paddingTop: '20px',\n    backgroundColor: theme.palette.background.paper,\n  },\n  section: {\n    height: 'auto !important',\n    width: '100% !important',\n  },\n  sectionTitle: {\n    margin: '10px 0px 5px 0px',\n  },\n  avatar: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n  },\n  title: {\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  gridList: {\n    padding: '15px',\n  },\n}));\n\nexport default function CV() {\n  const classes = useStyles();\n  const [profile, setProfile] = useState({\n    summary: '',\n    contacts: [],\n    languages: [],\n    skills: [],\n    educations: [],\n    experiences: [],\n    projects: [],\n  });\n  useEffect(() => {\n    import('./data').then((result) => {\n      setProfile(result.default);\n    });\n  }, []);\n\n  return (\n    <Container className={classes.root}>\n      <GridList className=\"header\">\n        <GridListTile key={profile.avatar} className={classes.section}>\n          <Grid container>\n            <Grid item sm={4}>\n              <Avatar\n                className={classes.avatar}\n                alt={profile.name}\n                src={process.env.PUBLIC_URL + profile.avatar}\n              />\n            </Grid>\n            <Grid item sm={8} className={classes.title}>\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {profile.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {profile.title}\n                </Typography>\n              </CardContent>\n            </Grid>\n          </Grid>\n          <Grid container />\n        </GridListTile>\n        <GridListTile key=\"sumary\" className={classes.section}>\n          <h2 className={classes.sectionTitle}>SUMARY</h2>\n          <Card>\n            {profile.summary.split('\\n').map((line) => (\n              <Typography style={{ marginLeft: '5px' }}>{line}</Typography>\n            ))}\n          </Card>\n        </GridListTile>\n        <GridListTile key=\"contact\" className={classes.section}>\n          <h2 className={classes.sectionTitle}>CONTACT</h2>\n          <Contacts contacts={profile.contacts} />\n        </GridListTile>\n        <GridListTile key=\"timeline\" className={classes.section}>\n          <h2 component=\"h1\" className={classes.sectionTitle}>\n            EXPERIENCES\n          </h2>\n          <Experiences experiences={profile.experiences} />\n        </GridListTile>\n        <GridListTile key=\"side_projects\" className={classes.section}>\n          <h2 component=\"h1\" className={classes.sectionTitle}>\n            SIDE PROJECTS\n          </h2>\n          <Projects projects={profile.projects} />\n        </GridListTile>\n        <GridListTile key=\"skills\" className={classes.section}>\n          <h2 component=\"h1\" className={classes.sectionTitle}>\n            SKILLS AND EXPERTISE\n          </h2>\n          <Skills skills={profile.skills} />\n        </GridListTile>\n        <GridListTile key=\"education\" className={classes.section}>\n          <h2 component=\"h1\" className={classes.sectionTitle}>\n            EDUCATION\n          </h2>\n          <Educations educations={profile.educations} />\n        </GridListTile>\n        <GridListTile key=\"languages\" className={classes.section}>\n          <h2 component=\"h1\" className={classes.sectionTitle}>\n            LANGUAGES\n          </h2>\n          <Languages languages={profile.languages} />\n        </GridListTile>\n      </GridList>\n    </Container>\n  );\n}\n"],"sourceRoot":""}