{"version":3,"sources":["components/AppBar/index.js","components/NotFound/index.jsx","features/phrase/components/PhraseItem/index.js","utils/firebase.js","features/phrase/phraseService.js","features/category/categoryService.js","features/phrase/phraseSlice.js","features/category/categorySlice.js","features/category/components/NameInput/index.js","features/category/components/CategoryForm/index.js","features/category/components/CategoryModal/index.jsx","features/phrase/components/WordInput/index.js","features/phrase/components/AddPhrase/index.jsx","features/phrase/components/PhraseModal/index.js","features/phrase/components/PhraseList/index.js","features/phrase/pages/Main/index.js","features/phrase/pages/Add/index.js","features/phrase/index.js","routers/index.jsx","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","SearchAppBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","mobileMenuId","renderMobileMenu","IconButton","aria-label","to","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","NotFound","text","a","speechSyn","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","minWidth","bullet","margin","transform","chip","fontSize","pos","marginBottom","PhraseItem","phrase","categories","handleOpen","handleDelete","setOpen","handleClose","phraseCategories","filter","item","includes","Grid","Card","CardContent","length","map","Chip","label","name","component","meaning","CardActions","Button","size","type","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogActions","autoFocus","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","getPhrases","createAsyncThunk","options","rejectWithValue","db","collection","orderBy","limit","get","then","querySnapshot","docs","data","phrases","addPhrase","add","createdAt","Date","toISOString","res","updatePhrase","doc","set","merge","removePhrase","phraseId","delete","getCategories","addCategory","updateCategory","removeCategory","categoryId","phraseSlice","createSlice","initialState","loading","items","currentRequestId","undefined","error","reducers","extraReducers","pending","state","action","meta","requestId","fulfilled","push","payload","rejected","splice","selectPhrases","categorySlice","selectCategories","category","NameInput","onChange","props","useSelector","dispatch","useDispatch","setOptions","useEffect","option","Autocomplete","fullWidth","freeSolo","e","disableClearable","renderInput","params","TextField","form","CategoryForm","onSubmit","useForm","handleSubmit","errors","formState","control","setValue","reset","submit","description","stopPropagation","container","direction","justify","xs","rules","required","defaultValue","render","field","rest","ref","fieldState","value","shouldValidate","paper","background","border","boxShadow","shadows","getModalStyle","top","left","CategoryModal","modalStyle","Modal","style","WordInput","inputGroup","marginTop","flexDirection","dropdown","addBtn","AddPhrase","multiple","getOptionLabel","find","_","Fab","PhraseModal","flexWrap","overflow","list","gridList","icon","PhraseList","setPhrase","currentPhrase","startAt","updatePhraseAction","phraseItem","body","MainPage","addPhraseAction","Phrase","match","useRouteMatch","exact","path","url","Routes","from","App","fallback","LinearProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","phraseReducer","categoryReducer","ReactDOM","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3dc1ce75.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Link to=\"/phrases/new\" color=\"inherit\">\n            <AddIcon />\n          </Link>\n        </IconButton>\n        <p>New Phrase</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <Link to=\"/\" color=\"inherit\">\n              <MenuIcon />\n            </Link>\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Material-UI\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Link to=\"/phrases/new\" color=\"inherit\">\n                <AddIcon />\n              </Link>\n            </IconButton>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NotFound() {\n  return <div>Oopss ... Not found</div>;\n}\n\nNotFound.propTypes = {};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Chip from '@material-ui/core/Chip';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nasync function speak(text) {\n  const speechSyn = new SpeechSynthesisUtterance(text);\n  speechSyn.lang = 'en-US';\n  return window.speechSynthesis.speak(speechSyn);\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  chip: {\n    padding: '5px 20px 0px 20px',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function PhraseItem({\n  phrase,\n  categories,\n  handleOpen,\n  handleDelete,\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const phraseCategories = categories.filter(\n    (item) => phrase.categories && phrase.categories.includes(item.id),\n  );\n  return (\n    <Grid item>\n      <Card className={classes.root}>\n        <CardContent className={classes.chip}>\n          {phraseCategories.length\n            ? phraseCategories.map((item) => (\n                <Chip key={item.id} label={item.name} color=\"primary\" />\n              ))\n            : 'Word of the Day'}\n        </CardContent>\n        <CardContent>\n          <Typography variant=\"h5\" component=\"h2\">\n            {phrase.title}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\" />\n          <Typography variant=\"body2\" component=\"p\">\n            {phrase.meaning}\n            <br />\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button\n            size=\"small\"\n            type=\"button\"\n            onClick={() => speak(phrase.title)}\n          >\n            <VolumeUpIcon />\n          </Button>\n          <Button size=\"small\" type=\"button\" onClick={() => handleOpen(phrase)}>\n            Edit\n          </Button>\n          <Button size=\"small\" type=\"button\" onClick={handleClickOpen}>\n            Delete\n          </Button>\n        </CardActions>\n      </Card>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          Are you sure to remove this phrase?\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button\n            onClick={() => handleDelete(phrase)}\n            color=\"secondary\"\n            autoFocus\n          >\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Grid>\n  );\n}\n","import firebase from 'firebase';\nimport 'firebase/firestore';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyAqaF-6pe6wxykLHyB7CkG4TxYXsu3a6zg',\n  authDomain: 'my-spa-1ae0e.firebaseapp.com',\n  databaseURL: 'https://my-spa-1ae0e.firebaseio.com',\n  projectId: 'my-spa-1ae0e',\n  storageBucket: 'my-spa-1ae0e.appspot.com',\n  messagingSenderId: '535290719088',\n  appId: '1:535290719088:web:1cf171d8d605a11cadfdb5',\n});\n\nexport default firebase.firestore();\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport db from '../../utils/firebase';\n\nexport const getPhrases = createAsyncThunk(\n  'phrase/getList',\n  async (options = {}, { rejectWithValue }) => {\n    try {\n      const phrases = await db\n        .collection('phrases')\n        .orderBy('createdAt', 'desc')\n        .limit(options.limit || 100)\n        // .startAt(options.startAt || 0)\n        .get()\n        .then((querySnapshot) =>\n          querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n        );\n      return phrases;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addPhrase = createAsyncThunk(\n  'phrase/create',\n  async (data, { rejectWithValue }) => {\n    try {\n      const phrase = await db.collection('phrases').add({\n        ...data,\n        createdAt: new Date().toISOString(),\n      });\n      const res = await phrase.get();\n      return {\n        id: phrase.id,\n        ...res.data(),\n      };\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const updatePhrase = createAsyncThunk(\n  'phrase/update',\n  async (data, { rejectWithValue }) => {\n    try {\n      await db.collection('phrases').doc(data.id).set(data, { merge: true });\n      return data.id;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const removePhrase = createAsyncThunk(\n  'phrase/remove',\n  async (phraseId, { rejectWithValue }) => {\n    try {\n      await db.collection('phrases').doc(phraseId).delete();\n      return phraseId;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport db from '../../utils/firebase';\n\nexport const findCategory = async () => {\n  try {\n    return db\n      .collection('categories')\n      .orderBy('createdAt', 'desc')\n      .limit(20)\n      .get()\n      .then((querySnapshot) =>\n        querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n      );\n  } catch (err) {\n    return [];\n  }\n};\n\nexport const getCategories = createAsyncThunk(\n  'category/list',\n  async (options, { rejectWithValue }) => {\n    try {\n      const categories = await db\n        .collection('categories')\n        .orderBy('createdAt', 'desc')\n        .limit(options.limit || 100)\n        .get()\n        .then((querySnapshot) =>\n          querySnapshot.docs.map((item) => ({ ...item.data(), id: item.id })),\n        );\n      return categories;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const addCategory = createAsyncThunk(\n  'category/create',\n  async (data, { rejectWithValue }) => {\n    try {\n      const phrase = await db.collection('categories').add({\n        ...data,\n        createdAt: new Date().toISOString(),\n      });\n      const res = await phrase.get();\n      return {\n        id: phrase.id,\n        ...res.data(),\n      };\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const updateCategory = createAsyncThunk(\n  'category/update',\n  async (data, { rejectWithValue }) => {\n    try {\n      await db.collection('categories').doc(data.id).set(data, { merge: true });\n      return data.id;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n\nexport const removeCategory = createAsyncThunk(\n  'category/remove',\n  async (categoryId, { rejectWithValue }) => {\n    try {\n      await db.collection('categories').doc(categoryId).delete();\n      return categoryId;\n    } catch (err) {\n      return rejectWithValue(err);\n    }\n  },\n);\n","/* eslint no-param-reassign: \"off\" */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  addPhrase,\n  getPhrases,\n  updatePhrase,\n  removePhrase,\n} from './phraseService';\n\nexport const phraseSlice = createSlice({\n  name: 'phrase',\n  initialState: {\n    loading: 'idle',\n    items: [],\n    currentRequestId: undefined,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [addPhrase.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [addPhrase.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [addPhrase.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [getPhrases.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [getPhrases.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.splice(0);\n        state.items.push(...action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [getPhrases.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [updatePhrase.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.phraseId,\n      );\n    },\n    [removePhrase.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.phraseId,\n      );\n    },\n  },\n});\n\nexport const selectPhrases = (state) => state.phrase.items;\n\nexport default phraseSlice.reducer;\n","/* eslint no-param-reassign: \"off\" */\n\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  addCategory,\n  getCategories,\n  updateCategory,\n  removeCategory,\n} from './categoryService';\n\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState: {\n    loading: 'idle',\n    items: [],\n    currentRequestId: undefined,\n    error: null,\n  },\n  reducers: {},\n  extraReducers: {\n    [addCategory.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [addCategory.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.push(action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [addCategory.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [getCategories.pending]: (state, action) => {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n        state.currentRequestId = action.meta.requestId;\n      }\n    },\n    [getCategories.fulfilled]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.items.splice(0);\n        state.items.push(...action.payload);\n        state.currentRequestId = undefined;\n      }\n    },\n    [getCategories.rejected]: (state, action) => {\n      const { requestId } = action.meta;\n      if (state.loading === 'pending' && state.currentRequestId === requestId) {\n        state.loading = 'idle';\n        state.error = action.error;\n        state.currentRequestId = undefined;\n      }\n    },\n    [updateCategory.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.categoryId,\n      );\n    },\n    [removeCategory.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.categoryId,\n      );\n    },\n  },\n});\n\nexport const selectCategories = (state) => state.category.items;\n\nexport default categorySlice.reducer;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getCategories } from '../../categoryService';\nimport { selectCategories } from '../../categorySlice';\n\nexport default function NameInput({ onChange, ...props }) {\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [options, setOptions] = React.useState([]);\n  React.useEffect(() => {\n    if (!categories.length) {\n      dispatch(getCategories());\n    }\n    setOptions(categories.map((option) => `${option.name}`));\n  }, [categories]);\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      freeSolo\n      onClose={(e) => onChange(e)}\n      disableClearable\n      id=\"category-input\"\n      options={options}\n      renderInput={(params) => <TextField {...params} label=\"Name\" />}\n    />\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm, Controller } from 'react-hook-form';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { TextField } from '@material-ui/core';\nimport NameInput from '../NameInput';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function CategoryForm({ onSubmit, category }) {\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    formState: { errors },\n    control,\n    setValue,\n    reset,\n  } = useForm();\n\n  const submit = async (data) => {\n    onSubmit(data, category);\n    reset({\n      description: '',\n    });\n  };\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.stopPropagation();\n        handleSubmit(submit)(e);\n      }}\n      className={classes.form}\n    >\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"name\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue={category.name || ''}\n            placeholder=\"Name\"\n            // eslint-disable-next-line no-unused-vars\n            render={({ field: { ref, ...rest }, fieldState }) => (\n              <NameInput\n                {...rest}\n                {...fieldState}\n                error={errors.name}\n                onChange={(e) => {\n                  setValue('name', e.currentTarget.value, {\n                    shouldValidate: true,\n                  });\n                }}\n              />\n            )}\n          />\n          {errors.title && <span>Title is required</span>}\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"description\"\n            control={control}\n            defaultValue={category.description || ''}\n            render={({ field }) => (\n              <TextField {...field} fullWidth label=\"Description\" />\n            )}\n          />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CategoryForm from '../CategoryForm';\nimport { addCategory, getCategories } from '../../categoryService';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(${-top}%, ${-left}%)`,\n  };\n}\n\nexport default function CategoryModal({\n  category = {},\n  open = false,\n  handleClose,\n  title = 'Add new category',\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const handleSubmit = (data) => {\n    dispatch(addCategory(data));\n    handleClose();\n    return dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  };\n  const [modalStyle] = useState(getModalStyle);\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <h2>{title}</h2>\n        <CategoryForm category={category} onSubmit={handleSubmit} />\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getPhrases } from '../../phraseService';\nimport { selectPhrases } from '../../phraseSlice';\n\nexport default function WordInput({ onChange, ...props }) {\n  const phrases = useSelector(selectPhrases);\n  const dispatch = useDispatch();\n  const [options, setOptions] = React.useState([]);\n\n  React.useEffect(() => {\n    if (!phrases.length) {\n      dispatch(getPhrases());\n    }\n    setOptions(phrases.map((option) => `${option.title}`));\n  }, [phrases]);\n\n  return (\n    <Autocomplete\n      {...props}\n      fullWidth\n      freeSolo\n      onClose={(e) => onChange(e)}\n      disableClearable\n      id=\"phrase-input\"\n      options={options}\n      renderInput={(params) => <TextField {...params} label=\"Title\" />}\n    />\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport CategoryModal from '../../../category/components/CategoryModal';\nimport WordInput from '../WordInput';\nimport { getCategories } from '../../../category/categoryService';\nimport { selectCategories } from '../../../category/categorySlice';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  inputGroup: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(3),\n    },\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  dropdown: {\n    width: 'calc(100% - 56px)',\n  },\n  addBtn: {\n    width: '56px',\n    marginTop: 0,\n  },\n}));\n\nexport default function AddPhrase({ addPhrase, phrase = {} }) {\n  const classes = useStyles();\n  const categories = useSelector(selectCategories);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const PhraseInput = React.createRef();\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  useEffect(() => {\n    dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  }, []);\n  const {\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    control,\n    reset,\n  } = useForm();\n\n  const onSubmit = async (data) => {\n    addPhrase(data, phrase);\n    reset({\n      meaning: phrase.meaning || '',\n      categories: (phrase && phrase.meaning) || [],\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className={classes.form}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"title\"\n            fullWidth\n            control={control}\n            rules={{ required: true }}\n            defaultValue={phrase.title || ''}\n            placeholder=\"Phrase\"\n            render={({ field: { ref, ...rest }, fieldState }) => (\n              <WordInput\n                {...rest}\n                {...fieldState}\n                error={errors.title}\n                onChange={(e) => {\n                  setValue('title', e.currentTarget.value, {\n                    shouldValidate: true,\n                  });\n                }}\n              />\n            )}\n          />\n          {errors.title && <span>Title is required</span>}\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Controller\n            name=\"meaning\"\n            control={control}\n            defaultValue={phrase.meaning || ''}\n            render={({ field }) => (\n              <TextField {...field} fullWidth label=\"Meaning\" />\n            )}\n          />\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.inputGroup}>\n          <Controller\n            name=\"categories\"\n            render={({ field }) => (\n              <Autocomplete\n                {...field}\n                multiple\n                id=\"categories-input\"\n                options={categories.map((category) => category.id)}\n                getOptionLabel={(option) => {\n                  const item = categories.find(\n                    (category) => category.id === option,\n                  );\n                  return item && item.name;\n                }}\n                className={classes.dropdown}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Categories\"\n                    placeholder=\"Categories\"\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            control={control}\n            defaultValue={phrase.categories || []}\n          />\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            className={classes.addBtn}\n            onClick={handleOpen}\n          >\n            <AddIcon />\n          </Fab>\n        </Grid>\n        <Grid container item xs={12} spacing={1} className={classes.input}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            {' '}\n            Submit{' '}\n          </Button>\n        </Grid>\n      </Grid>\n      <CategoryModal open={open} handleClose={handleClose} />\n    </form>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport AddPhrase from '../AddPhrase';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: '100%',\n    margin: theme.spacing(0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(${-top}%, ${-left}%)`,\n  };\n}\n\nexport default function PhraseModal({\n  updatePhrase,\n  phrase = {},\n  open = false,\n  handleClose,\n}) {\n  const classes = useStyles();\n\n  const [modalStyle] = useState(getModalStyle);\n  return (\n    <Modal\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <AddPhrase addPhrase={updatePhrase} phrase={phrase} />\n      </div>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PhraseItem from '../PhraseItem';\nimport { removePhrase, getPhrases, updatePhrase } from '../../phraseService';\nimport { getCategories } from '../../../category/categoryService';\nimport { selectPhrases } from '../../phraseSlice';\nimport { selectCategories } from '../../../category/categorySlice';\nimport PhraseModal from '../PhraseModal';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  list: {\n    flexGrow: 1,\n  },\n  gridList: {},\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)',\n  },\n}));\n\nexport default function PhraseList({ limit }) {\n  const phrases = useSelector(selectPhrases);\n  const categories = useSelector(selectCategories);\n  const [phrase, setPhrase] = useState();\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = (currentPhrase) => {\n    setPhrase(currentPhrase);\n    setOpen(true);\n  };\n\n  const handleDelete = async (currentPhrase) => {\n    await dispatch(removePhrase(currentPhrase.id));\n    return dispatch(\n      getPhrases({\n        limit: limit || 100,\n        startAt: 0,\n      }),\n    );\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updatePhraseAction = async (data, currentPhrase) => {\n    await dispatch(\n      updatePhrase({\n        ...currentPhrase,\n        ...data,\n      }),\n    );\n    setOpen(false);\n    return dispatch(\n      getPhrases({\n        limit: limit || 100,\n        startAt: 0,\n      }),\n    );\n  };\n  useEffect(() => {\n    dispatch(\n      getPhrases({\n        limit: limit || 100,\n        startAt: 0,\n      }),\n    );\n    dispatch(\n      getCategories({\n        limit: 1000,\n      }),\n    );\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container className={classes.list} spacing={2}>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={2}>\n            {phrases.map((phraseItem) => (\n              <PhraseItem\n                phrase={phraseItem}\n                categories={categories}\n                key={phraseItem.id}\n                handleOpen={handleOpen}\n                handleDelete={handleDelete}\n              />\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n      <PhraseModal\n        open={open}\n        handleClose={handleClose}\n        phrase={phrase}\n        updatePhrase={updatePhraseAction}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport PhraseList from '../../components/PhraseList';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <PhraseList />\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AddPhrase from '../../components/AddPhrase';\nimport PhraseList from '../../components/PhraseList';\nimport { addPhrase, getPhrases } from '../../phraseService';\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(1, 0, 0, 0),\n  },\n  form: {\n    width: '100%',\n    padding: theme.spacing(0, 0, 0, 2),\n  },\n  input: {\n    padding: theme.spacing(1, 0),\n    margin: theme.spacing(0.2, 0, 0, 0),\n  },\n}));\n\nexport default function MainPage() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const addPhraseAction = async (data) => {\n    await dispatch(addPhrase(data));\n    return dispatch(getPhrases({ limit: 9 }));\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\"\n      className={classes.body}\n    >\n      <Grid container item xs={12} className={classes.form}>\n        <AddPhrase addPhrase={addPhraseAction} />\n      </Grid>\n      <Grid container item xs={12} className={classes.form}>\n        <PhraseList limit=\"9\" />\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport NotFound from '../../components/NotFound';\nimport MainPage from './pages/Main';\nimport AddPhrase from './pages/Add';\n\nfunction Phrase() {\n  const match = useRouteMatch();\n  return (\n    <Switch>\n      <Route exact path={match.url} component={MainPage} />\n      <Route path={`${match.url}/new`} component={AddPhrase} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nPhrase.propTypes = {};\n\nexport default Phrase;\n","import React from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Phrase from '../features/phrase';\nimport NotFound from '../components/NotFound';\n\nconst Routes = () => (\n  <Switch>\n    <Redirect exact from=\"/\" to=\"/phrases\" />\n    <Route path=\"/phrases\" component={Phrase} />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default Routes;\n","import React, { Suspense } from 'react';\nimport './App.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { HashRouter } from 'react-router-dom';\nimport AppBar from './components/AppBar';\n\nimport Routers from './routers';\n\nfunction App() {\n  return (\n    <Suspense fallback={<LinearProgress />}>\n      <HashRouter>\n        <AppBar />\n        <Routers />\n      </HashRouter>\n    </Suspense>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport phraseReducer from '../features/phrase/phraseSlice';\nimport categoryReducer from '../features/category/categorySlice';\n\nexport default configureStore({\n  reducer: {\n    phrase: phraseReducer,\n    category: categoryReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}